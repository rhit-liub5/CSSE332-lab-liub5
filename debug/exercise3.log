+source ~/.gef/gef.py
++set confirm off
++set verbose off
++set pagination off
++set print elements 0
++set history save on
++set history filename ~/.gdb_history
++set output-radix 0x10
++set print pretty on
++set disassembly-flavor intel
++handle SIGALRM print nopass
++save gdb-index '/tmp/gef'
GEF for linux ready, type `gef' to start, `gef config' to configure
93 commands loaded and 5 functions added for GDB 12.1 in 0.00ms using Python engine 3.10
++define target hookpost-remote
++define target hookpost-extended-remote
++define hookpost-source
++pi gef.gdb.load()
Reading symbols from ./student.bin...
+b main
Breakpoint 1 at 0x1377: file student.c, line 105.
+run
Starting program: /home/liub5/CSSE332-lab-liub5/debug/student.bin 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=0x1, argv=0x7fffffffdd28) at student.c:105
warning: Source file is more recent than executable.
105	  init_node(&head);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555377  →  <++++info symbol 0x555555555377
main+0013> lea rax, [rip+0x2d02]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555536c <+++info symbol 0x55555555536c
main+0008> sub    rsp, 0x20
   0x555555555370 <+++info symbol 0x555555555370
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555373 <+++info symbol 0x555555555373
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x555555555377 <++++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
   0x555555555386 <+++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+105 ────
    100	 
    101	 int main(int argc, char **argv) {
    102	   int i, j, num_tests;
    103	 
    104	   // 1. Init the head
 →  105	   init_node(&head);
    106	 
    107	   // 2. Get which test to run.
    108	   num_tests = parse_args(argc, argv);
    109	 
    110	   switch(num_tests) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555377 in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555377 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555377  →  <++++info symbol 0x555555555377
main+0013> lea rax, [rip+0x2d02]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555536c <+++info symbol 0x55555555536c
main+0008> sub    rsp, 0x20
   0x555555555370 <+++info symbol 0x555555555370
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555373 <+++info symbol 0x555555555373
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x555555555377 <++++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
   0x555555555386 <+++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+105 ────
    100	 
    101	 int main(int argc, char **argv) {
    102	   int i, j, num_tests;
    103	 
    104	   // 1. Init the head
 →  105	   init_node(&head);
    106	 
    107	   // 2. Get which test to run.
    108	   num_tests = parse_args(argc, argv);
    109	 
    110	   switch(num_tests) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555377 in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555377 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+info local
i = 0x0
j = 0x55555160
num_tests = 0x5555
+(gdb) show output-radix
Undefined command: "".  Try "help".
+show output-radix
Default output radix for printing of values is 16.
+set output-radix 10
Output radix now set to decimal 10, hex a, octal 12.
+info local
i = 0
j = 1431654752
num_tests = 21845
+quit
+source ~/.gef/gef.py
++set confirm off
++set verbose off
++set pagination off
++set print elements 0
++set history save on
++set history filename ~/.gdb_history
++set output-radix 0x10
++set print pretty on
++set disassembly-flavor intel
++handle SIGALRM print nopass
++save gdb-index '/tmp/gef'
GEF for linux ready, type `gef' to start, `gef config' to configure
93 commands loaded and 5 functions added for GDB 12.1 in 0.00ms using Python engine 3.10
++define target hookpost-remote
++define target hookpost-extended-remote
++define hookpost-source
++pi gef.gdb.load()
Reading symbols from ./student.bin...
+b main
Breakpoint 1 at 0x1377: file student.c, line 105.
+info b
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x0000000000001377 in main at student.c:105
+run
Starting program: /home/liub5/CSSE332-lab-liub5/debug/student.bin 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=0x1, argv=0x7fffffffdd28) at student.c:105
warning: Source file is more recent than executable.
105	  init_node(&head);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555377  →  <++++info symbol 0x555555555377
main+0013> lea rax, [rip+0x2d02]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555536c <+++info symbol 0x55555555536c
main+0008> sub    rsp, 0x20
   0x555555555370 <+++info symbol 0x555555555370
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555373 <+++info symbol 0x555555555373
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x555555555377 <++++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
   0x555555555386 <+++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+105 ────
    100	 
    101	 int main(int argc, char **argv) {
    102	   int i, j, num_tests;
    103	 
    104	   // 1. Init the head
 →  105	   init_node(&head);
    106	 
    107	   // 2. Get which test to run.
    108	   num_tests = parse_args(argc, argv);
    109	 
    110	   switch(num_tests) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555377 in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555377 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555377  →  <++++info symbol 0x555555555377
main+0013> lea rax, [rip+0x2d02]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555536c <+++info symbol 0x55555555536c
main+0008> sub    rsp, 0x20
   0x555555555370 <+++info symbol 0x555555555370
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555373 <+++info symbol 0x555555555373
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x555555555377 <++++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
   0x555555555386 <+++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+105 ────
    100	 
    101	 int main(int argc, char **argv) {
    102	   int i, j, num_tests;
    103	 
    104	   // 1. Init the head
 →  105	   init_node(&head);
    106	 
    107	   // 2. Get which test to run.
    108	   num_tests = parse_args(argc, argv);
    109	 
    110	   switch(num_tests) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555377 in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555377 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+info local
i = 0x0
j = 0x55555160
num_tests = 0x5555
+set output-radix 10
Output radix now set to decimal 10, hex a, octal 12.
+info local
i = 0
j = 1431654752
num_tests = 21845
+n
108	  num_tests = parse_args(argc, argv);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555386  →  <++++info symbol 0x555555555386
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555377 <+++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
 → 0x555555555386 <++++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+108 ────
    103	 
    104	   // 1. Init the head
    105	   init_node(&head);
    106	 
    107	   // 2. Get which test to run.
           // argc=0x1, argv=0x00007fffffffdbf0  →  [...]  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin", num_tests=0x5555
 →  108	   num_tests = parse_args(argc, argv);
    109	 
    110	   switch(num_tests) {
    111	     case 0:
    112	       // Allocate nodes and set the grades.
    113	       for(i = 0; i < NUM_STUDENTS; i++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555386 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555386 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555386  →  <++++info symbol 0x555555555386
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555377 <+++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
 → 0x555555555386 <++++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+108 ────
    103	 
    104	   // 1. Init the head
    105	   init_node(&head);
    106	 
    107	   // 2. Get which test to run.
           // argc=0x1, argv=0x00007fffffffdbf0  →  [...]  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin", num_tests=0x5555
 →  108	   num_tests = parse_args(argc, argv);
    109	 
    110	   switch(num_tests) {
    111	     case 0:
    112	       // Allocate nodes and set the grades.
    113	       for(i = 0; i < NUM_STUDENTS; i++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555386 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555386 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
110	  switch(num_tests) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x000055555555539a  →  <++++info symbol 0x55555555539a
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x55555555539a <++++info symbol 0x55555555539a
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x55555555539e <+++info symbol 0x55555555539e
main+003a> je     0x5555555555cc <main+616>
   0x5555555553a4 <+++info symbol 0x5555555553a4
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553a8 <+++info symbol 0x5555555553a8
main+0044> jg     0x5555555555df <main+635>
   0x5555555553ae <+++info symbol 0x5555555553ae
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553b2 <+++info symbol 0x5555555553b2
main+004e> je     0x5555555555b9 <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+110 ────
    105	   init_node(&head);
    106	 
    107	   // 2. Get which test to run.
    108	   num_tests = parse_args(argc, argv);
    109	 
           // num_tests=-0x1
 →  110	   switch(num_tests) {
    111	     case 0:
    112	       // Allocate nodes and set the grades.
    113	       for(i = 0; i < NUM_STUDENTS; i++) {
    114	         students[i] = alloc_student(names[i]);
    115	         for(j = 0; j < NUM_EXAMS; j++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539a in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539a → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x000055555555539a  →  <++++info symbol 0x55555555539a
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x55555555539a <++++info symbol 0x55555555539a
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x55555555539e <+++info symbol 0x55555555539e
main+003a> je     0x5555555555cc <main+616>
   0x5555555553a4 <+++info symbol 0x5555555553a4
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553a8 <+++info symbol 0x5555555553a8
main+0044> jg     0x5555555555df <main+635>
   0x5555555553ae <+++info symbol 0x5555555553ae
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553b2 <+++info symbol 0x5555555553b2
main+004e> je     0x5555555555b9 <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+110 ────
    105	   init_node(&head);
    106	 
    107	   // 2. Get which test to run.
    108	   num_tests = parse_args(argc, argv);
    109	 
           // num_tests=-0x1
 →  110	   switch(num_tests) {
    111	     case 0:
    112	       // Allocate nodes and set the grades.
    113	       for(i = 0; i < NUM_STUDENTS; i++) {
    114	         students[i] = alloc_student(names[i]);
    115	         for(j = 0; j < NUM_EXAMS; j++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539a in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539a → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
150	      if(!test1()) exit(EXIT_FAILURE);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555df  →  <++++info symbol 0x5555555555df
main+027b> call 0x5555555556e9 <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555d3 <+++info symbol 0x5555555555d3
main+026f> jne    0x55555555561e <main+698>
   0x5555555555d5 <+++info symbol 0x5555555555d5
main+0271> mov    edi, 0x1
   0x5555555555da <+++info symbol 0x5555555555da
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555df <++++info symbol 0x5555555555df
main+027b> call   0x5555555556e9 <test1>
   ↳  0x5555555556e9 <+++info symbol 0x5555555556e9
test1+0000> endbr64 
      0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
      0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
      0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
      0x5555555556f5 <+++info symbol 0x5555555556f5
test1+000c> lea    rax, [rip+0x90c]        # 0x555555556008
      0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+150 ────
    145	     case 3:
    146	       if(!test3()) exit(EXIT_FAILURE);
    147	       break;
    148	     case -1:
    149	     default:
 →  150	       if(!test1()) exit(EXIT_FAILURE);
    151	       if(!test2()) exit(EXIT_FAILURE);
    152	       if(!test3()) exit(EXIT_FAILURE);
    153	       break;
    154	   }
    155	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555df in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555df → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555df  →  <++++info symbol 0x5555555555df
main+027b> call 0x5555555556e9 <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555d3 <+++info symbol 0x5555555555d3
main+026f> jne    0x55555555561e <main+698>
   0x5555555555d5 <+++info symbol 0x5555555555d5
main+0271> mov    edi, 0x1
   0x5555555555da <+++info symbol 0x5555555555da
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555df <++++info symbol 0x5555555555df
main+027b> call   0x5555555556e9 <test1>
   ↳  0x5555555556e9 <+++info symbol 0x5555555556e9
test1+0000> endbr64 
      0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
      0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
      0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
      0x5555555556f5 <+++info symbol 0x5555555556f5
test1+000c> lea    rax, [rip+0x90c]        # 0x555555556008
      0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+150 ────
    145	     case 3:
    146	       if(!test3()) exit(EXIT_FAILURE);
    147	       break;
    148	     case -1:
    149	     default:
 →  150	       if(!test1()) exit(EXIT_FAILURE);
    151	       if(!test2()) exit(EXIT_FAILURE);
    152	       if(!test3()) exit(EXIT_FAILURE);
    153	       break;
    154	   }
    155	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555df in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555df → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
[Inferior 1 (process 4611) exited with code 01]
+run
Starting program: /home/liub5/CSSE332-lab-liub5/debug/student.bin 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=1, argv=0x7fffffffdd28) at student.c:105
105	  init_node(&head);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555377  →  <++++info symbol 0x555555555377
main+0013> lea rax, [rip+0x2d02]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555536c <+++info symbol 0x55555555536c
main+0008> sub    rsp, 0x20
   0x555555555370 <+++info symbol 0x555555555370
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555373 <+++info symbol 0x555555555373
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x555555555377 <++++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
   0x555555555386 <+++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+105 ────
    100	 
    101	 int main(int argc, char **argv) {
    102	   int i, j, num_tests;
    103	 
    104	   // 1. Init the head
 →  105	   init_node(&head);
    106	 
    107	   // 2. Get which test to run.
    108	   num_tests = parse_args(argc, argv);
    109	 
    110	   switch(num_tests) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555377 in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555377 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555377  →  <++++info symbol 0x555555555377
main+0013> lea rax, [rip+0x2d02]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555536c <+++info symbol 0x55555555536c
main+0008> sub    rsp, 0x20
   0x555555555370 <+++info symbol 0x555555555370
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555373 <+++info symbol 0x555555555373
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x555555555377 <++++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
   0x555555555386 <+++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+105 ────
    100	 
    101	 int main(int argc, char **argv) {
    102	   int i, j, num_tests;
    103	 
    104	   // 1. Init the head
 →  105	   init_node(&head);
    106	 
    107	   // 2. Get which test to run.
    108	   num_tests = parse_args(argc, argv);
    109	 
    110	   switch(num_tests) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555377 in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555377 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
init_node (node=0x555555558080 <head>) at sllist.c:28
28	  node->next = node;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000000000000000
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000000000000000
$rip   : 0x0000555555555a3a  →  <++++info symbol 0x555555555a3a
init_node+000c> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbe8│+0x0008: 0x0000555555555386  →  <++++info symbol 0x555555555386
main+0022> mov rdx, QWORD PTR [rbp-0x20]
0x00007fffffffdbf0│+0x0010: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0018: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0020: 0x0000000000001000
0x00007fffffffdc08│+0x0028: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0030: 0x0000000000000001
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555a32 <+++info symbol 0x555555555a32
init_node+0004> push   rbp
   0x555555555a33 <+++info symbol 0x555555555a33
init_node+0005> mov    rbp, rsp
   0x555555555a36 <+++info symbol 0x555555555a36
init_node+0008> mov    QWORD PTR [rbp-0x8], rdi
 → 0x555555555a3a <++++info symbol 0x555555555a3a
init_node+000c> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555a3e <+++info symbol 0x555555555a3e
init_node+0010> mov    rdx, QWORD PTR [rbp-0x8]
   0x555555555a42 <+++info symbol 0x555555555a42
init_node+0014> mov    QWORD PTR [rax], rdx
   0x555555555a45 <+++info symbol 0x555555555a45
init_node+0017> nop    
   0x555555555a46 <+++info symbol 0x555555555a46
init_node+0018> pop    rbp
   0x555555555a47 <+++info symbol 0x555555555a47
init_node+0019> ret    
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+28 ────
     23	 #include "sllist.h"
     24	 
     25	 void init_node(struct list_node *node)
     26	 {
     27	   // circular linked list, so next points to self when empty or not in use.
           // node=0x00007fffffffdbd8  →  [...]  →  0x0000000000000000
 →   28	   node->next = node;
     29	 }
     30	 
     31	 // add at head
     32	 void add_head(struct list_node *head, struct list_node *node)
     33	 {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555a3a in init_node (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555a3a → init_node(node=0x555555558080 <head>)
[#1] 0x555555555386 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000000000000000
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000000000000000
$rip   : 0x0000555555555a3a  →  <++++info symbol 0x555555555a3a
init_node+000c> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbe8│+0x0008: 0x0000555555555386  →  <++++info symbol 0x555555555386
main+0022> mov rdx, QWORD PTR [rbp-0x20]
0x00007fffffffdbf0│+0x0010: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0018: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0020: 0x0000000000001000
0x00007fffffffdc08│+0x0028: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0030: 0x0000000000000001
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555a32 <+++info symbol 0x555555555a32
init_node+0004> push   rbp
   0x555555555a33 <+++info symbol 0x555555555a33
init_node+0005> mov    rbp, rsp
   0x555555555a36 <+++info symbol 0x555555555a36
init_node+0008> mov    QWORD PTR [rbp-0x8], rdi
 → 0x555555555a3a <++++info symbol 0x555555555a3a
init_node+000c> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555a3e <+++info symbol 0x555555555a3e
init_node+0010> mov    rdx, QWORD PTR [rbp-0x8]
   0x555555555a42 <+++info symbol 0x555555555a42
init_node+0014> mov    QWORD PTR [rax], rdx
   0x555555555a45 <+++info symbol 0x555555555a45
init_node+0017> nop    
   0x555555555a46 <+++info symbol 0x555555555a46
init_node+0018> pop    rbp
   0x555555555a47 <+++info symbol 0x555555555a47
init_node+0019> ret    
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+28 ────
     23	 #include "sllist.h"
     24	 
     25	 void init_node(struct list_node *node)
     26	 {
     27	   // circular linked list, so next points to self when empty or not in use.
           // node=0x00007fffffffdbd8  →  [...]  →  0x0000000000000000
 →   28	   node->next = node;
     29	 }
     30	 
     31	 // add at head
     32	 void add_head(struct list_node *head, struct list_node *node)
     33	 {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555a3a in init_node (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555a3a → init_node(node=0x555555558080 <head>)
[#1] 0x555555555386 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+info local
No locals.
+info args
node = 0x555555558080 <head>
+p *node@10
$1 = {{
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }}
+n
29	}
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555a45  →  <++++info symbol 0x555555555a45
init_node+0017> nop 
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbe8│+0x0008: 0x0000555555555386  →  <++++info symbol 0x555555555386
main+0022> mov rdx, QWORD PTR [rbp-0x20]
0x00007fffffffdbf0│+0x0010: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0018: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0020: 0x0000000000001000
0x00007fffffffdc08│+0x0028: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0030: 0x0000000000000001
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555a3a <+++info symbol 0x555555555a3a
init_node+000c> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555a3e <+++info symbol 0x555555555a3e
init_node+0010> mov    rdx, QWORD PTR [rbp-0x8]
   0x555555555a42 <+++info symbol 0x555555555a42
init_node+0014> mov    QWORD PTR [rax], rdx
 → 0x555555555a45 <++++info symbol 0x555555555a45
init_node+0017> nop    
   0x555555555a46 <+++info symbol 0x555555555a46
init_node+0018> pop    rbp
   0x555555555a47 <+++info symbol 0x555555555a47
init_node+0019> ret    
   0x555555555a48 <+++info symbol 0x555555555a48
add_head+0000> endbr64 
   0x555555555a4c <+++info symbol 0x555555555a4c
add_head+0004> push   rbp
   0x555555555a4d <+++info symbol 0x555555555a4d
add_head+0005> mov    rbp, rsp
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+29 ────
     24	 
     25	 void init_node(struct list_node *node)
     26	 {
     27	   // circular linked list, so next points to self when empty or not in use.
     28	   node->next = node;
 →   29	 }
     30	 
     31	 // add at head
     32	 void add_head(struct list_node *head, struct list_node *node)
     33	 {
     34	   node->next = head->next;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555a45 in init_node (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555a45 → init_node(node=0x555555558080 <head>)
[#1] 0x555555555386 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555a45  →  <++++info symbol 0x555555555a45
init_node+0017> nop 
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbe8│+0x0008: 0x0000555555555386  →  <++++info symbol 0x555555555386
main+0022> mov rdx, QWORD PTR [rbp-0x20]
0x00007fffffffdbf0│+0x0010: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0018: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0020: 0x0000000000001000
0x00007fffffffdc08│+0x0028: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0030: 0x0000000000000001
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555a3a <+++info symbol 0x555555555a3a
init_node+000c> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555a3e <+++info symbol 0x555555555a3e
init_node+0010> mov    rdx, QWORD PTR [rbp-0x8]
   0x555555555a42 <+++info symbol 0x555555555a42
init_node+0014> mov    QWORD PTR [rax], rdx
 → 0x555555555a45 <++++info symbol 0x555555555a45
init_node+0017> nop    
   0x555555555a46 <+++info symbol 0x555555555a46
init_node+0018> pop    rbp
   0x555555555a47 <+++info symbol 0x555555555a47
init_node+0019> ret    
   0x555555555a48 <+++info symbol 0x555555555a48
add_head+0000> endbr64 
   0x555555555a4c <+++info symbol 0x555555555a4c
add_head+0004> push   rbp
   0x555555555a4d <+++info symbol 0x555555555a4d
add_head+0005> mov    rbp, rsp
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+29 ────
     24	 
     25	 void init_node(struct list_node *node)
     26	 {
     27	   // circular linked list, so next points to self when empty or not in use.
     28	   node->next = node;
 →   29	 }
     30	 
     31	 // add at head
     32	 void add_head(struct list_node *head, struct list_node *node)
     33	 {
     34	   node->next = head->next;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555a45 in init_node (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555a45 → init_node(node=0x555555558080 <head>)
[#1] 0x555555555386 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
main (argc=1, argv=0x7fffffffdd28) at student.c:108
108	  num_tests = parse_args(argc, argv);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555386  →  <++++info symbol 0x555555555386
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555377 <+++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
 → 0x555555555386 <++++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+108 ────
    103	 
    104	   // 1. Init the head
    105	   init_node(&head);
    106	 
    107	   // 2. Get which test to run.
           // argc=0x1, argv=0x00007fffffffdbf0  →  [...]  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin", num_tests=0x5555
 →  108	   num_tests = parse_args(argc, argv);
    109	 
    110	   switch(num_tests) {
    111	     case 0:
    112	       // Allocate nodes and set the grades.
    113	       for(i = 0; i < NUM_STUDENTS; i++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555386 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555386 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555386  →  <++++info symbol 0x555555555386
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555377 <+++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
 → 0x555555555386 <++++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+108 ────
    103	 
    104	   // 1. Init the head
    105	   init_node(&head);
    106	 
    107	   // 2. Get which test to run.
           // argc=0x1, argv=0x00007fffffffdbf0  →  [...]  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin", num_tests=0x5555
 →  108	   num_tests = parse_args(argc, argv);
    109	 
    110	   switch(num_tests) {
    111	     case 0:
    112	       // Allocate nodes and set the grades.
    113	       for(i = 0; i < NUM_STUDENTS; i++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555386 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555386 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
parse_args (argc=1, argv=0x7fffffffdd28) at student.c:167
167	  int tests = -1;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x000055555555563f  →  <++++info symbol 0x55555555563f
parse_args+0013> mov DWORD PTR [rbp-0x4], 0xffffffff
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbc8│+0x0008: 0x00000001ffffdfa9
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0028: 0x0000555555555397  →  <++++info symbol 0x555555555397
main+0033> mov DWORD PTR [rbp-0x4], eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555634 <+++info symbol 0x555555555634
parse_args+0008> sub    rsp, 0x20
   0x555555555638 <+++info symbol 0x555555555638
parse_args+000c> mov    DWORD PTR [rbp-0x14], edi
   0x55555555563b <+++info symbol 0x55555555563b
parse_args+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x55555555563f <++++info symbol 0x55555555563f
parse_args+0013> mov    DWORD PTR [rbp-0x4], 0xffffffff
   0x555555555646 <+++info symbol 0x555555555646
parse_args+001a> mov    DWORD PTR [rip+0x2a18], 0x0        # 0x555555558068 <opterr@GLIBC_2.2.5>
   0x555555555650 <+++info symbol 0x555555555650
parse_args+0024> jmp    0x5555555556bf <parse_args+147>
   0x555555555652 <+++info symbol 0x555555555652
parse_args+0026> movsx  eax, BYTE PTR [rbp-0x5]
   0x555555555656 <+++info symbol 0x555555555656
parse_args+002a> cmp    eax, 0x74
   0x555555555659 <+++info symbol 0x555555555659
parse_args+002d> jne    0x555555555679 <parse_args+77>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+167 ────
    162	 
    163	 #define IS_EMPTY(h) (h.next == &h)
    164	 
    165	 int parse_args(int argc, char **argv) {
    166	   char c;
           // tests=0x5555
 →  167	   int tests = -1;
    168	 
    169	   opterr = 0;
    170	   while((c = getopt(argc, argv, "ht:")) != -1) {
    171	     switch(c) {
    172	       case 't':
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555563f in parse_args (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555563f → parse_args(argc=1, argv=0x7fffffffdd28)
[#1] 0x555555555397 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x000055555555563f  →  <++++info symbol 0x55555555563f
parse_args+0013> mov DWORD PTR [rbp-0x4], 0xffffffff
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbc8│+0x0008: 0x00000001ffffdfa9
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0028: 0x0000555555555397  →  <++++info symbol 0x555555555397
main+0033> mov DWORD PTR [rbp-0x4], eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555634 <+++info symbol 0x555555555634
parse_args+0008> sub    rsp, 0x20
   0x555555555638 <+++info symbol 0x555555555638
parse_args+000c> mov    DWORD PTR [rbp-0x14], edi
   0x55555555563b <+++info symbol 0x55555555563b
parse_args+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x55555555563f <++++info symbol 0x55555555563f
parse_args+0013> mov    DWORD PTR [rbp-0x4], 0xffffffff
   0x555555555646 <+++info symbol 0x555555555646
parse_args+001a> mov    DWORD PTR [rip+0x2a18], 0x0        # 0x555555558068 <opterr@GLIBC_2.2.5>
   0x555555555650 <+++info symbol 0x555555555650
parse_args+0024> jmp    0x5555555556bf <parse_args+147>
   0x555555555652 <+++info symbol 0x555555555652
parse_args+0026> movsx  eax, BYTE PTR [rbp-0x5]
   0x555555555656 <+++info symbol 0x555555555656
parse_args+002a> cmp    eax, 0x74
   0x555555555659 <+++info symbol 0x555555555659
parse_args+002d> jne    0x555555555679 <parse_args+77>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+167 ────
    162	 
    163	 #define IS_EMPTY(h) (h.next == &h)
    164	 
    165	 int parse_args(int argc, char **argv) {
    166	   char c;
           // tests=0x5555
 →  167	   int tests = -1;
    168	 
    169	   opterr = 0;
    170	   while((c = getopt(argc, argv, "ht:")) != -1) {
    171	     switch(c) {
    172	       case 't':
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555563f in parse_args (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555563f → parse_args(argc=1, argv=0x7fffffffdd28)
[#1] 0x555555555397 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
169	  opterr = 0;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555646  →  <++++info symbol 0x555555555646
parse_args+001a> mov DWORD PTR [rip+0x2a18], 0x0        # 0x555555558068 <opterr@GLIBC_2.2.5>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbc8│+0x0008: 0x00000001ffffdfa9
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0xffffffff55558080
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0028: 0x0000555555555397  →  <++++info symbol 0x555555555397
main+0033> mov DWORD PTR [rbp-0x4], eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555638 <+++info symbol 0x555555555638
parse_args+000c> mov    DWORD PTR [rbp-0x14], edi
   0x55555555563b <+++info symbol 0x55555555563b
parse_args+000f> mov    QWORD PTR [rbp-0x20], rsi
   0x55555555563f <+++info symbol 0x55555555563f
parse_args+0013> mov    DWORD PTR [rbp-0x4], 0xffffffff
 → 0x555555555646 <++++info symbol 0x555555555646
parse_args+001a> mov    DWORD PTR [rip+0x2a18], 0x0        # 0x555555558068 <opterr@GLIBC_2.2.5>
   0x555555555650 <+++info symbol 0x555555555650
parse_args+0024> jmp    0x5555555556bf <parse_args+147>
   0x555555555652 <+++info symbol 0x555555555652
parse_args+0026> movsx  eax, BYTE PTR [rbp-0x5]
   0x555555555656 <+++info symbol 0x555555555656
parse_args+002a> cmp    eax, 0x74
   0x555555555659 <+++info symbol 0x555555555659
parse_args+002d> jne    0x555555555679 <parse_args+77>
   0x55555555565b <+++info symbol 0x55555555565b
parse_args+002f> mov    rax, QWORD PTR [rip+0x29fe]        # 0x555555558060 <optarg@GLIBC_2.2.5>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+169 ────
    164	 
    165	 int parse_args(int argc, char **argv) {
    166	   char c;
    167	   int tests = -1;
    168	 
 →  169	   opterr = 0;
    170	   while((c = getopt(argc, argv, "ht:")) != -1) {
    171	     switch(c) {
    172	       case 't':
    173	       tests = strtol(optarg, 0, 10);
    174	       break;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555646 in parse_args (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555646 → parse_args(argc=1, argv=0x7fffffffdd28)
[#1] 0x555555555397 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555646  →  <++++info symbol 0x555555555646
parse_args+001a> mov DWORD PTR [rip+0x2a18], 0x0        # 0x555555558068 <opterr@GLIBC_2.2.5>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbc8│+0x0008: 0x00000001ffffdfa9
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0xffffffff55558080
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0028: 0x0000555555555397  →  <++++info symbol 0x555555555397
main+0033> mov DWORD PTR [rbp-0x4], eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555638 <+++info symbol 0x555555555638
parse_args+000c> mov    DWORD PTR [rbp-0x14], edi
   0x55555555563b <+++info symbol 0x55555555563b
parse_args+000f> mov    QWORD PTR [rbp-0x20], rsi
   0x55555555563f <+++info symbol 0x55555555563f
parse_args+0013> mov    DWORD PTR [rbp-0x4], 0xffffffff
 → 0x555555555646 <++++info symbol 0x555555555646
parse_args+001a> mov    DWORD PTR [rip+0x2a18], 0x0        # 0x555555558068 <opterr@GLIBC_2.2.5>
   0x555555555650 <+++info symbol 0x555555555650
parse_args+0024> jmp    0x5555555556bf <parse_args+147>
   0x555555555652 <+++info symbol 0x555555555652
parse_args+0026> movsx  eax, BYTE PTR [rbp-0x5]
   0x555555555656 <+++info symbol 0x555555555656
parse_args+002a> cmp    eax, 0x74
   0x555555555659 <+++info symbol 0x555555555659
parse_args+002d> jne    0x555555555679 <parse_args+77>
   0x55555555565b <+++info symbol 0x55555555565b
parse_args+002f> mov    rax, QWORD PTR [rip+0x29fe]        # 0x555555558060 <optarg@GLIBC_2.2.5>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+169 ────
    164	 
    165	 int parse_args(int argc, char **argv) {
    166	   char c;
    167	   int tests = -1;
    168	 
 →  169	   opterr = 0;
    170	   while((c = getopt(argc, argv, "ht:")) != -1) {
    171	     switch(c) {
    172	       case 't':
    173	       tests = strtol(optarg, 0, 10);
    174	       break;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555646 in parse_args (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555646 → parse_args(argc=1, argv=0x7fffffffdd28)
[#1] 0x555555555397 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
170	  while((c = getopt(argc, argv, "ht:")) != -1) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555650  →  <++++info symbol 0x555555555650
parse_args+0024> jmp 0x5555555556bf <parse_args+147>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbc8│+0x0008: 0x00000001ffffdfa9
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0xffffffff55558080
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0028: 0x0000555555555397  →  <++++info symbol 0x555555555397
main+0033> mov DWORD PTR [rbp-0x4], eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555563b <+++info symbol 0x55555555563b
parse_args+000f> mov    QWORD PTR [rbp-0x20], rsi
   0x55555555563f <+++info symbol 0x55555555563f
parse_args+0013> mov    DWORD PTR [rbp-0x4], 0xffffffff
   0x555555555646 <+++info symbol 0x555555555646
parse_args+001a> mov    DWORD PTR [rip+0x2a18], 0x0        # 0x555555558068 <opterr@GLIBC_2.2.5>
 → 0x555555555650 <++++info symbol 0x555555555650
parse_args+0024> jmp    0x5555555556bf <parse_args+147>
   0x555555555652 <+++info symbol 0x555555555652
parse_args+0026> movsx  eax, BYTE PTR [rbp-0x5]
   0x555555555656 <+++info symbol 0x555555555656
parse_args+002a> cmp    eax, 0x74
   0x555555555659 <+++info symbol 0x555555555659
parse_args+002d> jne    0x555555555679 <parse_args+77>
   0x55555555565b <+++info symbol 0x55555555565b
parse_args+002f> mov    rax, QWORD PTR [rip+0x29fe]        # 0x555555558060 <optarg@GLIBC_2.2.5>
   0x555555555662 <+++info symbol 0x555555555662
parse_args+0036> mov    edx, 0xa
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+170 ────
    165	 int parse_args(int argc, char **argv) {
    166	   char c;
    167	   int tests = -1;
    168	 
    169	   opterr = 0;
           // argc=0x1, argv=0x00007fffffffdbc0  →  [...]  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin", c=0x55
 →  170	   while((c = getopt(argc, argv, "ht:")) != -1) {
    171	     switch(c) {
    172	       case 't':
    173	       tests = strtol(optarg, 0, 10);
    174	       break;
    175	       case 'h':
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555650 in parse_args (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555650 → parse_args(argc=1, argv=0x7fffffffdd28)
[#1] 0x555555555397 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555650  →  <++++info symbol 0x555555555650
parse_args+0024> jmp 0x5555555556bf <parse_args+147>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbc8│+0x0008: 0x00000001ffffdfa9
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0xffffffff55558080
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0028: 0x0000555555555397  →  <++++info symbol 0x555555555397
main+0033> mov DWORD PTR [rbp-0x4], eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555563b <+++info symbol 0x55555555563b
parse_args+000f> mov    QWORD PTR [rbp-0x20], rsi
   0x55555555563f <+++info symbol 0x55555555563f
parse_args+0013> mov    DWORD PTR [rbp-0x4], 0xffffffff
   0x555555555646 <+++info symbol 0x555555555646
parse_args+001a> mov    DWORD PTR [rip+0x2a18], 0x0        # 0x555555558068 <opterr@GLIBC_2.2.5>
 → 0x555555555650 <++++info symbol 0x555555555650
parse_args+0024> jmp    0x5555555556bf <parse_args+147>
   0x555555555652 <+++info symbol 0x555555555652
parse_args+0026> movsx  eax, BYTE PTR [rbp-0x5]
   0x555555555656 <+++info symbol 0x555555555656
parse_args+002a> cmp    eax, 0x74
   0x555555555659 <+++info symbol 0x555555555659
parse_args+002d> jne    0x555555555679 <parse_args+77>
   0x55555555565b <+++info symbol 0x55555555565b
parse_args+002f> mov    rax, QWORD PTR [rip+0x29fe]        # 0x555555558060 <optarg@GLIBC_2.2.5>
   0x555555555662 <+++info symbol 0x555555555662
parse_args+0036> mov    edx, 0xa
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+170 ────
    165	 int parse_args(int argc, char **argv) {
    166	   char c;
    167	   int tests = -1;
    168	 
    169	   opterr = 0;
           // argc=0x1, argv=0x00007fffffffdbc0  →  [...]  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin", c=0x55
 →  170	   while((c = getopt(argc, argv, "ht:")) != -1) {
    171	     switch(c) {
    172	       case 't':
    173	       tests = strtol(optarg, 0, 10);
    174	       break;
    175	       case 'h':
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555650 in parse_args (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555650 → parse_args(argc=1, argv=0x7fffffffdd28)
[#1] 0x555555555397 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
185	  return tests;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555556e4  →  <++++info symbol 0x5555555556e4
parse_args+00b8> mov eax, DWORD PTR [rbp-0x4]
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbc8│+0x0008: 0x00000001ffffdfa9
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0xffffffffff558080
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0028: 0x0000555555555397  →  <++++info symbol 0x555555555397
main+0033> mov DWORD PTR [rbp-0x4], eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555556d7 <+++info symbol 0x5555555556d7
parse_args+00ab> mov    BYTE PTR [rbp-0x5], al
   0x5555555556da <+++info symbol 0x5555555556da
parse_args+00ae> cmp    BYTE PTR [rbp-0x5], 0xff
   0x5555555556de <+++info symbol 0x5555555556de
parse_args+00b2> jne    0x555555555652 <parse_args+38>
 → 0x5555555556e4 <++++info symbol 0x5555555556e4
parse_args+00b8> mov    eax, DWORD PTR [rbp-0x4]
   0x5555555556e7 <+++info symbol 0x5555555556e7
parse_args+00bb> leave  
   0x5555555556e8 <+++info symbol 0x5555555556e8
parse_args+00bc> ret    
   0x5555555556e9 <+++info symbol 0x5555555556e9
test1+0000> endbr64 
   0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
   0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+185 ────
    180	       printf("       -t 0 runs the small demo\n");
    181	       exit(EXIT_FAILURE);
    182	     }
    183	   }
    184	 
           // tests=-0x1
 →  185	   return tests;
    186	 }
    187	 
    188	 int test1(void) {
    189	   struct student *st = alloc_student("Mohammad");
    190	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555556e4 in parse_args (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555556e4 → parse_args(argc=1, argv=0x7fffffffdd28)
[#1] 0x555555555397 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555556e4  →  <++++info symbol 0x5555555556e4
parse_args+00b8> mov eax, DWORD PTR [rbp-0x4]
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbc8│+0x0008: 0x00000001ffffdfa9
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0xffffffffff558080
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0028: 0x0000555555555397  →  <++++info symbol 0x555555555397
main+0033> mov DWORD PTR [rbp-0x4], eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555556d7 <+++info symbol 0x5555555556d7
parse_args+00ab> mov    BYTE PTR [rbp-0x5], al
   0x5555555556da <+++info symbol 0x5555555556da
parse_args+00ae> cmp    BYTE PTR [rbp-0x5], 0xff
   0x5555555556de <+++info symbol 0x5555555556de
parse_args+00b2> jne    0x555555555652 <parse_args+38>
 → 0x5555555556e4 <++++info symbol 0x5555555556e4
parse_args+00b8> mov    eax, DWORD PTR [rbp-0x4]
   0x5555555556e7 <+++info symbol 0x5555555556e7
parse_args+00bb> leave  
   0x5555555556e8 <+++info symbol 0x5555555556e8
parse_args+00bc> ret    
   0x5555555556e9 <+++info symbol 0x5555555556e9
test1+0000> endbr64 
   0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
   0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+185 ────
    180	       printf("       -t 0 runs the small demo\n");
    181	       exit(EXIT_FAILURE);
    182	     }
    183	   }
    184	 
           // tests=-0x1
 →  185	   return tests;
    186	 }
    187	 
    188	 int test1(void) {
    189	   struct student *st = alloc_student("Mohammad");
    190	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555556e4 in parse_args (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555556e4 → parse_args(argc=1, argv=0x7fffffffdd28)
[#1] 0x555555555397 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+info local
c = -1 '\377'
tests = -1
+info local
c = -1 '\377'
tests = -1
+info agrs
Undefined info command: "agrs".  Try "help info".
+n
186	}
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555556e7  →  <++++info symbol 0x5555555556e7
parse_args+00bb> leave 
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbc8│+0x0008: 0x00000001ffffdfa9
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0xffffffffff558080
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0028: 0x0000555555555397  →  <++++info symbol 0x555555555397
main+0033> mov DWORD PTR [rbp-0x4], eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555556da <+++info symbol 0x5555555556da
parse_args+00ae> cmp    BYTE PTR [rbp-0x5], 0xff
   0x5555555556de <+++info symbol 0x5555555556de
parse_args+00b2> jne    0x555555555652 <parse_args+38>
   0x5555555556e4 <+++info symbol 0x5555555556e4
parse_args+00b8> mov    eax, DWORD PTR [rbp-0x4]
 → 0x5555555556e7 <++++info symbol 0x5555555556e7
parse_args+00bb> leave  
   0x5555555556e8 <+++info symbol 0x5555555556e8
parse_args+00bc> ret    
   0x5555555556e9 <+++info symbol 0x5555555556e9
test1+0000> endbr64 
   0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
   0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
   0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+186 ────
    181	       exit(EXIT_FAILURE);
    182	     }
    183	   }
    184	 
    185	   return tests;
 →  186	 }
    187	 
    188	 int test1(void) {
    189	   struct student *st = alloc_student("Mohammad");
    190	 
    191	   // This test1 just tests adding at the head and then deleting.
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555556e7 in parse_args (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555556e7 → parse_args(argc=1, argv=0x7fffffffdd28)
[#1] 0x555555555397 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555556e7  →  <++++info symbol 0x5555555556e7
parse_args+00bb> leave 
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbc8│+0x0008: 0x00000001ffffdfa9
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0xffffffffff558080
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0028: 0x0000555555555397  →  <++++info symbol 0x555555555397
main+0033> mov DWORD PTR [rbp-0x4], eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555556da <+++info symbol 0x5555555556da
parse_args+00ae> cmp    BYTE PTR [rbp-0x5], 0xff
   0x5555555556de <+++info symbol 0x5555555556de
parse_args+00b2> jne    0x555555555652 <parse_args+38>
   0x5555555556e4 <+++info symbol 0x5555555556e4
parse_args+00b8> mov    eax, DWORD PTR [rbp-0x4]
 → 0x5555555556e7 <++++info symbol 0x5555555556e7
parse_args+00bb> leave  
   0x5555555556e8 <+++info symbol 0x5555555556e8
parse_args+00bc> ret    
   0x5555555556e9 <+++info symbol 0x5555555556e9
test1+0000> endbr64 
   0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
   0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
   0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+186 ────
    181	       exit(EXIT_FAILURE);
    182	     }
    183	   }
    184	 
    185	   return tests;
 →  186	 }
    187	 
    188	 int test1(void) {
    189	   struct student *st = alloc_student("Mohammad");
    190	 
    191	   // This test1 just tests adding at the head and then deleting.
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555556e7 in parse_args (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555556e7 → parse_args(argc=1, argv=0x7fffffffdd28)
[#1] 0x555555555397 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
main (argc=1, argv=0x7fffffffdd28) at student.c:110
110	  switch(num_tests) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x000055555555539a  →  <++++info symbol 0x55555555539a
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x55555555539a <++++info symbol 0x55555555539a
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x55555555539e <+++info symbol 0x55555555539e
main+003a> je     0x5555555555cc <main+616>
   0x5555555553a4 <+++info symbol 0x5555555553a4
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553a8 <+++info symbol 0x5555555553a8
main+0044> jg     0x5555555555df <main+635>
   0x5555555553ae <+++info symbol 0x5555555553ae
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553b2 <+++info symbol 0x5555555553b2
main+004e> je     0x5555555555b9 <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+110 ────
    105	   init_node(&head);
    106	 
    107	   // 2. Get which test to run.
    108	   num_tests = parse_args(argc, argv);
    109	 
           // num_tests=-0x1
 →  110	   switch(num_tests) {
    111	     case 0:
    112	       // Allocate nodes and set the grades.
    113	       for(i = 0; i < NUM_STUDENTS; i++) {
    114	         students[i] = alloc_student(names[i]);
    115	         for(j = 0; j < NUM_EXAMS; j++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539a in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539a → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x000055555555539a  →  <++++info symbol 0x55555555539a
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x55555555539a <++++info symbol 0x55555555539a
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x55555555539e <+++info symbol 0x55555555539e
main+003a> je     0x5555555555cc <main+616>
   0x5555555553a4 <+++info symbol 0x5555555553a4
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553a8 <+++info symbol 0x5555555553a8
main+0044> jg     0x5555555555df <main+635>
   0x5555555553ae <+++info symbol 0x5555555553ae
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553b2 <+++info symbol 0x5555555553b2
main+004e> je     0x5555555555b9 <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+110 ────
    105	   init_node(&head);
    106	 
    107	   // 2. Get which test to run.
    108	   num_tests = parse_args(argc, argv);
    109	 
           // num_tests=-0x1
 →  110	   switch(num_tests) {
    111	     case 0:
    112	       // Allocate nodes and set the grades.
    113	       for(i = 0; i < NUM_STUDENTS; i++) {
    114	         students[i] = alloc_student(names[i]);
    115	         for(j = 0; j < NUM_EXAMS; j++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539a in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539a → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
150	      if(!test1()) exit(EXIT_FAILURE);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555df  →  <++++info symbol 0x5555555555df
main+027b> call 0x5555555556e9 <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555d3 <+++info symbol 0x5555555555d3
main+026f> jne    0x55555555561e <main+698>
   0x5555555555d5 <+++info symbol 0x5555555555d5
main+0271> mov    edi, 0x1
   0x5555555555da <+++info symbol 0x5555555555da
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555df <++++info symbol 0x5555555555df
main+027b> call   0x5555555556e9 <test1>
   ↳  0x5555555556e9 <+++info symbol 0x5555555556e9
test1+0000> endbr64 
      0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
      0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
      0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
      0x5555555556f5 <+++info symbol 0x5555555556f5
test1+000c> lea    rax, [rip+0x90c]        # 0x555555556008
      0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+150 ────
    145	     case 3:
    146	       if(!test3()) exit(EXIT_FAILURE);
    147	       break;
    148	     case -1:
    149	     default:
 →  150	       if(!test1()) exit(EXIT_FAILURE);
    151	       if(!test2()) exit(EXIT_FAILURE);
    152	       if(!test3()) exit(EXIT_FAILURE);
    153	       break;
    154	   }
    155	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555df in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555df → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555df  →  <++++info symbol 0x5555555555df
main+027b> call 0x5555555556e9 <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555d3 <+++info symbol 0x5555555555d3
main+026f> jne    0x55555555561e <main+698>
   0x5555555555d5 <+++info symbol 0x5555555555d5
main+0271> mov    edi, 0x1
   0x5555555555da <+++info symbol 0x5555555555da
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555df <++++info symbol 0x5555555555df
main+027b> call   0x5555555556e9 <test1>
   ↳  0x5555555556e9 <+++info symbol 0x5555555556e9
test1+0000> endbr64 
      0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
      0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
      0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
      0x5555555556f5 <+++info symbol 0x5555555556f5
test1+000c> lea    rax, [rip+0x90c]        # 0x555555556008
      0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+150 ────
    145	     case 3:
    146	       if(!test3()) exit(EXIT_FAILURE);
    147	       break;
    148	     case -1:
    149	     default:
 →  150	       if(!test1()) exit(EXIT_FAILURE);
    151	       if(!test2()) exit(EXIT_FAILURE);
    152	       if(!test3()) exit(EXIT_FAILURE);
    153	       break;
    154	   }
    155	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555df in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555df → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
[Inferior 1 (process 4615) exited with code 01]
+run
Starting program: /home/liub5/CSSE332-lab-liub5/debug/student.bin 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=1, argv=0x7fffffffdd28) at student.c:105
105	  init_node(&head);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555377  →  <++++info symbol 0x555555555377
main+0013> lea rax, [rip+0x2d02]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555536c <+++info symbol 0x55555555536c
main+0008> sub    rsp, 0x20
   0x555555555370 <+++info symbol 0x555555555370
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555373 <+++info symbol 0x555555555373
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x555555555377 <++++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
   0x555555555386 <+++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+105 ────
    100	 
    101	 int main(int argc, char **argv) {
    102	   int i, j, num_tests;
    103	 
    104	   // 1. Init the head
 →  105	   init_node(&head);
    106	 
    107	   // 2. Get which test to run.
    108	   num_tests = parse_args(argc, argv);
    109	 
    110	   switch(num_tests) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555377 in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555377 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555377  →  <++++info symbol 0x555555555377
main+0013> lea rax, [rip+0x2d02]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555536c <+++info symbol 0x55555555536c
main+0008> sub    rsp, 0x20
   0x555555555370 <+++info symbol 0x555555555370
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555373 <+++info symbol 0x555555555373
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x555555555377 <++++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
   0x555555555386 <+++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+105 ────
    100	 
    101	 int main(int argc, char **argv) {
    102	   int i, j, num_tests;
    103	 
    104	   // 1. Init the head
 →  105	   init_node(&head);
    106	 
    107	   // 2. Get which test to run.
    108	   num_tests = parse_args(argc, argv);
    109	 
    110	   switch(num_tests) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555377 in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555377 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
108	  num_tests = parse_args(argc, argv);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555386  →  <++++info symbol 0x555555555386
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555377 <+++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
 → 0x555555555386 <++++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+108 ────
    103	 
    104	   // 1. Init the head
    105	   init_node(&head);
    106	 
    107	   // 2. Get which test to run.
           // argc=0x1, argv=0x00007fffffffdbf0  →  [...]  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin", num_tests=0x5555
 →  108	   num_tests = parse_args(argc, argv);
    109	 
    110	   switch(num_tests) {
    111	     case 0:
    112	       // Allocate nodes and set the grades.
    113	       for(i = 0; i < NUM_STUDENTS; i++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555386 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555386 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555386  →  <++++info symbol 0x555555555386
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555377 <+++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
 → 0x555555555386 <++++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+108 ────
    103	 
    104	   // 1. Init the head
    105	   init_node(&head);
    106	 
    107	   // 2. Get which test to run.
           // argc=0x1, argv=0x00007fffffffdbf0  →  [...]  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin", num_tests=0x5555
 →  108	   num_tests = parse_args(argc, argv);
    109	 
    110	   switch(num_tests) {
    111	     case 0:
    112	       // Allocate nodes and set the grades.
    113	       for(i = 0; i < NUM_STUDENTS; i++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555386 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555386 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
110	  switch(num_tests) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x000055555555539a  →  <++++info symbol 0x55555555539a
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x55555555539a <++++info symbol 0x55555555539a
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x55555555539e <+++info symbol 0x55555555539e
main+003a> je     0x5555555555cc <main+616>
   0x5555555553a4 <+++info symbol 0x5555555553a4
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553a8 <+++info symbol 0x5555555553a8
main+0044> jg     0x5555555555df <main+635>
   0x5555555553ae <+++info symbol 0x5555555553ae
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553b2 <+++info symbol 0x5555555553b2
main+004e> je     0x5555555555b9 <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+110 ────
    105	   init_node(&head);
    106	 
    107	   // 2. Get which test to run.
    108	   num_tests = parse_args(argc, argv);
    109	 
           // num_tests=-0x1
 →  110	   switch(num_tests) {
    111	     case 0:
    112	       // Allocate nodes and set the grades.
    113	       for(i = 0; i < NUM_STUDENTS; i++) {
    114	         students[i] = alloc_student(names[i]);
    115	         for(j = 0; j < NUM_EXAMS; j++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539a in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539a → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x000055555555539a  →  <++++info symbol 0x55555555539a
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x55555555539a <++++info symbol 0x55555555539a
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x55555555539e <+++info symbol 0x55555555539e
main+003a> je     0x5555555555cc <main+616>
   0x5555555553a4 <+++info symbol 0x5555555553a4
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553a8 <+++info symbol 0x5555555553a8
main+0044> jg     0x5555555555df <main+635>
   0x5555555553ae <+++info symbol 0x5555555553ae
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553b2 <+++info symbol 0x5555555553b2
main+004e> je     0x5555555555b9 <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+110 ────
    105	   init_node(&head);
    106	 
    107	   // 2. Get which test to run.
    108	   num_tests = parse_args(argc, argv);
    109	 
           // num_tests=-0x1
 →  110	   switch(num_tests) {
    111	     case 0:
    112	       // Allocate nodes and set the grades.
    113	       for(i = 0; i < NUM_STUDENTS; i++) {
    114	         students[i] = alloc_student(names[i]);
    115	         for(j = 0; j < NUM_EXAMS; j++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539a in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539a → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
150	      if(!test1()) exit(EXIT_FAILURE);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555df  →  <++++info symbol 0x5555555555df
main+027b> call 0x5555555556e9 <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555d3 <+++info symbol 0x5555555555d3
main+026f> jne    0x55555555561e <main+698>
   0x5555555555d5 <+++info symbol 0x5555555555d5
main+0271> mov    edi, 0x1
   0x5555555555da <+++info symbol 0x5555555555da
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555df <++++info symbol 0x5555555555df
main+027b> call   0x5555555556e9 <test1>
   ↳  0x5555555556e9 <+++info symbol 0x5555555556e9
test1+0000> endbr64 
      0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
      0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
      0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
      0x5555555556f5 <+++info symbol 0x5555555556f5
test1+000c> lea    rax, [rip+0x90c]        # 0x555555556008
      0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+150 ────
    145	     case 3:
    146	       if(!test3()) exit(EXIT_FAILURE);
    147	       break;
    148	     case -1:
    149	     default:
 →  150	       if(!test1()) exit(EXIT_FAILURE);
    151	       if(!test2()) exit(EXIT_FAILURE);
    152	       if(!test3()) exit(EXIT_FAILURE);
    153	       break;
    154	   }
    155	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555df in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555df → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555df  →  <++++info symbol 0x5555555555df
main+027b> call 0x5555555556e9 <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555d3 <+++info symbol 0x5555555555d3
main+026f> jne    0x55555555561e <main+698>
   0x5555555555d5 <+++info symbol 0x5555555555d5
main+0271> mov    edi, 0x1
   0x5555555555da <+++info symbol 0x5555555555da
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555df <++++info symbol 0x5555555555df
main+027b> call   0x5555555556e9 <test1>
   ↳  0x5555555556e9 <+++info symbol 0x5555555556e9
test1+0000> endbr64 
      0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
      0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
      0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
      0x5555555556f5 <+++info symbol 0x5555555556f5
test1+000c> lea    rax, [rip+0x90c]        # 0x555555556008
      0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+150 ────
    145	     case 3:
    146	       if(!test3()) exit(EXIT_FAILURE);
    147	       break;
    148	     case -1:
    149	     default:
 →  150	       if(!test1()) exit(EXIT_FAILURE);
    151	       if(!test2()) exit(EXIT_FAILURE);
    152	       if(!test3()) exit(EXIT_FAILURE);
    153	       break;
    154	   }
    155	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555df in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555df → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
test1 () at student.c:189
189	  struct student *st = alloc_student("Mohammad");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555556f5  →  <++++info symbol 0x5555555556f5
test1+000c> lea rax, [rip+0x90c]        # 0x555555556008
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0xffffffffff558080
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
   0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
   0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
 → 0x5555555556f5 <++++info symbol 0x5555555556f5
test1+000c> lea    rax, [rip+0x90c]        # 0x555555556008
   0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
   0x5555555556ff <+++info symbol 0x5555555556ff
test1+0016> call   0x555555555249 <alloc_student>
   0x555555555704 <+++info symbol 0x555555555704
test1+001b> mov    QWORD PTR [rbp-0x8], rax
   0x555555555708 <+++info symbol 0x555555555708
test1+001f> lea    rax, [rip+0x9e5]        # 0x5555555560f4
   0x55555555570f <+++info symbol 0x55555555570f
test1+0026> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+189 ────
    184	 
    185	   return tests;
    186	 }
    187	 
    188	 int test1(void) {
           // st=0x00007fffffffdbd8  →  0xffffffffff558080
 →  189	   struct student *st = alloc_student("Mohammad");
    190	 
    191	   // This test1 just tests adding at the head and then deleting.
    192	   printf("Test 1 (simple add_head): ");
    193	   add_head(&head, &st->node);
    194	   if(IS_EMPTY(head)) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555556f5 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555556f5 → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555556f5  →  <++++info symbol 0x5555555556f5
test1+000c> lea rax, [rip+0x90c]        # 0x555555556008
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0xffffffffff558080
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
   0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
   0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
 → 0x5555555556f5 <++++info symbol 0x5555555556f5
test1+000c> lea    rax, [rip+0x90c]        # 0x555555556008
   0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
   0x5555555556ff <+++info symbol 0x5555555556ff
test1+0016> call   0x555555555249 <alloc_student>
   0x555555555704 <+++info symbol 0x555555555704
test1+001b> mov    QWORD PTR [rbp-0x8], rax
   0x555555555708 <+++info symbol 0x555555555708
test1+001f> lea    rax, [rip+0x9e5]        # 0x5555555560f4
   0x55555555570f <+++info symbol 0x55555555570f
test1+0026> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+189 ────
    184	 
    185	   return tests;
    186	 }
    187	 
    188	 int test1(void) {
           // st=0x00007fffffffdbd8  →  0xffffffffff558080
 →  189	   struct student *st = alloc_student("Mohammad");
    190	 
    191	   // This test1 just tests adding at the head and then deleting.
    192	   printf("Test 1 (simple add_head): ");
    193	   add_head(&head, &st->node);
    194	   if(IS_EMPTY(head)) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555556f5 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555556f5 → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+info local
st = 0xffffffffff558080
+p *st
Cannot access memory at address 0xffffffffff558080
+s
alloc_student (name=0x555555556008 "Mohammad") at student.c:72
72	  st = malloc(sizeof(struct student));
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb90
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555556008  →  "Mohammad"
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdb90  →  0x0000000000000000
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555556008  →  "Mohammad"
$rip   : 0x000055555555525a  →  <++++info symbol 0x55555555525a
alloc_student+0011> mov edi, 0x18
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb90│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdb98│+0x0008: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0010: 0x0000000000000000
0x00007fffffffdba8│+0x0018: 0x0000000000000001
0x00007fffffffdbb0│+0x0020: 0x0000555555554040  →  0x0000000400000006
0x00007fffffffdbb8│+0x0028: 0x0000000000000000
0x00007fffffffdbc0│+0x0030: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbc8│+0x0038: 0x0000555555555704  →  <++++info symbol 0x555555555704
test1+001b> mov QWORD PTR [rbp-0x8], rax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555251 <+++info symbol 0x555555555251
alloc_student+0008> push   rbx
   0x555555555252 <+++info symbol 0x555555555252
alloc_student+0009> sub    rsp, 0x28
   0x555555555256 <+++info symbol 0x555555555256
alloc_student+000d> mov    QWORD PTR [rbp-0x28], rdi
 → 0x55555555525a <++++info symbol 0x55555555525a
alloc_student+0011> mov    edi, 0x18
   0x55555555525f <+++info symbol 0x55555555525f
alloc_student+0016> call   0x555555555120 <malloc@plt>
   0x555555555264 <+++info symbol 0x555555555264
alloc_student+001b> mov    QWORD PTR [rbp-0x18], rax
   0x555555555268 <+++info symbol 0x555555555268
alloc_student+001f> cmp    QWORD PTR [rbp-0x18], 0x0
   0x55555555526d <+++info symbol 0x55555555526d
alloc_student+0024> jne    0x555555555288 <alloc_student+63>
   0x55555555526f <+++info symbol 0x55555555526f
alloc_student+0026> lea    rax, [rip+0xdba]        # 0x555555556030
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+72 ────
     67	  *  into it.
     68	  */
     69	 struct student *alloc_student(const char *name) {
     70	   struct student *st;
     71	 
           // st=0x00007fffffffdba8  →  0x0000000000000001
 →   72	   st = malloc(sizeof(struct student));
     73	   if(!st) {
     74	     perror("PANIC: malloc failed, out of memory!");
     75	     exit(EXIT_FAILURE);
     76	   }
     77	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555525a in alloc_student (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555525a → alloc_student(name=0x555555556008 "Mohammad")
[#1] 0x555555555704 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb90
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555556008  →  "Mohammad"
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdb90  →  0x0000000000000000
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555556008  →  "Mohammad"
$rip   : 0x000055555555525a  →  <++++info symbol 0x55555555525a
alloc_student+0011> mov edi, 0x18
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb90│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdb98│+0x0008: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0010: 0x0000000000000000
0x00007fffffffdba8│+0x0018: 0x0000000000000001
0x00007fffffffdbb0│+0x0020: 0x0000555555554040  →  0x0000000400000006
0x00007fffffffdbb8│+0x0028: 0x0000000000000000
0x00007fffffffdbc0│+0x0030: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbc8│+0x0038: 0x0000555555555704  →  <++++info symbol 0x555555555704
test1+001b> mov QWORD PTR [rbp-0x8], rax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555251 <+++info symbol 0x555555555251
alloc_student+0008> push   rbx
   0x555555555252 <+++info symbol 0x555555555252
alloc_student+0009> sub    rsp, 0x28
   0x555555555256 <+++info symbol 0x555555555256
alloc_student+000d> mov    QWORD PTR [rbp-0x28], rdi
 → 0x55555555525a <++++info symbol 0x55555555525a
alloc_student+0011> mov    edi, 0x18
   0x55555555525f <+++info symbol 0x55555555525f
alloc_student+0016> call   0x555555555120 <malloc@plt>
   0x555555555264 <+++info symbol 0x555555555264
alloc_student+001b> mov    QWORD PTR [rbp-0x18], rax
   0x555555555268 <+++info symbol 0x555555555268
alloc_student+001f> cmp    QWORD PTR [rbp-0x18], 0x0
   0x55555555526d <+++info symbol 0x55555555526d
alloc_student+0024> jne    0x555555555288 <alloc_student+63>
   0x55555555526f <+++info symbol 0x55555555526f
alloc_student+0026> lea    rax, [rip+0xdba]        # 0x555555556030
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+72 ────
     67	  *  into it.
     68	  */
     69	 struct student *alloc_student(const char *name) {
     70	   struct student *st;
     71	 
           // st=0x00007fffffffdba8  →  0x0000000000000001
 →   72	   st = malloc(sizeof(struct student));
     73	   if(!st) {
     74	     perror("PANIC: malloc failed, out of memory!");
     75	     exit(EXIT_FAILURE);
     76	   }
     77	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555525a in alloc_student (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555525a → alloc_student(name=0x555555556008 "Mohammad")
[#1] 0x555555555704 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
73	  if(!st) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb90
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000000000000000
$rbx   : 0x0               
$rcx   : 0x21              
$rdx   : 0x0               
$rsp   : 0x00007fffffffdb90  →  0x0000000000000000
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592b0  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x0000555555555268  →  <++++info symbol 0x555555555268
alloc_student+001f> cmp QWORD PTR [rbp-0x18], 0x0
$r8    : 0x21001           
$r9    : 0x00005555555592a0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592b0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb90│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdb98│+0x0008: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0010: 0x0000000000000000
0x00007fffffffdba8│+0x0018: 0x00005555555592a0  →  0x0000000000000000
0x00007fffffffdbb0│+0x0020: 0x0000555555554040  →  0x0000000400000006
0x00007fffffffdbb8│+0x0028: 0x0000000000000000
0x00007fffffffdbc0│+0x0030: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbc8│+0x0038: 0x0000555555555704  →  <++++info symbol 0x555555555704
test1+001b> mov QWORD PTR [rbp-0x8], rax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555525a <+++info symbol 0x55555555525a
alloc_student+0011> mov    edi, 0x18
   0x55555555525f <+++info symbol 0x55555555525f
alloc_student+0016> call   0x555555555120 <malloc@plt>
   0x555555555264 <+++info symbol 0x555555555264
alloc_student+001b> mov    QWORD PTR [rbp-0x18], rax
 → 0x555555555268 <++++info symbol 0x555555555268
alloc_student+001f> cmp    QWORD PTR [rbp-0x18], 0x0
   0x55555555526d <+++info symbol 0x55555555526d
alloc_student+0024> jne    0x555555555288 <alloc_student+63>
   0x55555555526f <+++info symbol 0x55555555526f
alloc_student+0026> lea    rax, [rip+0xdba]        # 0x555555556030
   0x555555555276 <+++info symbol 0x555555555276
alloc_student+002d> mov    rdi, rax
   0x555555555279 <+++info symbol 0x555555555279
alloc_student+0030> call   0x555555555130 <perror@plt>
   0x55555555527e <+++info symbol 0x55555555527e
alloc_student+0035> mov    edi, 0x1
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+73 ────
     68	  */
     69	 struct student *alloc_student(const char *name) {
     70	   struct student *st;
     71	 
     72	   st = malloc(sizeof(struct student));
           // st=0x00007fffffffdba8  →  [...]  →  0x0000000000000000
 →   73	   if(!st) {
     74	     perror("PANIC: malloc failed, out of memory!");
     75	     exit(EXIT_FAILURE);
     76	   }
     77	 
     78	   // copy the name
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555268 in alloc_student (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555268 → alloc_student(name=0x555555556008 "Mohammad")
[#1] 0x555555555704 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb90
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000000000000000
$rbx   : 0x0               
$rcx   : 0x21              
$rdx   : 0x0               
$rsp   : 0x00007fffffffdb90  →  0x0000000000000000
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592b0  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x0000555555555268  →  <++++info symbol 0x555555555268
alloc_student+001f> cmp QWORD PTR [rbp-0x18], 0x0
$r8    : 0x21001           
$r9    : 0x00005555555592a0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592b0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb90│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdb98│+0x0008: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0010: 0x0000000000000000
0x00007fffffffdba8│+0x0018: 0x00005555555592a0  →  0x0000000000000000
0x00007fffffffdbb0│+0x0020: 0x0000555555554040  →  0x0000000400000006
0x00007fffffffdbb8│+0x0028: 0x0000000000000000
0x00007fffffffdbc0│+0x0030: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbc8│+0x0038: 0x0000555555555704  →  <++++info symbol 0x555555555704
test1+001b> mov QWORD PTR [rbp-0x8], rax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555525a <+++info symbol 0x55555555525a
alloc_student+0011> mov    edi, 0x18
   0x55555555525f <+++info symbol 0x55555555525f
alloc_student+0016> call   0x555555555120 <malloc@plt>
   0x555555555264 <+++info symbol 0x555555555264
alloc_student+001b> mov    QWORD PTR [rbp-0x18], rax
 → 0x555555555268 <++++info symbol 0x555555555268
alloc_student+001f> cmp    QWORD PTR [rbp-0x18], 0x0
   0x55555555526d <+++info symbol 0x55555555526d
alloc_student+0024> jne    0x555555555288 <alloc_student+63>
   0x55555555526f <+++info symbol 0x55555555526f
alloc_student+0026> lea    rax, [rip+0xdba]        # 0x555555556030
   0x555555555276 <+++info symbol 0x555555555276
alloc_student+002d> mov    rdi, rax
   0x555555555279 <+++info symbol 0x555555555279
alloc_student+0030> call   0x555555555130 <perror@plt>
   0x55555555527e <+++info symbol 0x55555555527e
alloc_student+0035> mov    edi, 0x1
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+73 ────
     68	  */
     69	 struct student *alloc_student(const char *name) {
     70	   struct student *st;
     71	 
     72	   st = malloc(sizeof(struct student));
           // st=0x00007fffffffdba8  →  [...]  →  0x0000000000000000
 →   73	   if(!st) {
     74	     perror("PANIC: malloc failed, out of memory!");
     75	     exit(EXIT_FAILURE);
     76	   }
     77	 
     78	   // copy the name
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555268 in alloc_student (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555268 → alloc_student(name=0x555555556008 "Mohammad")
[#1] 0x555555555704 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
79	  st->name = malloc(strlen(name) + 1); // ENG POINT: why strlen(name) + 1?
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb90
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000000000000000
$rbx   : 0x0               
$rcx   : 0x21              
$rdx   : 0x0               
$rsp   : 0x00007fffffffdb90  →  0x0000000000000000
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592b0  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x0000555555555288  →  <++++info symbol 0x555555555288
alloc_student+003f> mov rax, QWORD PTR [rbp-0x28]
$r8    : 0x21001           
$r9    : 0x00005555555592a0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592b0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb90│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdb98│+0x0008: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0010: 0x0000000000000000
0x00007fffffffdba8│+0x0018: 0x00005555555592a0  →  0x0000000000000000
0x00007fffffffdbb0│+0x0020: 0x0000555555554040  →  0x0000000400000006
0x00007fffffffdbb8│+0x0028: 0x0000000000000000
0x00007fffffffdbc0│+0x0030: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbc8│+0x0038: 0x0000555555555704  →  <++++info symbol 0x555555555704
test1+001b> mov QWORD PTR [rbp-0x8], rax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555279 <+++info symbol 0x555555555279
alloc_student+0030> call   0x555555555130 <perror@plt>
   0x55555555527e <+++info symbol 0x55555555527e
alloc_student+0035> mov    edi, 0x1
   0x555555555283 <+++info symbol 0x555555555283
alloc_student+003a> call   0x555555555150 <exit@plt>
 → 0x555555555288 <++++info symbol 0x555555555288
alloc_student+003f> mov    rax, QWORD PTR [rbp-0x28]
   0x55555555528c <+++info symbol 0x55555555528c
alloc_student+0043> mov    rdi, rax
   0x55555555528f <+++info symbol 0x55555555528f
alloc_student+0046> call   0x5555555550f0 <strlen@plt>
   0x555555555294 <+++info symbol 0x555555555294
alloc_student+004b> add    rax, 0x1
   0x555555555298 <+++info symbol 0x555555555298
alloc_student+004f> mov    rdi, rax
   0x55555555529b <+++info symbol 0x55555555529b
alloc_student+0052> call   0x555555555120 <malloc@plt>
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+79 ────
     74	     perror("PANIC: malloc failed, out of memory!");
     75	     exit(EXIT_FAILURE);
     76	   }
     77	 
     78	   // copy the name
           // name=0x00007fffffffdb98  →  [...]  →  "Mohammad", st=0x00007fffffffdba8  →  [...]  →  0x0000000000000000
 →   79	   st->name = malloc(strlen(name) + 1); // ENG POINT: why strlen(name) + 1?
     80	   strncpy(st->name, name, strlen(name));
     81	   *(st->name + strlen(name)) = 0;
     82	 
     83	   // initialize the list node
     84	   init_node(&st->node);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555288 in alloc_student (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555288 → alloc_student(name=0x555555556008 "Mohammad")
[#1] 0x555555555704 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb90
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000000000000000
$rbx   : 0x0               
$rcx   : 0x21              
$rdx   : 0x0               
$rsp   : 0x00007fffffffdb90  →  0x0000000000000000
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592b0  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x0000555555555288  →  <++++info symbol 0x555555555288
alloc_student+003f> mov rax, QWORD PTR [rbp-0x28]
$r8    : 0x21001           
$r9    : 0x00005555555592a0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592b0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb90│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdb98│+0x0008: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0010: 0x0000000000000000
0x00007fffffffdba8│+0x0018: 0x00005555555592a0  →  0x0000000000000000
0x00007fffffffdbb0│+0x0020: 0x0000555555554040  →  0x0000000400000006
0x00007fffffffdbb8│+0x0028: 0x0000000000000000
0x00007fffffffdbc0│+0x0030: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbc8│+0x0038: 0x0000555555555704  →  <++++info symbol 0x555555555704
test1+001b> mov QWORD PTR [rbp-0x8], rax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555279 <+++info symbol 0x555555555279
alloc_student+0030> call   0x555555555130 <perror@plt>
   0x55555555527e <+++info symbol 0x55555555527e
alloc_student+0035> mov    edi, 0x1
   0x555555555283 <+++info symbol 0x555555555283
alloc_student+003a> call   0x555555555150 <exit@plt>
 → 0x555555555288 <++++info symbol 0x555555555288
alloc_student+003f> mov    rax, QWORD PTR [rbp-0x28]
   0x55555555528c <+++info symbol 0x55555555528c
alloc_student+0043> mov    rdi, rax
   0x55555555528f <+++info symbol 0x55555555528f
alloc_student+0046> call   0x5555555550f0 <strlen@plt>
   0x555555555294 <+++info symbol 0x555555555294
alloc_student+004b> add    rax, 0x1
   0x555555555298 <+++info symbol 0x555555555298
alloc_student+004f> mov    rdi, rax
   0x55555555529b <+++info symbol 0x55555555529b
alloc_student+0052> call   0x555555555120 <malloc@plt>
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+79 ────
     74	     perror("PANIC: malloc failed, out of memory!");
     75	     exit(EXIT_FAILURE);
     76	   }
     77	 
     78	   // copy the name
           // name=0x00007fffffffdb98  →  [...]  →  "Mohammad", st=0x00007fffffffdba8  →  [...]  →  0x0000000000000000
 →   79	   st->name = malloc(strlen(name) + 1); // ENG POINT: why strlen(name) + 1?
     80	   strncpy(st->name, name, strlen(name));
     81	   *(st->name + strlen(name)) = 0;
     82	 
     83	   // initialize the list node
     84	   init_node(&st->node);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555288 in alloc_student (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555288 → alloc_student(name=0x555555556008 "Mohammad")
[#1] 0x555555555704 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
80	  strncpy(st->name, name, strlen(name));
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb90
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000000000000000
$rbx   : 0x0               
$rcx   : 0x21              
$rdx   : 0x00005555555592c0  →  0x0000000000000000
$rsp   : 0x00007fffffffdb90  →  0x0000000000000000
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592d0  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x00005555555552ab  →  <++++info symbol 0x5555555552ab
alloc_student+0062> mov rax, QWORD PTR [rbp-0x28]
$r8    : 0x21001           
$r9    : 0x00005555555592c0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592d0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb90│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdb98│+0x0008: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0010: 0x0000000000000000
0x00007fffffffdba8│+0x0018: 0x00005555555592a0  →  0x0000000000000000
0x00007fffffffdbb0│+0x0020: 0x0000555555554040  →  0x0000000400000006
0x00007fffffffdbb8│+0x0028: 0x0000000000000000
0x00007fffffffdbc0│+0x0030: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbc8│+0x0038: 0x0000555555555704  →  <++++info symbol 0x555555555704
test1+001b> mov QWORD PTR [rbp-0x8], rax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552a0 <+++info symbol 0x5555555552a0
alloc_student+0057> mov    rdx, rax
   0x5555555552a3 <+++info symbol 0x5555555552a3
alloc_student+005a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555552a7 <+++info symbol 0x5555555552a7
alloc_student+005e> mov    QWORD PTR [rax+0x8], rdx
 → 0x5555555552ab <++++info symbol 0x5555555552ab
alloc_student+0062> mov    rax, QWORD PTR [rbp-0x28]
   0x5555555552af <+++info symbol 0x5555555552af
alloc_student+0066> mov    rdi, rax
   0x5555555552b2 <+++info symbol 0x5555555552b2
alloc_student+0069> call   0x5555555550f0 <strlen@plt>
   0x5555555552b7 <+++info symbol 0x5555555552b7
alloc_student+006e> mov    rdx, rax
   0x5555555552ba <+++info symbol 0x5555555552ba
alloc_student+0071> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555552be <+++info symbol 0x5555555552be
alloc_student+0075> mov    rax, QWORD PTR [rax+0x8]
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+80 ────
     75	     exit(EXIT_FAILURE);
     76	   }
     77	 
     78	   // copy the name
     79	   st->name = malloc(strlen(name) + 1); // ENG POINT: why strlen(name) + 1?
           // name=0x00007fffffffdb98  →  [...]  →  "Mohammad", st=0x00007fffffffdba8  →  [...]  →  0x0000000000000000
 →   80	   strncpy(st->name, name, strlen(name));
     81	   *(st->name + strlen(name)) = 0;
     82	 
     83	   // initialize the list node
     84	   init_node(&st->node);
     85	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555552ab in alloc_student (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552ab → alloc_student(name=0x555555556008 "Mohammad")
[#1] 0x555555555704 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb90
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000000000000000
$rbx   : 0x0               
$rcx   : 0x21              
$rdx   : 0x00005555555592c0  →  0x0000000000000000
$rsp   : 0x00007fffffffdb90  →  0x0000000000000000
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592d0  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x00005555555552ab  →  <++++info symbol 0x5555555552ab
alloc_student+0062> mov rax, QWORD PTR [rbp-0x28]
$r8    : 0x21001           
$r9    : 0x00005555555592c0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592d0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb90│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdb98│+0x0008: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0010: 0x0000000000000000
0x00007fffffffdba8│+0x0018: 0x00005555555592a0  →  0x0000000000000000
0x00007fffffffdbb0│+0x0020: 0x0000555555554040  →  0x0000000400000006
0x00007fffffffdbb8│+0x0028: 0x0000000000000000
0x00007fffffffdbc0│+0x0030: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbc8│+0x0038: 0x0000555555555704  →  <++++info symbol 0x555555555704
test1+001b> mov QWORD PTR [rbp-0x8], rax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552a0 <+++info symbol 0x5555555552a0
alloc_student+0057> mov    rdx, rax
   0x5555555552a3 <+++info symbol 0x5555555552a3
alloc_student+005a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555552a7 <+++info symbol 0x5555555552a7
alloc_student+005e> mov    QWORD PTR [rax+0x8], rdx
 → 0x5555555552ab <++++info symbol 0x5555555552ab
alloc_student+0062> mov    rax, QWORD PTR [rbp-0x28]
   0x5555555552af <+++info symbol 0x5555555552af
alloc_student+0066> mov    rdi, rax
   0x5555555552b2 <+++info symbol 0x5555555552b2
alloc_student+0069> call   0x5555555550f0 <strlen@plt>
   0x5555555552b7 <+++info symbol 0x5555555552b7
alloc_student+006e> mov    rdx, rax
   0x5555555552ba <+++info symbol 0x5555555552ba
alloc_student+0071> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555552be <+++info symbol 0x5555555552be
alloc_student+0075> mov    rax, QWORD PTR [rax+0x8]
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+80 ────
     75	     exit(EXIT_FAILURE);
     76	   }
     77	 
     78	   // copy the name
     79	   st->name = malloc(strlen(name) + 1); // ENG POINT: why strlen(name) + 1?
           // name=0x00007fffffffdb98  →  [...]  →  "Mohammad", st=0x00007fffffffdba8  →  [...]  →  0x0000000000000000
 →   80	   strncpy(st->name, name, strlen(name));
     81	   *(st->name + strlen(name)) = 0;
     82	 
     83	   // initialize the list node
     84	   init_node(&st->node);
     85	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555552ab in alloc_student (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552ab → alloc_student(name=0x555555556008 "Mohammad")
[#1] 0x555555555704 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
81	  *(st->name + strlen(name)) = 0;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb90
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592c0  →  "Mohammad"
$rbx   : 0x0               
$rcx   : 0x61686f4d        
$rdx   : 0x64616d6d        
$rsp   : 0x00007fffffffdb90  →  0x0000000000000000
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x00005555555592c0  →  "Mohammad"
$rip   : 0x00005555555552d1  →  <++++info symbol 0x5555555552d1
alloc_student+0088> mov rax, QWORD PTR [rbp-0x18]
$r8    : 0x8               
$r9    : 0x00005555555592c0  →  "Mohammad"
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592d0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb90│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdb98│+0x0008: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0010: 0x0000000000000000
0x00007fffffffdba8│+0x0018: 0x00005555555592a0  →  0x0000000000000000
0x00007fffffffdbb0│+0x0020: 0x0000555555554040  →  0x0000000400000006
0x00007fffffffdbb8│+0x0028: 0x0000000000000000
0x00007fffffffdbc0│+0x0030: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbc8│+0x0038: 0x0000555555555704  →  <++++info symbol 0x555555555704
test1+001b> mov QWORD PTR [rbp-0x8], rax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552c6 <+++info symbol 0x5555555552c6
alloc_student+007d> mov    rsi, rcx
   0x5555555552c9 <+++info symbol 0x5555555552c9
alloc_student+0080> mov    rdi, rax
   0x5555555552cc <+++info symbol 0x5555555552cc
alloc_student+0083> call   0x5555555550d0 <strncpy@plt>
 → 0x5555555552d1 <++++info symbol 0x5555555552d1
alloc_student+0088> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555552d5 <+++info symbol 0x5555555552d5
alloc_student+008c> mov    rbx, QWORD PTR [rax+0x8]
   0x5555555552d9 <+++info symbol 0x5555555552d9
alloc_student+0090> mov    rax, QWORD PTR [rbp-0x28]
   0x5555555552dd <+++info symbol 0x5555555552dd
alloc_student+0094> mov    rdi, rax
   0x5555555552e0 <+++info symbol 0x5555555552e0
alloc_student+0097> call   0x5555555550f0 <strlen@plt>
   0x5555555552e5 <+++info symbol 0x5555555552e5
alloc_student+009c> add    rax, rbx
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+81 ────
     76	   }
     77	 
     78	   // copy the name
     79	   st->name = malloc(strlen(name) + 1); // ENG POINT: why strlen(name) + 1?
     80	   strncpy(st->name, name, strlen(name));
           // name=0x00007fffffffdb98  →  [...]  →  "Mohammad", st=0x00007fffffffdba8  →  [...]  →  0x0000000000000000
 →   81	   *(st->name + strlen(name)) = 0;
     82	 
     83	   // initialize the list node
     84	   init_node(&st->node);
     85	 
     86	   return st;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555552d1 in alloc_student (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552d1 → alloc_student(name=0x555555556008 "Mohammad")
[#1] 0x555555555704 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb90
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592c0  →  "Mohammad"
$rbx   : 0x0               
$rcx   : 0x61686f4d        
$rdx   : 0x64616d6d        
$rsp   : 0x00007fffffffdb90  →  0x0000000000000000
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x00005555555592c0  →  "Mohammad"
$rip   : 0x00005555555552d1  →  <++++info symbol 0x5555555552d1
alloc_student+0088> mov rax, QWORD PTR [rbp-0x18]
$r8    : 0x8               
$r9    : 0x00005555555592c0  →  "Mohammad"
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592d0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb90│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdb98│+0x0008: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0010: 0x0000000000000000
0x00007fffffffdba8│+0x0018: 0x00005555555592a0  →  0x0000000000000000
0x00007fffffffdbb0│+0x0020: 0x0000555555554040  →  0x0000000400000006
0x00007fffffffdbb8│+0x0028: 0x0000000000000000
0x00007fffffffdbc0│+0x0030: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbc8│+0x0038: 0x0000555555555704  →  <++++info symbol 0x555555555704
test1+001b> mov QWORD PTR [rbp-0x8], rax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552c6 <+++info symbol 0x5555555552c6
alloc_student+007d> mov    rsi, rcx
   0x5555555552c9 <+++info symbol 0x5555555552c9
alloc_student+0080> mov    rdi, rax
   0x5555555552cc <+++info symbol 0x5555555552cc
alloc_student+0083> call   0x5555555550d0 <strncpy@plt>
 → 0x5555555552d1 <++++info symbol 0x5555555552d1
alloc_student+0088> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555552d5 <+++info symbol 0x5555555552d5
alloc_student+008c> mov    rbx, QWORD PTR [rax+0x8]
   0x5555555552d9 <+++info symbol 0x5555555552d9
alloc_student+0090> mov    rax, QWORD PTR [rbp-0x28]
   0x5555555552dd <+++info symbol 0x5555555552dd
alloc_student+0094> mov    rdi, rax
   0x5555555552e0 <+++info symbol 0x5555555552e0
alloc_student+0097> call   0x5555555550f0 <strlen@plt>
   0x5555555552e5 <+++info symbol 0x5555555552e5
alloc_student+009c> add    rax, rbx
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+81 ────
     76	   }
     77	 
     78	   // copy the name
     79	   st->name = malloc(strlen(name) + 1); // ENG POINT: why strlen(name) + 1?
     80	   strncpy(st->name, name, strlen(name));
           // name=0x00007fffffffdb98  →  [...]  →  "Mohammad", st=0x00007fffffffdba8  →  [...]  →  0x0000000000000000
 →   81	   *(st->name + strlen(name)) = 0;
     82	 
     83	   // initialize the list node
     84	   init_node(&st->node);
     85	 
     86	   return st;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555552d1 in alloc_student (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552d1 → alloc_student(name=0x555555556008 "Mohammad")
[#1] 0x555555555704 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
84	  init_node(&st->node);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb90
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592c8  →  0x0000000000000000
$rbx   : 0x00005555555592c0  →  "Mohammad"
$rcx   : 0x61686f4d        
$rdx   : 0x0000555555556008  →  "Mohammad"
$rsp   : 0x00007fffffffdb90  →  0x0000000000000000
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x0000555555556008  →  "Mohammad"
$rip   : 0x00005555555552eb  →  <++++info symbol 0x5555555552eb
alloc_student+00a2> mov rax, QWORD PTR [rbp-0x18]
$r8    : 0x8               
$r9    : 0x00005555555592c0  →  "Mohammad"
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592d0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb90│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdb98│+0x0008: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0010: 0x0000000000000000
0x00007fffffffdba8│+0x0018: 0x00005555555592a0  →  0x0000000000000000
0x00007fffffffdbb0│+0x0020: 0x0000555555554040  →  0x0000000400000006
0x00007fffffffdbb8│+0x0028: 0x0000000000000000
0x00007fffffffdbc0│+0x0030: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbc8│+0x0038: 0x0000555555555704  →  <++++info symbol 0x555555555704
test1+001b> mov QWORD PTR [rbp-0x8], rax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552e0 <+++info symbol 0x5555555552e0
alloc_student+0097> call   0x5555555550f0 <strlen@plt>
   0x5555555552e5 <+++info symbol 0x5555555552e5
alloc_student+009c> add    rax, rbx
   0x5555555552e8 <+++info symbol 0x5555555552e8
alloc_student+009f> mov    BYTE PTR [rax], 0x0
 → 0x5555555552eb <++++info symbol 0x5555555552eb
alloc_student+00a2> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555552ef <+++info symbol 0x5555555552ef
alloc_student+00a6> mov    rdi, rax
   0x5555555552f2 <+++info symbol 0x5555555552f2
alloc_student+00a9> call   0x555555555a2e <init_node>
   0x5555555552f7 <+++info symbol 0x5555555552f7
alloc_student+00ae> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555552fb <+++info symbol 0x5555555552fb
alloc_student+00b2> mov    rbx, QWORD PTR [rbp-0x8]
   0x5555555552ff <+++info symbol 0x5555555552ff
alloc_student+00b6> leave  
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+84 ────
     79	   st->name = malloc(strlen(name) + 1); // ENG POINT: why strlen(name) + 1?
     80	   strncpy(st->name, name, strlen(name));
     81	   *(st->name + strlen(name)) = 0;
     82	 
     83	   // initialize the list node
           // st=0x00007fffffffdba8  →  [...]  →  0x0000000000000000
 →   84	   init_node(&st->node);
     85	 
     86	   return st;
     87	 }
     88	 
     89	 /**
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555552eb in alloc_student (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552eb → alloc_student(name=0x555555556008 "Mohammad")
[#1] 0x555555555704 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb90
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592c8  →  0x0000000000000000
$rbx   : 0x00005555555592c0  →  "Mohammad"
$rcx   : 0x61686f4d        
$rdx   : 0x0000555555556008  →  "Mohammad"
$rsp   : 0x00007fffffffdb90  →  0x0000000000000000
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x0000555555556008  →  "Mohammad"
$rip   : 0x00005555555552eb  →  <++++info symbol 0x5555555552eb
alloc_student+00a2> mov rax, QWORD PTR [rbp-0x18]
$r8    : 0x8               
$r9    : 0x00005555555592c0  →  "Mohammad"
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592d0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb90│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdb98│+0x0008: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0010: 0x0000000000000000
0x00007fffffffdba8│+0x0018: 0x00005555555592a0  →  0x0000000000000000
0x00007fffffffdbb0│+0x0020: 0x0000555555554040  →  0x0000000400000006
0x00007fffffffdbb8│+0x0028: 0x0000000000000000
0x00007fffffffdbc0│+0x0030: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbc8│+0x0038: 0x0000555555555704  →  <++++info symbol 0x555555555704
test1+001b> mov QWORD PTR [rbp-0x8], rax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552e0 <+++info symbol 0x5555555552e0
alloc_student+0097> call   0x5555555550f0 <strlen@plt>
   0x5555555552e5 <+++info symbol 0x5555555552e5
alloc_student+009c> add    rax, rbx
   0x5555555552e8 <+++info symbol 0x5555555552e8
alloc_student+009f> mov    BYTE PTR [rax], 0x0
 → 0x5555555552eb <++++info symbol 0x5555555552eb
alloc_student+00a2> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555552ef <+++info symbol 0x5555555552ef
alloc_student+00a6> mov    rdi, rax
   0x5555555552f2 <+++info symbol 0x5555555552f2
alloc_student+00a9> call   0x555555555a2e <init_node>
   0x5555555552f7 <+++info symbol 0x5555555552f7
alloc_student+00ae> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555552fb <+++info symbol 0x5555555552fb
alloc_student+00b2> mov    rbx, QWORD PTR [rbp-0x8]
   0x5555555552ff <+++info symbol 0x5555555552ff
alloc_student+00b6> leave  
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+84 ────
     79	   st->name = malloc(strlen(name) + 1); // ENG POINT: why strlen(name) + 1?
     80	   strncpy(st->name, name, strlen(name));
     81	   *(st->name + strlen(name)) = 0;
     82	 
     83	   // initialize the list node
           // st=0x00007fffffffdba8  →  [...]  →  0x0000000000000000
 →   84	   init_node(&st->node);
     85	 
     86	   return st;
     87	 }
     88	 
     89	 /**
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555552eb in alloc_student (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552eb → alloc_student(name=0x555555556008 "Mohammad")
[#1] 0x555555555704 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
86	  return st;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb90
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rbx   : 0x00005555555592c0  →  "Mohammad"
$rcx   : 0x61686f4d        
$rdx   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdb90  →  0x0000000000000000
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rip   : 0x00005555555552f7  →  <++++info symbol 0x5555555552f7
alloc_student+00ae> mov rax, QWORD PTR [rbp-0x18]
$r8    : 0x8               
$r9    : 0x00005555555592c0  →  "Mohammad"
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592d0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb90│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdb98│+0x0008: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0010: 0x0000000000000000
0x00007fffffffdba8│+0x0018: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbb0│+0x0020: 0x0000555555554040  →  0x0000000400000006
0x00007fffffffdbb8│+0x0028: 0x0000000000000000
0x00007fffffffdbc0│+0x0030: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbc8│+0x0038: 0x0000555555555704  →  <++++info symbol 0x555555555704
test1+001b> mov QWORD PTR [rbp-0x8], rax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552eb <+++info symbol 0x5555555552eb
alloc_student+00a2> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555552ef <+++info symbol 0x5555555552ef
alloc_student+00a6> mov    rdi, rax
   0x5555555552f2 <+++info symbol 0x5555555552f2
alloc_student+00a9> call   0x555555555a2e <init_node>
 → 0x5555555552f7 <++++info symbol 0x5555555552f7
alloc_student+00ae> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555552fb <+++info symbol 0x5555555552fb
alloc_student+00b2> mov    rbx, QWORD PTR [rbp-0x8]
   0x5555555552ff <+++info symbol 0x5555555552ff
alloc_student+00b6> leave  
   0x555555555300 <+++info symbol 0x555555555300
alloc_student+00b7> ret    
   0x555555555301 <+++info symbol 0x555555555301
print_student+0000> endbr64 
   0x555555555305 <+++info symbol 0x555555555305
print_student+0004> push   rbp
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+86 ────
     81	   *(st->name + strlen(name)) = 0;
     82	 
     83	   // initialize the list node
     84	   init_node(&st->node);
     85	 
           // st=0x00007fffffffdba8  →  [...]  →  [loop detected]
 →   86	   return st;
     87	 }
     88	 
     89	 /**
     90	  * print_student() - print a student structure
     91	  *
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555552f7 in alloc_student (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552f7 → alloc_student(name=0x555555556008 "Mohammad")
[#1] 0x555555555704 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb90
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rbx   : 0x00005555555592c0  →  "Mohammad"
$rcx   : 0x61686f4d        
$rdx   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdb90  →  0x0000000000000000
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rip   : 0x00005555555552f7  →  <++++info symbol 0x5555555552f7
alloc_student+00ae> mov rax, QWORD PTR [rbp-0x18]
$r8    : 0x8               
$r9    : 0x00005555555592c0  →  "Mohammad"
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592d0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb90│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdb98│+0x0008: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0010: 0x0000000000000000
0x00007fffffffdba8│+0x0018: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbb0│+0x0020: 0x0000555555554040  →  0x0000000400000006
0x00007fffffffdbb8│+0x0028: 0x0000000000000000
0x00007fffffffdbc0│+0x0030: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbc8│+0x0038: 0x0000555555555704  →  <++++info symbol 0x555555555704
test1+001b> mov QWORD PTR [rbp-0x8], rax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552eb <+++info symbol 0x5555555552eb
alloc_student+00a2> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555552ef <+++info symbol 0x5555555552ef
alloc_student+00a6> mov    rdi, rax
   0x5555555552f2 <+++info symbol 0x5555555552f2
alloc_student+00a9> call   0x555555555a2e <init_node>
 → 0x5555555552f7 <++++info symbol 0x5555555552f7
alloc_student+00ae> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555552fb <+++info symbol 0x5555555552fb
alloc_student+00b2> mov    rbx, QWORD PTR [rbp-0x8]
   0x5555555552ff <+++info symbol 0x5555555552ff
alloc_student+00b6> leave  
   0x555555555300 <+++info symbol 0x555555555300
alloc_student+00b7> ret    
   0x555555555301 <+++info symbol 0x555555555301
print_student+0000> endbr64 
   0x555555555305 <+++info symbol 0x555555555305
print_student+0004> push   rbp
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+86 ────
     81	   *(st->name + strlen(name)) = 0;
     82	 
     83	   // initialize the list node
     84	   init_node(&st->node);
     85	 
           // st=0x00007fffffffdba8  →  [...]  →  [loop detected]
 →   86	   return st;
     87	 }
     88	 
     89	 /**
     90	  * print_student() - print a student structure
     91	  *
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555552f7 in alloc_student (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552f7 → alloc_student(name=0x555555556008 "Mohammad")
[#1] 0x555555555704 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
87	}
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb90
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rbx   : 0x00005555555592c0  →  "Mohammad"
$rcx   : 0x61686f4d        
$rdx   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdb90  →  0x0000000000000000
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rip   : 0x00005555555552fb  →  <++++info symbol 0x5555555552fb
alloc_student+00b2> mov rbx, QWORD PTR [rbp-0x8]
$r8    : 0x8               
$r9    : 0x00005555555592c0  →  "Mohammad"
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592d0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb90│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdb98│+0x0008: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0010: 0x0000000000000000
0x00007fffffffdba8│+0x0018: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbb0│+0x0020: 0x0000555555554040  →  0x0000000400000006
0x00007fffffffdbb8│+0x0028: 0x0000000000000000
0x00007fffffffdbc0│+0x0030: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbc8│+0x0038: 0x0000555555555704  →  <++++info symbol 0x555555555704
test1+001b> mov QWORD PTR [rbp-0x8], rax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552ef <+++info symbol 0x5555555552ef
alloc_student+00a6> mov    rdi, rax
   0x5555555552f2 <+++info symbol 0x5555555552f2
alloc_student+00a9> call   0x555555555a2e <init_node>
   0x5555555552f7 <+++info symbol 0x5555555552f7
alloc_student+00ae> mov    rax, QWORD PTR [rbp-0x18]
 → 0x5555555552fb <++++info symbol 0x5555555552fb
alloc_student+00b2> mov    rbx, QWORD PTR [rbp-0x8]
   0x5555555552ff <+++info symbol 0x5555555552ff
alloc_student+00b6> leave  
   0x555555555300 <+++info symbol 0x555555555300
alloc_student+00b7> ret    
   0x555555555301 <+++info symbol 0x555555555301
print_student+0000> endbr64 
   0x555555555305 <+++info symbol 0x555555555305
print_student+0004> push   rbp
   0x555555555306 <+++info symbol 0x555555555306
print_student+0005> mov    rbp, rsp
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+87 ────
     82	 
     83	   // initialize the list node
     84	   init_node(&st->node);
     85	 
     86	   return st;
 →   87	 }
     88	 
     89	 /**
     90	  * print_student() - print a student structure
     91	  *
     92	  * @node  The node struct to print.
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555552fb in alloc_student (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552fb → alloc_student(name=0x555555556008 "Mohammad")
[#1] 0x555555555704 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb90
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rbx   : 0x00005555555592c0  →  "Mohammad"
$rcx   : 0x61686f4d        
$rdx   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdb90  →  0x0000000000000000
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rip   : 0x00005555555552fb  →  <++++info symbol 0x5555555552fb
alloc_student+00b2> mov rbx, QWORD PTR [rbp-0x8]
$r8    : 0x8               
$r9    : 0x00005555555592c0  →  "Mohammad"
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592d0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb90│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdb98│+0x0008: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0010: 0x0000000000000000
0x00007fffffffdba8│+0x0018: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbb0│+0x0020: 0x0000555555554040  →  0x0000000400000006
0x00007fffffffdbb8│+0x0028: 0x0000000000000000
0x00007fffffffdbc0│+0x0030: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbc8│+0x0038: 0x0000555555555704  →  <++++info symbol 0x555555555704
test1+001b> mov QWORD PTR [rbp-0x8], rax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552ef <+++info symbol 0x5555555552ef
alloc_student+00a6> mov    rdi, rax
   0x5555555552f2 <+++info symbol 0x5555555552f2
alloc_student+00a9> call   0x555555555a2e <init_node>
   0x5555555552f7 <+++info symbol 0x5555555552f7
alloc_student+00ae> mov    rax, QWORD PTR [rbp-0x18]
 → 0x5555555552fb <++++info symbol 0x5555555552fb
alloc_student+00b2> mov    rbx, QWORD PTR [rbp-0x8]
   0x5555555552ff <+++info symbol 0x5555555552ff
alloc_student+00b6> leave  
   0x555555555300 <+++info symbol 0x555555555300
alloc_student+00b7> ret    
   0x555555555301 <+++info symbol 0x555555555301
print_student+0000> endbr64 
   0x555555555305 <+++info symbol 0x555555555305
print_student+0004> push   rbp
   0x555555555306 <+++info symbol 0x555555555306
print_student+0005> mov    rbp, rsp
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+87 ────
     82	 
     83	   // initialize the list node
     84	   init_node(&st->node);
     85	 
     86	   return st;
 →   87	 }
     88	 
     89	 /**
     90	  * print_student() - print a student structure
     91	  *
     92	  * @node  The node struct to print.
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555552fb in alloc_student (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552fb → alloc_student(name=0x555555556008 "Mohammad")
[#1] 0x555555555704 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
test1 () at student.c:192
192	  printf("Test 1 (simple add_head): ");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x61686f4d        
$rdx   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rip   : 0x0000555555555708  →  <++++info symbol 0x555555555708
test1+001f> lea rax, [rip+0x9e5]        # 0x5555555560f4
$r8    : 0x8               
$r9    : 0x00005555555592c0  →  "Mohammad"
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592d0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
   0x5555555556ff <+++info symbol 0x5555555556ff
test1+0016> call   0x555555555249 <alloc_student>
   0x555555555704 <+++info symbol 0x555555555704
test1+001b> mov    QWORD PTR [rbp-0x8], rax
 → 0x555555555708 <++++info symbol 0x555555555708
test1+001f> lea    rax, [rip+0x9e5]        # 0x5555555560f4
   0x55555555570f <+++info symbol 0x55555555570f
test1+0026> mov    rdi, rax
   0x555555555712 <+++info symbol 0x555555555712
test1+0029> mov    eax, 0x0
   0x555555555717 <+++info symbol 0x555555555717
test1+002e> call   0x555555555100 <printf@plt>
   0x55555555571c <+++info symbol 0x55555555571c
test1+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555720 <+++info symbol 0x555555555720
test1+0037> mov    rsi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+192 ────
    187	 
    188	 int test1(void) {
    189	   struct student *st = alloc_student("Mohammad");
    190	 
    191	   // This test1 just tests adding at the head and then deleting.
 →  192	   printf("Test 1 (simple add_head): ");
    193	   add_head(&head, &st->node);
    194	   if(IS_EMPTY(head)) {
    195	     printf("FAILED (list is still empty after adding)\n");
    196	     return 0;
    197	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555708 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555708 → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x61686f4d        
$rdx   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rip   : 0x0000555555555708  →  <++++info symbol 0x555555555708
test1+001f> lea rax, [rip+0x9e5]        # 0x5555555560f4
$r8    : 0x8               
$r9    : 0x00005555555592c0  →  "Mohammad"
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592d0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
   0x5555555556ff <+++info symbol 0x5555555556ff
test1+0016> call   0x555555555249 <alloc_student>
   0x555555555704 <+++info symbol 0x555555555704
test1+001b> mov    QWORD PTR [rbp-0x8], rax
 → 0x555555555708 <++++info symbol 0x555555555708
test1+001f> lea    rax, [rip+0x9e5]        # 0x5555555560f4
   0x55555555570f <+++info symbol 0x55555555570f
test1+0026> mov    rdi, rax
   0x555555555712 <+++info symbol 0x555555555712
test1+0029> mov    eax, 0x0
   0x555555555717 <+++info symbol 0x555555555717
test1+002e> call   0x555555555100 <printf@plt>
   0x55555555571c <+++info symbol 0x55555555571c
test1+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555720 <+++info symbol 0x555555555720
test1+0037> mov    rsi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+192 ────
    187	 
    188	 int test1(void) {
    189	   struct student *st = alloc_student("Mohammad");
    190	 
    191	   // This test1 just tests adding at the head and then deleting.
 →  192	   printf("Test 1 (simple add_head): ");
    193	   add_head(&head, &st->node);
    194	   if(IS_EMPTY(head)) {
    195	     printf("FAILED (list is still empty after adding)\n");
    196	     return 0;
    197	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555708 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555708 → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
193	  add_head(&head, &st->node);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1a              
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$rdi   : 0x00007fffffffd670  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x000055555555571c  →  <++++info symbol 0x55555555571c
test1+0033> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555570f <+++info symbol 0x55555555570f
test1+0026> mov    rdi, rax
   0x555555555712 <+++info symbol 0x555555555712
test1+0029> mov    eax, 0x0
   0x555555555717 <+++info symbol 0x555555555717
test1+002e> call   0x555555555100 <printf@plt>
 → 0x55555555571c <++++info symbol 0x55555555571c
test1+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555720 <+++info symbol 0x555555555720
test1+0037> mov    rsi, rax
   0x555555555723 <+++info symbol 0x555555555723
test1+003a> lea    rax, [rip+0x2956]        # 0x555555558080 <head>
   0x55555555572a <+++info symbol 0x55555555572a
test1+0041> mov    rdi, rax
   0x55555555572d <+++info symbol 0x55555555572d
test1+0044> call   0x555555555a48 <add_head>
   0x555555555732 <+++info symbol 0x555555555732
test1+0049> mov    rax, QWORD PTR [rip+0x2947]        # 0x555555558080 <head>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+193 ────
    188	 
    189	 int test1(void) {
    190	   struct student *st = alloc_student("Mohammad");
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
 →  193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
    195	   if(IS_EMPTY(head)) {
    196	     printf("FAILED (list is still empty after adding)\n");
    197	     return 0;
    198	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555571c in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555571c → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1a              
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$rdi   : 0x00007fffffffd670  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x000055555555571c  →  <++++info symbol 0x55555555571c
test1+0033> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555570f <+++info symbol 0x55555555570f
test1+0026> mov    rdi, rax
   0x555555555712 <+++info symbol 0x555555555712
test1+0029> mov    eax, 0x0
   0x555555555717 <+++info symbol 0x555555555717
test1+002e> call   0x555555555100 <printf@plt>
 → 0x55555555571c <++++info symbol 0x55555555571c
test1+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555720 <+++info symbol 0x555555555720
test1+0037> mov    rsi, rax
   0x555555555723 <+++info symbol 0x555555555723
test1+003a> lea    rax, [rip+0x2956]        # 0x555555558080 <head>
   0x55555555572a <+++info symbol 0x55555555572a
test1+0041> mov    rdi, rax
   0x55555555572d <+++info symbol 0x55555555572d
test1+0044> call   0x555555555a48 <add_head>
   0x555555555732 <+++info symbol 0x555555555732
test1+0049> mov    rax, QWORD PTR [rip+0x2947]        # 0x555555558080 <head>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+193 ────
    188	 
    189	 int test1(void) {
    190	   struct student *st = alloc_student("Mohammad");
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
 →  193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
    195	   if(IS_EMPTY(head)) {
    196	     printf("FAILED (list is still empty after adding)\n");
    197	     return 0;
    198	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555571c in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555571c → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
194	  if(IS_EMPTY(head)) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555732  →  <++++info symbol 0x555555555732
test1+0049> mov rax, QWORD PTR [rip+0x2947]        # 0x555555558080 <head>
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555723 <+++info symbol 0x555555555723
test1+003a> lea    rax, [rip+0x2956]        # 0x555555558080 <head>
   0x55555555572a <+++info symbol 0x55555555572a
test1+0041> mov    rdi, rax
   0x55555555572d <+++info symbol 0x55555555572d
test1+0044> call   0x555555555a48 <add_head>
 → 0x555555555732 <++++info symbol 0x555555555732
test1+0049> mov    rax, QWORD PTR [rip+0x2947]        # 0x555555558080 <head>
   0x555555555739 <+++info symbol 0x555555555739
test1+0050> lea    rdx, [rip+0x2940]        # 0x555555558080 <head>
   0x555555555740 <+++info symbol 0x555555555740
test1+0057> cmp    rax, rdx
   0x555555555743 <+++info symbol 0x555555555743
test1+005a> jne    0x55555555575b <test1+114>
   0x555555555745 <+++info symbol 0x555555555745
test1+005c> lea    rax, [rip+0x9c4]        # 0x555555556110
   0x55555555574c <+++info symbol 0x55555555574c
test1+0063> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+194 ────
    189	 int test1(void) {
    190	   struct student *st = alloc_student("Mohammad");
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
    193	   printf("Test 1 (simple add_head): ");
           // st=0x00007fffffffdbd8  →  [...]  →  [loop detected]
 →  194	   add_head(&head, &st->node);
    195	   if(IS_EMPTY(head)) {
    196	     printf("FAILED (list is still empty after adding)\n");
    197	     return 0;
    198	   }
    199	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555732 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555732 → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555732  →  <++++info symbol 0x555555555732
test1+0049> mov rax, QWORD PTR [rip+0x2947]        # 0x555555558080 <head>
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555723 <+++info symbol 0x555555555723
test1+003a> lea    rax, [rip+0x2956]        # 0x555555558080 <head>
   0x55555555572a <+++info symbol 0x55555555572a
test1+0041> mov    rdi, rax
   0x55555555572d <+++info symbol 0x55555555572d
test1+0044> call   0x555555555a48 <add_head>
 → 0x555555555732 <++++info symbol 0x555555555732
test1+0049> mov    rax, QWORD PTR [rip+0x2947]        # 0x555555558080 <head>
   0x555555555739 <+++info symbol 0x555555555739
test1+0050> lea    rdx, [rip+0x2940]        # 0x555555558080 <head>
   0x555555555740 <+++info symbol 0x555555555740
test1+0057> cmp    rax, rdx
   0x555555555743 <+++info symbol 0x555555555743
test1+005a> jne    0x55555555575b <test1+114>
   0x555555555745 <+++info symbol 0x555555555745
test1+005c> lea    rax, [rip+0x9c4]        # 0x555555556110
   0x55555555574c <+++info symbol 0x55555555574c
test1+0063> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+194 ────
    189	 int test1(void) {
    190	   struct student *st = alloc_student("Mohammad");
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
    193	   printf("Test 1 (simple add_head): ");
           // st=0x00007fffffffdbd8  →  [...]  →  [loop detected]
 →  194	   add_head(&head, &st->node);
    195	   if(IS_EMPTY(head)) {
    196	     printf("FAILED (list is still empty after adding)\n");
    197	     return 0;
    198	   }
    199	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555732 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555732 → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
195	    printf("FAILED (list is still empty after adding)\n");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555745  →  <++++info symbol 0x555555555745
test1+005c> lea rax, [rip+0x9c4]        # 0x555555556110
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555739 <+++info symbol 0x555555555739
test1+0050> lea    rdx, [rip+0x2940]        # 0x555555558080 <head>
   0x555555555740 <+++info symbol 0x555555555740
test1+0057> cmp    rax, rdx
   0x555555555743 <+++info symbol 0x555555555743
test1+005a> jne    0x55555555575b <test1+114>
 → 0x555555555745 <++++info symbol 0x555555555745
test1+005c> lea    rax, [rip+0x9c4]        # 0x555555556110
   0x55555555574c <+++info symbol 0x55555555574c
test1+0063> mov    rdi, rax
   0x55555555574f <+++info symbol 0x55555555574f
test1+0066> call   0x5555555550e0 <puts@plt>
   0x555555555754 <+++info symbol 0x555555555754
test1+006b> mov    eax, 0x0
   0x555555555759 <+++info symbol 0x555555555759
test1+0070> jmp    0x5555555557d4 <test1+235>
   0x55555555575b <+++info symbol 0x55555555575b
test1+0072> mov    rdx, QWORD PTR [rip+0x291e]        # 0x555555558080 <head>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+195 ────
    190	   struct student *st = alloc_student("Mohammad");
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
    193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
 →  195	   if(IS_EMPTY(head)) {
    196	     printf("FAILED (list is still empty after adding)\n");
    197	     return 0;
    198	   }
    199	 
    200	   // check if it was inserted
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555745 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555745 → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555745  →  <++++info symbol 0x555555555745
test1+005c> lea rax, [rip+0x9c4]        # 0x555555556110
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555739 <+++info symbol 0x555555555739
test1+0050> lea    rdx, [rip+0x2940]        # 0x555555558080 <head>
   0x555555555740 <+++info symbol 0x555555555740
test1+0057> cmp    rax, rdx
   0x555555555743 <+++info symbol 0x555555555743
test1+005a> jne    0x55555555575b <test1+114>
 → 0x555555555745 <++++info symbol 0x555555555745
test1+005c> lea    rax, [rip+0x9c4]        # 0x555555556110
   0x55555555574c <+++info symbol 0x55555555574c
test1+0063> mov    rdi, rax
   0x55555555574f <+++info symbol 0x55555555574f
test1+0066> call   0x5555555550e0 <puts@plt>
   0x555555555754 <+++info symbol 0x555555555754
test1+006b> mov    eax, 0x0
   0x555555555759 <+++info symbol 0x555555555759
test1+0070> jmp    0x5555555557d4 <test1+235>
   0x55555555575b <+++info symbol 0x55555555575b
test1+0072> mov    rdx, QWORD PTR [rip+0x291e]        # 0x555555558080 <head>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+195 ────
    190	   struct student *st = alloc_student("Mohammad");
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
    193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
 →  195	   if(IS_EMPTY(head)) {
    196	     printf("FAILED (list is still empty after adding)\n");
    197	     return 0;
    198	   }
    199	 
    200	   // check if it was inserted
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555745 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555745 → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
196	    return 0;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2a              
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x0000555555555754  →  <++++info symbol 0x555555555754
test1+006b> mov eax, 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): FAILED (list is still em[...]"
$r10   : 0x77              
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555745 <+++info symbol 0x555555555745
test1+005c> lea    rax, [rip+0x9c4]        # 0x555555556110
   0x55555555574c <+++info symbol 0x55555555574c
test1+0063> mov    rdi, rax
   0x55555555574f <+++info symbol 0x55555555574f
test1+0066> call   0x5555555550e0 <puts@plt>
 → 0x555555555754 <++++info symbol 0x555555555754
test1+006b> mov    eax, 0x0
   0x555555555759 <+++info symbol 0x555555555759
test1+0070> jmp    0x5555555557d4 <test1+235>
   0x55555555575b <+++info symbol 0x55555555575b
test1+0072> mov    rdx, QWORD PTR [rip+0x291e]        # 0x555555558080 <head>
   0x555555555762 <+++info symbol 0x555555555762
test1+0079> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555766 <+++info symbol 0x555555555766
test1+007d> cmp    rdx, rax
   0x555555555769 <+++info symbol 0x555555555769
test1+0080> je     0x555555555781 <test1+152>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+196 ────
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
    193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
    195	   if(IS_EMPTY(head)) {
 →  196	     printf("FAILED (list is still empty after adding)\n");
    197	     return 0;
    198	   }
    199	 
    200	   // check if it was inserted
    201	   if(head.next != &st->node) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555754 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555754 → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2a              
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x0000555555555754  →  <++++info symbol 0x555555555754
test1+006b> mov eax, 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): FAILED (list is still em[...]"
$r10   : 0x77              
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555745 <+++info symbol 0x555555555745
test1+005c> lea    rax, [rip+0x9c4]        # 0x555555556110
   0x55555555574c <+++info symbol 0x55555555574c
test1+0063> mov    rdi, rax
   0x55555555574f <+++info symbol 0x55555555574f
test1+0066> call   0x5555555550e0 <puts@plt>
 → 0x555555555754 <++++info symbol 0x555555555754
test1+006b> mov    eax, 0x0
   0x555555555759 <+++info symbol 0x555555555759
test1+0070> jmp    0x5555555557d4 <test1+235>
   0x55555555575b <+++info symbol 0x55555555575b
test1+0072> mov    rdx, QWORD PTR [rip+0x291e]        # 0x555555558080 <head>
   0x555555555762 <+++info symbol 0x555555555762
test1+0079> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555766 <+++info symbol 0x555555555766
test1+007d> cmp    rdx, rax
   0x555555555769 <+++info symbol 0x555555555769
test1+0080> je     0x555555555781 <test1+152>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+196 ────
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
    193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
    195	   if(IS_EMPTY(head)) {
 →  196	     printf("FAILED (list is still empty after adding)\n");
    197	     return 0;
    198	   }
    199	 
    200	   // check if it was inserted
    201	   if(head.next != &st->node) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555754 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555754 → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
214	}
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x00005555555557d4  →  <++++info symbol 0x5555555557d4
test1+00eb> leave 
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): FAILED (list is still em[...]"
$r10   : 0x77              
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555557c7 <+++info symbol 0x5555555557c7
test1+00de> mov    rdi, rax
   0x5555555557ca <+++info symbol 0x5555555557ca
test1+00e1> call   0x5555555550e0 <puts@plt>
   0x5555555557cf <+++info symbol 0x5555555557cf
test1+00e6> mov    eax, 0x1
 → 0x5555555557d4 <++++info symbol 0x5555555557d4
test1+00eb> leave  
   0x5555555557d5 <+++info symbol 0x5555555557d5
test1+00ec> ret    
   0x5555555557d6 <+++info symbol 0x5555555557d6
test2+0000> endbr64 
   0x5555555557da <+++info symbol 0x5555555557da
test2+0004> push   rbp
   0x5555555557db <+++info symbol 0x5555555557db
test2+0005> mov    rbp, rsp
   0x5555555557de <+++info symbol 0x5555555557de
test2+0008> sub    rsp, 0x10
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+214 ────
    209	     printf("FAILED (list is still not empty after delete)\n");
    210	     return 0;
    211	   }
    212	 
    213	   printf("OK.\n");
 →  214	   return 1;
    215	 }
    216	 
    217	 int test2(void) {
    218	   struct student *st = alloc_student("Mohammad");
    219	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555557d4 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555557d4 → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x00005555555557d4  →  <++++info symbol 0x5555555557d4
test1+00eb> leave 
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): FAILED (list is still em[...]"
$r10   : 0x77              
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555557c7 <+++info symbol 0x5555555557c7
test1+00de> mov    rdi, rax
   0x5555555557ca <+++info symbol 0x5555555557ca
test1+00e1> call   0x5555555550e0 <puts@plt>
   0x5555555557cf <+++info symbol 0x5555555557cf
test1+00e6> mov    eax, 0x1
 → 0x5555555557d4 <++++info symbol 0x5555555557d4
test1+00eb> leave  
   0x5555555557d5 <+++info symbol 0x5555555557d5
test1+00ec> ret    
   0x5555555557d6 <+++info symbol 0x5555555557d6
test2+0000> endbr64 
   0x5555555557da <+++info symbol 0x5555555557da
test2+0004> push   rbp
   0x5555555557db <+++info symbol 0x5555555557db
test2+0005> mov    rbp, rsp
   0x5555555557de <+++info symbol 0x5555555557de
test2+0008> sub    rsp, 0x10
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+214 ────
    209	     printf("FAILED (list is still not empty after delete)\n");
    210	     return 0;
    211	   }
    212	 
    213	   printf("OK.\n");
 →  214	   return 1;
    215	 }
    216	 
    217	 int test2(void) {
    218	   struct student *st = alloc_student("Mohammad");
    219	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555557d4 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555557d4 → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
main (argc=1, argv=0x7fffffffdd28) at student.c:150
150	      if(!test1()) exit(EXIT_FAILURE);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): FAILED (list is still em[...]"
$r10   : 0x77              
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555d5 <+++info symbol 0x5555555555d5
main+0271> mov    edi, 0x1
   0x5555555555da <+++info symbol 0x5555555555da
main+0276> call   0x555555555150 <exit@plt>
   0x5555555555df <+++info symbol 0x5555555555df
main+027b> call   0x5555555556e9 <test1>
 → 0x5555555555e4 <++++info symbol 0x5555555555e4
main+0280> test   eax, eax
   0x5555555555e6 <+++info symbol 0x5555555555e6
main+0282> jne    0x5555555555f2 <main+654>
   0x5555555555e8 <+++info symbol 0x5555555555e8
main+0284> mov    edi, 0x1
   0x5555555555ed <+++info symbol 0x5555555555ed
main+0289> call   0x555555555150 <exit@plt>
   0x5555555555f2 <+++info symbol 0x5555555555f2
main+028e> call   0x5555555557d6 <test2>
   0x5555555555f7 <+++info symbol 0x5555555555f7
main+0293> test   eax, eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+150 ────
    145	       break;
    146	     case 3:
    147	       if(!test3()) exit(EXIT_FAILURE);
    148	       break;
    149	     case -1:
 →  150	     default:
    151	       if(!test1()) exit(EXIT_FAILURE);
    152	       if(!test2()) exit(EXIT_FAILURE);
    153	       if(!test3()) exit(EXIT_FAILURE);
    154	       break;
    155	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555e4 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): FAILED (list is still em[...]"
$r10   : 0x77              
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555d5 <+++info symbol 0x5555555555d5
main+0271> mov    edi, 0x1
   0x5555555555da <+++info symbol 0x5555555555da
main+0276> call   0x555555555150 <exit@plt>
   0x5555555555df <+++info symbol 0x5555555555df
main+027b> call   0x5555555556e9 <test1>
 → 0x5555555555e4 <++++info symbol 0x5555555555e4
main+0280> test   eax, eax
   0x5555555555e6 <+++info symbol 0x5555555555e6
main+0282> jne    0x5555555555f2 <main+654>
   0x5555555555e8 <+++info symbol 0x5555555555e8
main+0284> mov    edi, 0x1
   0x5555555555ed <+++info symbol 0x5555555555ed
main+0289> call   0x555555555150 <exit@plt>
   0x5555555555f2 <+++info symbol 0x5555555555f2
main+028e> call   0x5555555557d6 <test2>
   0x5555555555f7 <+++info symbol 0x5555555555f7
main+0293> test   eax, eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+150 ────
    145	       break;
    146	     case 3:
    147	       if(!test3()) exit(EXIT_FAILURE);
    148	       break;
    149	     case -1:
 →  150	     default:
    151	       if(!test1()) exit(EXIT_FAILURE);
    152	       if(!test2()) exit(EXIT_FAILURE);
    153	       if(!test3()) exit(EXIT_FAILURE);
    154	       break;
    155	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555e4 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
[Inferior 1 (process 4616) exited with code 01]
+run
Starting program: /home/liub5/CSSE332-lab-liub5/debug/student.bin 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=1, argv=0x7fffffffdd28) at student.c:105
105	  init_node(&head);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555377  →  <++++info symbol 0x555555555377
main+0013> lea rax, [rip+0x2d02]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555536c <+++info symbol 0x55555555536c
main+0008> sub    rsp, 0x20
   0x555555555370 <+++info symbol 0x555555555370
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555373 <+++info symbol 0x555555555373
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x555555555377 <++++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
   0x555555555386 <+++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+105 ────
    100	 }
    101	 
    102	 int main(int argc, char **argv) {
    103	   int i, j, num_tests;
    104	 
 →  105	   // 1. Init the head
    106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
    110	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555377 in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555377 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555377  →  <++++info symbol 0x555555555377
main+0013> lea rax, [rip+0x2d02]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555536c <+++info symbol 0x55555555536c
main+0008> sub    rsp, 0x20
   0x555555555370 <+++info symbol 0x555555555370
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555373 <+++info symbol 0x555555555373
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x555555555377 <++++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
   0x555555555386 <+++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+105 ────
    100	 }
    101	 
    102	 int main(int argc, char **argv) {
    103	   int i, j, num_tests;
    104	 
 →  105	   // 1. Init the head
    106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
    110	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555377 in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555377 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
108	  num_tests = parse_args(argc, argv);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555386  →  <++++info symbol 0x555555555386
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555377 <+++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
 → 0x555555555386 <++++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+108 ────
    103	   int i, j, num_tests;
    104	 
    105	   // 1. Init the head
    106	   init_node(&head);
    107	 
 →  108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
    110	 
    111	   switch(num_tests) {
    112	     case 0:
    113	       // Allocate nodes and set the grades.
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555386 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555386 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555386  →  <++++info symbol 0x555555555386
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555377 <+++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
 → 0x555555555386 <++++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+108 ────
    103	   int i, j, num_tests;
    104	 
    105	   // 1. Init the head
    106	   init_node(&head);
    107	 
 →  108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
    110	 
    111	   switch(num_tests) {
    112	     case 0:
    113	       // Allocate nodes and set the grades.
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555386 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555386 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
110	  switch(num_tests) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x000055555555539a  →  <++++info symbol 0x55555555539a
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x55555555539a <++++info symbol 0x55555555539a
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x55555555539e <+++info symbol 0x55555555539e
main+003a> je     0x5555555555cc <main+616>
   0x5555555553a4 <+++info symbol 0x5555555553a4
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553a8 <+++info symbol 0x5555555553a8
main+0044> jg     0x5555555555df <main+635>
   0x5555555553ae <+++info symbol 0x5555555553ae
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553b2 <+++info symbol 0x5555555553b2
main+004e> je     0x5555555555b9 <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+110 ────
    105	   // 1. Init the head
    106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
 →  110	 
    111	   switch(num_tests) {
    112	     case 0:
    113	       // Allocate nodes and set the grades.
    114	       for(i = 0; i < NUM_STUDENTS; i++) {
    115	         students[i] = alloc_student(names[i]);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539a in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539a → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x000055555555539a  →  <++++info symbol 0x55555555539a
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x55555555539a <++++info symbol 0x55555555539a
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x55555555539e <+++info symbol 0x55555555539e
main+003a> je     0x5555555555cc <main+616>
   0x5555555553a4 <+++info symbol 0x5555555553a4
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553a8 <+++info symbol 0x5555555553a8
main+0044> jg     0x5555555555df <main+635>
   0x5555555553ae <+++info symbol 0x5555555553ae
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553b2 <+++info symbol 0x5555555553b2
main+004e> je     0x5555555555b9 <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+110 ────
    105	   // 1. Init the head
    106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
 →  110	 
    111	   switch(num_tests) {
    112	     case 0:
    113	       // Allocate nodes and set the grades.
    114	       for(i = 0; i < NUM_STUDENTS; i++) {
    115	         students[i] = alloc_student(names[i]);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539a in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539a → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
150	      if(!test1()) exit(EXIT_FAILURE);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555df  →  <++++info symbol 0x5555555555df
main+027b> call 0x5555555556e9 <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555d3 <+++info symbol 0x5555555555d3
main+026f> jne    0x55555555561e <main+698>
   0x5555555555d5 <+++info symbol 0x5555555555d5
main+0271> mov    edi, 0x1
   0x5555555555da <+++info symbol 0x5555555555da
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555df <++++info symbol 0x5555555555df
main+027b> call   0x5555555556e9 <test1>
   ↳  0x5555555556e9 <+++info symbol 0x5555555556e9
test1+0000> endbr64 
      0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
      0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
      0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
      0x5555555556f5 <+++info symbol 0x5555555556f5
test1+000c> lea    rax, [rip+0x90c]        # 0x555555556008
      0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+150 ────
    145	       break;
    146	     case 3:
    147	       if(!test3()) exit(EXIT_FAILURE);
    148	       break;
    149	     case -1:
 →  150	     default:
    151	       if(!test1()) exit(EXIT_FAILURE);
    152	       if(!test2()) exit(EXIT_FAILURE);
    153	       if(!test3()) exit(EXIT_FAILURE);
    154	       break;
    155	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555df in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555df → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555df  →  <++++info symbol 0x5555555555df
main+027b> call 0x5555555556e9 <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555d3 <+++info symbol 0x5555555555d3
main+026f> jne    0x55555555561e <main+698>
   0x5555555555d5 <+++info symbol 0x5555555555d5
main+0271> mov    edi, 0x1
   0x5555555555da <+++info symbol 0x5555555555da
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555df <++++info symbol 0x5555555555df
main+027b> call   0x5555555556e9 <test1>
   ↳  0x5555555556e9 <+++info symbol 0x5555555556e9
test1+0000> endbr64 
      0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
      0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
      0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
      0x5555555556f5 <+++info symbol 0x5555555556f5
test1+000c> lea    rax, [rip+0x90c]        # 0x555555556008
      0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+150 ────
    145	       break;
    146	     case 3:
    147	       if(!test3()) exit(EXIT_FAILURE);
    148	       break;
    149	     case -1:
 →  150	     default:
    151	       if(!test1()) exit(EXIT_FAILURE);
    152	       if(!test2()) exit(EXIT_FAILURE);
    153	       if(!test3()) exit(EXIT_FAILURE);
    154	       break;
    155	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555df in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555df → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
[Inferior 1 (process 7771) exited with code 01]
+run
Starting program: /home/liub5/CSSE332-lab-liub5/debug/student.bin 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=1, argv=0x7fffffffdd28) at student.c:105
105	  init_node(&head);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555377  →  <++++info symbol 0x555555555377
main+0013> lea rax, [rip+0x2d02]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555536c <+++info symbol 0x55555555536c
main+0008> sub    rsp, 0x20
   0x555555555370 <+++info symbol 0x555555555370
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555373 <+++info symbol 0x555555555373
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x555555555377 <++++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
   0x555555555386 <+++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+105 ────
    100	 }
    101	 
    102	 int main(int argc, char **argv) {
    103	   int i, j, num_tests;
    104	 
 →  105	   // 1. Init the head
    106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
    110	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555377 in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555377 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555377  →  <++++info symbol 0x555555555377
main+0013> lea rax, [rip+0x2d02]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555536c <+++info symbol 0x55555555536c
main+0008> sub    rsp, 0x20
   0x555555555370 <+++info symbol 0x555555555370
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555373 <+++info symbol 0x555555555373
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x555555555377 <++++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
   0x555555555386 <+++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+105 ────
    100	 }
    101	 
    102	 int main(int argc, char **argv) {
    103	   int i, j, num_tests;
    104	 
 →  105	   // 1. Init the head
    106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
    110	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555377 in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555377 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
108	  num_tests = parse_args(argc, argv);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555386  →  <++++info symbol 0x555555555386
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555377 <+++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
 → 0x555555555386 <++++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+108 ────
    103	   int i, j, num_tests;
    104	 
    105	   // 1. Init the head
    106	   init_node(&head);
    107	 
 →  108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
    110	 
    111	   switch(num_tests) {
    112	     case 0:
    113	       // Allocate nodes and set the grades.
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555386 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555386 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555386  →  <++++info symbol 0x555555555386
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555377 <+++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
 → 0x555555555386 <++++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+108 ────
    103	   int i, j, num_tests;
    104	 
    105	   // 1. Init the head
    106	   init_node(&head);
    107	 
 →  108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
    110	 
    111	   switch(num_tests) {
    112	     case 0:
    113	       // Allocate nodes and set the grades.
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555386 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555386 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
110	  switch(num_tests) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x000055555555539a  →  <++++info symbol 0x55555555539a
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x55555555539a <++++info symbol 0x55555555539a
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x55555555539e <+++info symbol 0x55555555539e
main+003a> je     0x5555555555cc <main+616>
   0x5555555553a4 <+++info symbol 0x5555555553a4
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553a8 <+++info symbol 0x5555555553a8
main+0044> jg     0x5555555555df <main+635>
   0x5555555553ae <+++info symbol 0x5555555553ae
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553b2 <+++info symbol 0x5555555553b2
main+004e> je     0x5555555555b9 <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+110 ────
    105	   // 1. Init the head
    106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
 →  110	 
    111	   switch(num_tests) {
    112	     case 0:
    113	       // Allocate nodes and set the grades.
    114	       for(i = 0; i < NUM_STUDENTS; i++) {
    115	         students[i] = alloc_student(names[i]);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539a in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539a → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x000055555555539a  →  <++++info symbol 0x55555555539a
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x55555555539a <++++info symbol 0x55555555539a
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x55555555539e <+++info symbol 0x55555555539e
main+003a> je     0x5555555555cc <main+616>
   0x5555555553a4 <+++info symbol 0x5555555553a4
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553a8 <+++info symbol 0x5555555553a8
main+0044> jg     0x5555555555df <main+635>
   0x5555555553ae <+++info symbol 0x5555555553ae
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553b2 <+++info symbol 0x5555555553b2
main+004e> je     0x5555555555b9 <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+110 ────
    105	   // 1. Init the head
    106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
 →  110	 
    111	   switch(num_tests) {
    112	     case 0:
    113	       // Allocate nodes and set the grades.
    114	       for(i = 0; i < NUM_STUDENTS; i++) {
    115	         students[i] = alloc_student(names[i]);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539a in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539a → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
150	      if(!test1()) exit(EXIT_FAILURE);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555df  →  <++++info symbol 0x5555555555df
main+027b> call 0x5555555556e9 <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555d3 <+++info symbol 0x5555555555d3
main+026f> jne    0x55555555561e <main+698>
   0x5555555555d5 <+++info symbol 0x5555555555d5
main+0271> mov    edi, 0x1
   0x5555555555da <+++info symbol 0x5555555555da
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555df <++++info symbol 0x5555555555df
main+027b> call   0x5555555556e9 <test1>
   ↳  0x5555555556e9 <+++info symbol 0x5555555556e9
test1+0000> endbr64 
      0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
      0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
      0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
      0x5555555556f5 <+++info symbol 0x5555555556f5
test1+000c> lea    rax, [rip+0x90c]        # 0x555555556008
      0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+150 ────
    145	       break;
    146	     case 3:
    147	       if(!test3()) exit(EXIT_FAILURE);
    148	       break;
    149	     case -1:
 →  150	     default:
    151	       if(!test1()) exit(EXIT_FAILURE);
    152	       if(!test2()) exit(EXIT_FAILURE);
    153	       if(!test3()) exit(EXIT_FAILURE);
    154	       break;
    155	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555df in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555df → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555df  →  <++++info symbol 0x5555555555df
main+027b> call 0x5555555556e9 <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555d3 <+++info symbol 0x5555555555d3
main+026f> jne    0x55555555561e <main+698>
   0x5555555555d5 <+++info symbol 0x5555555555d5
main+0271> mov    edi, 0x1
   0x5555555555da <+++info symbol 0x5555555555da
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555df <++++info symbol 0x5555555555df
main+027b> call   0x5555555556e9 <test1>
   ↳  0x5555555556e9 <+++info symbol 0x5555555556e9
test1+0000> endbr64 
      0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
      0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
      0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
      0x5555555556f5 <+++info symbol 0x5555555556f5
test1+000c> lea    rax, [rip+0x90c]        # 0x555555556008
      0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+150 ────
    145	       break;
    146	     case 3:
    147	       if(!test3()) exit(EXIT_FAILURE);
    148	       break;
    149	     case -1:
 →  150	     default:
    151	       if(!test1()) exit(EXIT_FAILURE);
    152	       if(!test2()) exit(EXIT_FAILURE);
    153	       if(!test3()) exit(EXIT_FAILURE);
    154	       break;
    155	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555df in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555df → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
[Inferior 1 (process 7773) exited with code 01]
+run
Starting program: /home/liub5/CSSE332-lab-liub5/debug/student.bin 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=1, argv=0x7fffffffdd28) at student.c:105
105	  init_node(&head);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555377  →  <++++info symbol 0x555555555377
main+0013> lea rax, [rip+0x2d02]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555536c <+++info symbol 0x55555555536c
main+0008> sub    rsp, 0x20
   0x555555555370 <+++info symbol 0x555555555370
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555373 <+++info symbol 0x555555555373
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x555555555377 <++++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
   0x555555555386 <+++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+105 ────
    100	 }
    101	 
    102	 int main(int argc, char **argv) {
    103	   int i, j, num_tests;
    104	 
 →  105	   // 1. Init the head
    106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
    110	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555377 in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555377 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555377  →  <++++info symbol 0x555555555377
main+0013> lea rax, [rip+0x2d02]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555536c <+++info symbol 0x55555555536c
main+0008> sub    rsp, 0x20
   0x555555555370 <+++info symbol 0x555555555370
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555373 <+++info symbol 0x555555555373
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x555555555377 <++++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
   0x555555555386 <+++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+105 ────
    100	 }
    101	 
    102	 int main(int argc, char **argv) {
    103	   int i, j, num_tests;
    104	 
 →  105	   // 1. Init the head
    106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
    110	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555377 in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555377 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
108	  num_tests = parse_args(argc, argv);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555386  →  <++++info symbol 0x555555555386
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555377 <+++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
 → 0x555555555386 <++++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+108 ────
    103	   int i, j, num_tests;
    104	 
    105	   // 1. Init the head
    106	   init_node(&head);
    107	 
 →  108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
    110	 
    111	   switch(num_tests) {
    112	     case 0:
    113	       // Allocate nodes and set the grades.
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555386 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555386 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555386  →  <++++info symbol 0x555555555386
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555377 <+++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
 → 0x555555555386 <++++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+108 ────
    103	   int i, j, num_tests;
    104	 
    105	   // 1. Init the head
    106	   init_node(&head);
    107	 
 →  108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
    110	 
    111	   switch(num_tests) {
    112	     case 0:
    113	       // Allocate nodes and set the grades.
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555386 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555386 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
110	  switch(num_tests) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x000055555555539a  →  <++++info symbol 0x55555555539a
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x55555555539a <++++info symbol 0x55555555539a
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x55555555539e <+++info symbol 0x55555555539e
main+003a> je     0x5555555555cc <main+616>
   0x5555555553a4 <+++info symbol 0x5555555553a4
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553a8 <+++info symbol 0x5555555553a8
main+0044> jg     0x5555555555df <main+635>
   0x5555555553ae <+++info symbol 0x5555555553ae
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553b2 <+++info symbol 0x5555555553b2
main+004e> je     0x5555555555b9 <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+110 ────
    105	   // 1. Init the head
    106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
 →  110	 
    111	   switch(num_tests) {
    112	     case 0:
    113	       // Allocate nodes and set the grades.
    114	       for(i = 0; i < NUM_STUDENTS; i++) {
    115	         students[i] = alloc_student(names[i]);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539a in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539a → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x000055555555539a  →  <++++info symbol 0x55555555539a
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x55555555539a <++++info symbol 0x55555555539a
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x55555555539e <+++info symbol 0x55555555539e
main+003a> je     0x5555555555cc <main+616>
   0x5555555553a4 <+++info symbol 0x5555555553a4
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553a8 <+++info symbol 0x5555555553a8
main+0044> jg     0x5555555555df <main+635>
   0x5555555553ae <+++info symbol 0x5555555553ae
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553b2 <+++info symbol 0x5555555553b2
main+004e> je     0x5555555555b9 <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+110 ────
    105	   // 1. Init the head
    106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
 →  110	 
    111	   switch(num_tests) {
    112	     case 0:
    113	       // Allocate nodes and set the grades.
    114	       for(i = 0; i < NUM_STUDENTS; i++) {
    115	         students[i] = alloc_student(names[i]);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539a in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539a → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
150	      if(!test1()) exit(EXIT_FAILURE);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555df  →  <++++info symbol 0x5555555555df
main+027b> call 0x5555555556e9 <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555d3 <+++info symbol 0x5555555555d3
main+026f> jne    0x55555555561e <main+698>
   0x5555555555d5 <+++info symbol 0x5555555555d5
main+0271> mov    edi, 0x1
   0x5555555555da <+++info symbol 0x5555555555da
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555df <++++info symbol 0x5555555555df
main+027b> call   0x5555555556e9 <test1>
   ↳  0x5555555556e9 <+++info symbol 0x5555555556e9
test1+0000> endbr64 
      0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
      0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
      0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
      0x5555555556f5 <+++info symbol 0x5555555556f5
test1+000c> lea    rax, [rip+0x90c]        # 0x555555556008
      0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+150 ────
    145	       break;
    146	     case 3:
    147	       if(!test3()) exit(EXIT_FAILURE);
    148	       break;
    149	     case -1:
 →  150	     default:
    151	       if(!test1()) exit(EXIT_FAILURE);
    152	       if(!test2()) exit(EXIT_FAILURE);
    153	       if(!test3()) exit(EXIT_FAILURE);
    154	       break;
    155	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555df in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555df → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555df  →  <++++info symbol 0x5555555555df
main+027b> call 0x5555555556e9 <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555d3 <+++info symbol 0x5555555555d3
main+026f> jne    0x55555555561e <main+698>
   0x5555555555d5 <+++info symbol 0x5555555555d5
main+0271> mov    edi, 0x1
   0x5555555555da <+++info symbol 0x5555555555da
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555df <++++info symbol 0x5555555555df
main+027b> call   0x5555555556e9 <test1>
   ↳  0x5555555556e9 <+++info symbol 0x5555555556e9
test1+0000> endbr64 
      0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
      0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
      0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
      0x5555555556f5 <+++info symbol 0x5555555556f5
test1+000c> lea    rax, [rip+0x90c]        # 0x555555556008
      0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+150 ────
    145	       break;
    146	     case 3:
    147	       if(!test3()) exit(EXIT_FAILURE);
    148	       break;
    149	     case -1:
 →  150	     default:
    151	       if(!test1()) exit(EXIT_FAILURE);
    152	       if(!test2()) exit(EXIT_FAILURE);
    153	       if(!test3()) exit(EXIT_FAILURE);
    154	       break;
    155	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555df in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555df → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
test1 () at student.c:189
189	  struct student *st = alloc_student("Mohammad");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555556f5  →  <++++info symbol 0x5555555556f5
test1+000c> lea rax, [rip+0x90c]        # 0x555555556008
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0xffffffffff558080
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
   0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
   0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
 → 0x5555555556f5 <++++info symbol 0x5555555556f5
test1+000c> lea    rax, [rip+0x90c]        # 0x555555556008
   0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
   0x5555555556ff <+++info symbol 0x5555555556ff
test1+0016> call   0x555555555249 <alloc_student>
   0x555555555704 <+++info symbol 0x555555555704
test1+001b> mov    QWORD PTR [rbp-0x8], rax
   0x555555555708 <+++info symbol 0x555555555708
test1+001f> lea    rax, [rip+0x9e5]        # 0x5555555560f4
   0x55555555570f <+++info symbol 0x55555555570f
test1+0026> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+189 ────
    184	   }
    185	 
    186	   return tests;
    187	 }
    188	 
 →  189	 int test1(void) {
    190	   struct student *st = alloc_student("Mohammad");
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
    193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555556f5 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555556f5 → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555556f5  →  <++++info symbol 0x5555555556f5
test1+000c> lea rax, [rip+0x90c]        # 0x555555556008
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0xffffffffff558080
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
   0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
   0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
 → 0x5555555556f5 <++++info symbol 0x5555555556f5
test1+000c> lea    rax, [rip+0x90c]        # 0x555555556008
   0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
   0x5555555556ff <+++info symbol 0x5555555556ff
test1+0016> call   0x555555555249 <alloc_student>
   0x555555555704 <+++info symbol 0x555555555704
test1+001b> mov    QWORD PTR [rbp-0x8], rax
   0x555555555708 <+++info symbol 0x555555555708
test1+001f> lea    rax, [rip+0x9e5]        # 0x5555555560f4
   0x55555555570f <+++info symbol 0x55555555570f
test1+0026> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+189 ────
    184	   }
    185	 
    186	   return tests;
    187	 }
    188	 
 →  189	 int test1(void) {
    190	   struct student *st = alloc_student("Mohammad");
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
    193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555556f5 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555556f5 → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
192	  printf("Test 1 (simple add_head): ");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x61686f4d        
$rdx   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rip   : 0x0000555555555708  →  <++++info symbol 0x555555555708
test1+001f> lea rax, [rip+0x9e5]        # 0x5555555560f4
$r8    : 0x8               
$r9    : 0x00005555555592c0  →  "Mohammad"
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592d0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
   0x5555555556ff <+++info symbol 0x5555555556ff
test1+0016> call   0x555555555249 <alloc_student>
   0x555555555704 <+++info symbol 0x555555555704
test1+001b> mov    QWORD PTR [rbp-0x8], rax
 → 0x555555555708 <++++info symbol 0x555555555708
test1+001f> lea    rax, [rip+0x9e5]        # 0x5555555560f4
   0x55555555570f <+++info symbol 0x55555555570f
test1+0026> mov    rdi, rax
   0x555555555712 <+++info symbol 0x555555555712
test1+0029> mov    eax, 0x0
   0x555555555717 <+++info symbol 0x555555555717
test1+002e> call   0x555555555100 <printf@plt>
   0x55555555571c <+++info symbol 0x55555555571c
test1+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555720 <+++info symbol 0x555555555720
test1+0037> mov    rsi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+192 ────
    187	 }
    188	 
    189	 int test1(void) {
    190	   struct student *st = alloc_student("Mohammad");
    191	 
 →  192	   // This test1 just tests adding at the head and then deleting.
    193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
    195	   if(IS_EMPTY(head)) {
    196	     printf("FAILED (list is still empty after adding)\n");
    197	     return 0;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555708 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555708 → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x61686f4d        
$rdx   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rip   : 0x0000555555555708  →  <++++info symbol 0x555555555708
test1+001f> lea rax, [rip+0x9e5]        # 0x5555555560f4
$r8    : 0x8               
$r9    : 0x00005555555592c0  →  "Mohammad"
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592d0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
   0x5555555556ff <+++info symbol 0x5555555556ff
test1+0016> call   0x555555555249 <alloc_student>
   0x555555555704 <+++info symbol 0x555555555704
test1+001b> mov    QWORD PTR [rbp-0x8], rax
 → 0x555555555708 <++++info symbol 0x555555555708
test1+001f> lea    rax, [rip+0x9e5]        # 0x5555555560f4
   0x55555555570f <+++info symbol 0x55555555570f
test1+0026> mov    rdi, rax
   0x555555555712 <+++info symbol 0x555555555712
test1+0029> mov    eax, 0x0
   0x555555555717 <+++info symbol 0x555555555717
test1+002e> call   0x555555555100 <printf@plt>
   0x55555555571c <+++info symbol 0x55555555571c
test1+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555720 <+++info symbol 0x555555555720
test1+0037> mov    rsi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+192 ────
    187	 }
    188	 
    189	 int test1(void) {
    190	   struct student *st = alloc_student("Mohammad");
    191	 
 →  192	   // This test1 just tests adding at the head and then deleting.
    193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
    195	   if(IS_EMPTY(head)) {
    196	     printf("FAILED (list is still empty after adding)\n");
    197	     return 0;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555708 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555708 → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
193	  add_head(&head, &st->node);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1a              
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$rdi   : 0x00007fffffffd670  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x000055555555571c  →  <++++info symbol 0x55555555571c
test1+0033> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555570f <+++info symbol 0x55555555570f
test1+0026> mov    rdi, rax
   0x555555555712 <+++info symbol 0x555555555712
test1+0029> mov    eax, 0x0
   0x555555555717 <+++info symbol 0x555555555717
test1+002e> call   0x555555555100 <printf@plt>
 → 0x55555555571c <++++info symbol 0x55555555571c
test1+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555720 <+++info symbol 0x555555555720
test1+0037> mov    rsi, rax
   0x555555555723 <+++info symbol 0x555555555723
test1+003a> lea    rax, [rip+0x2956]        # 0x555555558080 <head>
   0x55555555572a <+++info symbol 0x55555555572a
test1+0041> mov    rdi, rax
   0x55555555572d <+++info symbol 0x55555555572d
test1+0044> call   0x555555555a48 <add_head>
   0x555555555732 <+++info symbol 0x555555555732
test1+0049> mov    rax, QWORD PTR [rip+0x2947]        # 0x555555558080 <head>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+193 ────
    188	 
    189	 int test1(void) {
    190	   struct student *st = alloc_student("Mohammad");
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
 →  193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
    195	   if(IS_EMPTY(head)) {
    196	     printf("FAILED (list is still empty after adding)\n");
    197	     return 0;
    198	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555571c in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555571c → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1a              
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$rdi   : 0x00007fffffffd670  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x000055555555571c  →  <++++info symbol 0x55555555571c
test1+0033> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555570f <+++info symbol 0x55555555570f
test1+0026> mov    rdi, rax
   0x555555555712 <+++info symbol 0x555555555712
test1+0029> mov    eax, 0x0
   0x555555555717 <+++info symbol 0x555555555717
test1+002e> call   0x555555555100 <printf@plt>
 → 0x55555555571c <++++info symbol 0x55555555571c
test1+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555720 <+++info symbol 0x555555555720
test1+0037> mov    rsi, rax
   0x555555555723 <+++info symbol 0x555555555723
test1+003a> lea    rax, [rip+0x2956]        # 0x555555558080 <head>
   0x55555555572a <+++info symbol 0x55555555572a
test1+0041> mov    rdi, rax
   0x55555555572d <+++info symbol 0x55555555572d
test1+0044> call   0x555555555a48 <add_head>
   0x555555555732 <+++info symbol 0x555555555732
test1+0049> mov    rax, QWORD PTR [rip+0x2947]        # 0x555555558080 <head>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+193 ────
    188	 
    189	 int test1(void) {
    190	   struct student *st = alloc_student("Mohammad");
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
 →  193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
    195	   if(IS_EMPTY(head)) {
    196	     printf("FAILED (list is still empty after adding)\n");
    197	     return 0;
    198	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555571c in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555571c → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
add_head (head=0x555555558080 <head>, node=0x5555555592a0) at sllist.c:34
34	  node->next = head->next;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555a58  →  <++++info symbol 0x555555555a58
add_head+0010> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbc8│+0x0008: 0x0000555555555732  →  <++++info symbol 0x555555555732
test1+0049> mov rax, QWORD PTR [rip+0x2947]        # 0x555555558080 <head>
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbe8│+0x0028: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555a4d <+++info symbol 0x555555555a4d
add_head+0005> mov    rbp, rsp
   0x555555555a50 <+++info symbol 0x555555555a50
add_head+0008> mov    QWORD PTR [rbp-0x8], rdi
   0x555555555a54 <+++info symbol 0x555555555a54
add_head+000c> mov    QWORD PTR [rbp-0x10], rsi
 → 0x555555555a58 <++++info symbol 0x555555555a58
add_head+0010> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555a5c <+++info symbol 0x555555555a5c
add_head+0014> mov    rdx, QWORD PTR [rax]
   0x555555555a5f <+++info symbol 0x555555555a5f
add_head+0017> mov    rax, QWORD PTR [rbp-0x10]
   0x555555555a63 <+++info symbol 0x555555555a63
add_head+001b> mov    QWORD PTR [rax], rdx
   0x555555555a66 <+++info symbol 0x555555555a66
add_head+001e> nop    
   0x555555555a67 <+++info symbol 0x555555555a67
add_head+001f> pop    rbp
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+34 ────
     29	 }
     30	 
     31	 // add at head
     32	 void add_head(struct list_node *head, struct list_node *node)
     33	 {
           // head=0x00007fffffffdbb8  →  [...]  →  [loop detected], node=0x00007fffffffdbb0  →  [...]  →  [loop detected]
 →   34	   node->next = head->next;
     35	 }
     36	 
     37	 // add at tail
     38	 void add_tail(struct list_node *head, struct list_node *node)
     39	 {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555a58 in add_head (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555a58 → add_head(head=0x555555558080 <head>, node=0x5555555592a0)
[#1] 0x555555555732 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555a58  →  <++++info symbol 0x555555555a58
add_head+0010> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbc8│+0x0008: 0x0000555555555732  →  <++++info symbol 0x555555555732
test1+0049> mov rax, QWORD PTR [rip+0x2947]        # 0x555555558080 <head>
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbe8│+0x0028: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555a4d <+++info symbol 0x555555555a4d
add_head+0005> mov    rbp, rsp
   0x555555555a50 <+++info symbol 0x555555555a50
add_head+0008> mov    QWORD PTR [rbp-0x8], rdi
   0x555555555a54 <+++info symbol 0x555555555a54
add_head+000c> mov    QWORD PTR [rbp-0x10], rsi
 → 0x555555555a58 <++++info symbol 0x555555555a58
add_head+0010> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555a5c <+++info symbol 0x555555555a5c
add_head+0014> mov    rdx, QWORD PTR [rax]
   0x555555555a5f <+++info symbol 0x555555555a5f
add_head+0017> mov    rax, QWORD PTR [rbp-0x10]
   0x555555555a63 <+++info symbol 0x555555555a63
add_head+001b> mov    QWORD PTR [rax], rdx
   0x555555555a66 <+++info symbol 0x555555555a66
add_head+001e> nop    
   0x555555555a67 <+++info symbol 0x555555555a67
add_head+001f> pop    rbp
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+34 ────
     29	 }
     30	 
     31	 // add at head
     32	 void add_head(struct list_node *head, struct list_node *node)
     33	 {
           // head=0x00007fffffffdbb8  →  [...]  →  [loop detected], node=0x00007fffffffdbb0  →  [...]  →  [loop detected]
 →   34	   node->next = head->next;
     35	 }
     36	 
     37	 // add at tail
     38	 void add_tail(struct list_node *head, struct list_node *node)
     39	 {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555a58 in add_head (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555a58 → add_head(head=0x555555558080 <head>, node=0x5555555592a0)
[#1] 0x555555555732 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+f 1
#1  0x0000555555555732 in test1 () at student.c:193
193	  add_head(&head, &st->node);
+n
35	}
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555a66  →  <++++info symbol 0x555555555a66
add_head+001e> nop 
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbc8│+0x0008: 0x0000555555555732  →  <++++info symbol 0x555555555732
test1+0049> mov rax, QWORD PTR [rip+0x2947]        # 0x555555558080 <head>
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbe8│+0x0028: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555a5c <+++info symbol 0x555555555a5c
add_head+0014> mov    rdx, QWORD PTR [rax]
   0x555555555a5f <+++info symbol 0x555555555a5f
add_head+0017> mov    rax, QWORD PTR [rbp-0x10]
   0x555555555a63 <+++info symbol 0x555555555a63
add_head+001b> mov    QWORD PTR [rax], rdx
 → 0x555555555a66 <++++info symbol 0x555555555a66
add_head+001e> nop    
   0x555555555a67 <+++info symbol 0x555555555a67
add_head+001f> pop    rbp
   0x555555555a68 <+++info symbol 0x555555555a68
add_head+0020> ret    
   0x555555555a69 <+++info symbol 0x555555555a69
add_tail+0000> endbr64 
   0x555555555a6d <+++info symbol 0x555555555a6d
add_tail+0004> push   rbp
   0x555555555a6e <+++info symbol 0x555555555a6e
add_tail+0005> mov    rbp, rsp
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+35 ────
     30	 
     31	 // add at head
     32	 void add_head(struct list_node *head, struct list_node *node)
     33	 {
     34	   node->next = head->next;
 →   35	 }
     36	 
     37	 // add at tail
     38	 void add_tail(struct list_node *head, struct list_node *node)
     39	 {
     40	   struct list_node *p = head->next;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555a66 in add_head (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555a66 → add_head(head=0x555555558080 <head>, node=0x5555555592a0)
[#1] 0x555555555732 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555a66  →  <++++info symbol 0x555555555a66
add_head+001e> nop 
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbc8│+0x0008: 0x0000555555555732  →  <++++info symbol 0x555555555732
test1+0049> mov rax, QWORD PTR [rip+0x2947]        # 0x555555558080 <head>
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbe8│+0x0028: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555a5c <+++info symbol 0x555555555a5c
add_head+0014> mov    rdx, QWORD PTR [rax]
   0x555555555a5f <+++info symbol 0x555555555a5f
add_head+0017> mov    rax, QWORD PTR [rbp-0x10]
   0x555555555a63 <+++info symbol 0x555555555a63
add_head+001b> mov    QWORD PTR [rax], rdx
 → 0x555555555a66 <++++info symbol 0x555555555a66
add_head+001e> nop    
   0x555555555a67 <+++info symbol 0x555555555a67
add_head+001f> pop    rbp
   0x555555555a68 <+++info symbol 0x555555555a68
add_head+0020> ret    
   0x555555555a69 <+++info symbol 0x555555555a69
add_tail+0000> endbr64 
   0x555555555a6d <+++info symbol 0x555555555a6d
add_tail+0004> push   rbp
   0x555555555a6e <+++info symbol 0x555555555a6e
add_tail+0005> mov    rbp, rsp
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+35 ────
     30	 
     31	 // add at head
     32	 void add_head(struct list_node *head, struct list_node *node)
     33	 {
     34	   node->next = head->next;
 →   35	 }
     36	 
     37	 // add at tail
     38	 void add_tail(struct list_node *head, struct list_node *node)
     39	 {
     40	   struct list_node *p = head->next;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555a66 in add_head (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555a66 → add_head(head=0x555555558080 <head>, node=0x5555555592a0)
[#1] 0x555555555732 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
test1 () at student.c:194
194	  if(IS_EMPTY(head)) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555732  →  <++++info symbol 0x555555555732
test1+0049> mov rax, QWORD PTR [rip+0x2947]        # 0x555555558080 <head>
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555723 <+++info symbol 0x555555555723
test1+003a> lea    rax, [rip+0x2956]        # 0x555555558080 <head>
   0x55555555572a <+++info symbol 0x55555555572a
test1+0041> mov    rdi, rax
   0x55555555572d <+++info symbol 0x55555555572d
test1+0044> call   0x555555555a48 <add_head>
 → 0x555555555732 <++++info symbol 0x555555555732
test1+0049> mov    rax, QWORD PTR [rip+0x2947]        # 0x555555558080 <head>
   0x555555555739 <+++info symbol 0x555555555739
test1+0050> lea    rdx, [rip+0x2940]        # 0x555555558080 <head>
   0x555555555740 <+++info symbol 0x555555555740
test1+0057> cmp    rax, rdx
   0x555555555743 <+++info symbol 0x555555555743
test1+005a> jne    0x55555555575b <test1+114>
   0x555555555745 <+++info symbol 0x555555555745
test1+005c> lea    rax, [rip+0x9c4]        # 0x555555556110
   0x55555555574c <+++info symbol 0x55555555574c
test1+0063> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+194 ────
    189	 int test1(void) {
    190	   struct student *st = alloc_student("Mohammad");
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
    193	   printf("Test 1 (simple add_head): ");
           // st=0x00007fffffffdbd8  →  [...]  →  [loop detected]
 →  194	   add_head(&head, &st->node);
    195	   if(IS_EMPTY(head)) {
    196	     printf("FAILED (list is still empty after adding)\n");
    197	     return 0;
    198	   }
    199	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555732 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555732 → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555732  →  <++++info symbol 0x555555555732
test1+0049> mov rax, QWORD PTR [rip+0x2947]        # 0x555555558080 <head>
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555723 <+++info symbol 0x555555555723
test1+003a> lea    rax, [rip+0x2956]        # 0x555555558080 <head>
   0x55555555572a <+++info symbol 0x55555555572a
test1+0041> mov    rdi, rax
   0x55555555572d <+++info symbol 0x55555555572d
test1+0044> call   0x555555555a48 <add_head>
 → 0x555555555732 <++++info symbol 0x555555555732
test1+0049> mov    rax, QWORD PTR [rip+0x2947]        # 0x555555558080 <head>
   0x555555555739 <+++info symbol 0x555555555739
test1+0050> lea    rdx, [rip+0x2940]        # 0x555555558080 <head>
   0x555555555740 <+++info symbol 0x555555555740
test1+0057> cmp    rax, rdx
   0x555555555743 <+++info symbol 0x555555555743
test1+005a> jne    0x55555555575b <test1+114>
   0x555555555745 <+++info symbol 0x555555555745
test1+005c> lea    rax, [rip+0x9c4]        # 0x555555556110
   0x55555555574c <+++info symbol 0x55555555574c
test1+0063> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+194 ────
    189	 int test1(void) {
    190	   struct student *st = alloc_student("Mohammad");
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
    193	   printf("Test 1 (simple add_head): ");
           // st=0x00007fffffffdbd8  →  [...]  →  [loop detected]
 →  194	   add_head(&head, &st->node);
    195	   if(IS_EMPTY(head)) {
    196	     printf("FAILED (list is still empty after adding)\n");
    197	     return 0;
    198	   }
    199	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555732 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555732 → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
195	    printf("FAILED (list is still empty after adding)\n");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555745  →  <++++info symbol 0x555555555745
test1+005c> lea rax, [rip+0x9c4]        # 0x555555556110
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555739 <+++info symbol 0x555555555739
test1+0050> lea    rdx, [rip+0x2940]        # 0x555555558080 <head>
   0x555555555740 <+++info symbol 0x555555555740
test1+0057> cmp    rax, rdx
   0x555555555743 <+++info symbol 0x555555555743
test1+005a> jne    0x55555555575b <test1+114>
 → 0x555555555745 <++++info symbol 0x555555555745
test1+005c> lea    rax, [rip+0x9c4]        # 0x555555556110
   0x55555555574c <+++info symbol 0x55555555574c
test1+0063> mov    rdi, rax
   0x55555555574f <+++info symbol 0x55555555574f
test1+0066> call   0x5555555550e0 <puts@plt>
   0x555555555754 <+++info symbol 0x555555555754
test1+006b> mov    eax, 0x0
   0x555555555759 <+++info symbol 0x555555555759
test1+0070> jmp    0x5555555557d4 <test1+235>
   0x55555555575b <+++info symbol 0x55555555575b
test1+0072> mov    rdx, QWORD PTR [rip+0x291e]        # 0x555555558080 <head>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+195 ────
    190	   struct student *st = alloc_student("Mohammad");
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
    193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
 →  195	   if(IS_EMPTY(head)) {
    196	     printf("FAILED (list is still empty after adding)\n");
    197	     return 0;
    198	   }
    199	 
    200	   // check if it was inserted
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555745 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555745 → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555745  →  <++++info symbol 0x555555555745
test1+005c> lea rax, [rip+0x9c4]        # 0x555555556110
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555739 <+++info symbol 0x555555555739
test1+0050> lea    rdx, [rip+0x2940]        # 0x555555558080 <head>
   0x555555555740 <+++info symbol 0x555555555740
test1+0057> cmp    rax, rdx
   0x555555555743 <+++info symbol 0x555555555743
test1+005a> jne    0x55555555575b <test1+114>
 → 0x555555555745 <++++info symbol 0x555555555745
test1+005c> lea    rax, [rip+0x9c4]        # 0x555555556110
   0x55555555574c <+++info symbol 0x55555555574c
test1+0063> mov    rdi, rax
   0x55555555574f <+++info symbol 0x55555555574f
test1+0066> call   0x5555555550e0 <puts@plt>
   0x555555555754 <+++info symbol 0x555555555754
test1+006b> mov    eax, 0x0
   0x555555555759 <+++info symbol 0x555555555759
test1+0070> jmp    0x5555555557d4 <test1+235>
   0x55555555575b <+++info symbol 0x55555555575b
test1+0072> mov    rdx, QWORD PTR [rip+0x291e]        # 0x555555558080 <head>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+195 ────
    190	   struct student *st = alloc_student("Mohammad");
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
    193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
 →  195	   if(IS_EMPTY(head)) {
    196	     printf("FAILED (list is still empty after adding)\n");
    197	     return 0;
    198	   }
    199	 
    200	   // check if it was inserted
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555745 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555745 → test1()
[#1] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
__GI__IO_puts (str=0x555555556110 "FAILED (list is still empty after adding)") at ./libio/ioputs.c:33
33	./libio/ioputs.c: No such file or directory.
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc8
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbc8  →  0x0000555555555754  →  <++++info symbol 0x555555555754
test1+006b> mov eax, 0x0
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rip   : 0x00007ffff7c80e50  →  <++++info symbol 0x7ffff7c80e50
puts+0000> endbr64 
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc8│+0x0000: 0x0000555555555754  →  <++++info symbol 0x555555555754
test1+006b> mov eax, 0x0	 ← $rsp
0x00007fffffffdbd0│+0x0008: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0010: 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
0x00007fffffffdbe0│+0x0018: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0020: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0028: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0030: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0038: 0x0000000000001000
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7c80e3f <+++info symbol 0x7ffff7c80e3f
popen+008f> jmp    0x7ffff7c80e14 <_IO_new_popen+100>
   0x7ffff7c80e41 <+++info symbol 0x7ffff7c80e41
No symbol matches 0x7ffff7c80e41.+0000> cs     nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7c80e4b <+++info symbol 0x7ffff7c80e4b
No symbol matches 0x7ffff7c80e4b.+0000> nop    DWORD PTR [rax+rax*1+0x0]
 → 0x7ffff7c80e50 <++++info symbol 0x7ffff7c80e50
puts+0000> endbr64 
   0x7ffff7c80e54 <+++info symbol 0x7ffff7c80e54
puts+0004> push   r14
   0x7ffff7c80e56 <+++info symbol 0x7ffff7c80e56
puts+0006> push   r13
   0x7ffff7c80e58 <+++info symbol 0x7ffff7c80e58
puts+0008> push   r12
   0x7ffff7c80e5a <+++info symbol 0x7ffff7c80e5a
puts+000a> mov    r12, rdi
   0x7ffff7c80e5d <+++info symbol 0x7ffff7c80e5d
puts+000d> push   rbp
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x7ffff7c80e50 in __GI__IO_puts (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7c80e50 → __GI__IO_puts(str=0x555555556110 "FAILED (list is still empty after adding)")
[#1] 0x555555555754 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc8
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbc8  →  0x0000555555555754  →  <++++info symbol 0x555555555754
test1+006b> mov eax, 0x0
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rip   : 0x00007ffff7c80e50  →  <++++info symbol 0x7ffff7c80e50
puts+0000> endbr64 
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc8│+0x0000: 0x0000555555555754  →  <++++info symbol 0x555555555754
test1+006b> mov eax, 0x0	 ← $rsp
0x00007fffffffdbd0│+0x0008: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0010: 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
0x00007fffffffdbe0│+0x0018: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0020: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0028: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0030: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0038: 0x0000000000001000
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7c80e3f <+++info symbol 0x7ffff7c80e3f
popen+008f> jmp    0x7ffff7c80e14 <_IO_new_popen+100>
   0x7ffff7c80e41 <+++info symbol 0x7ffff7c80e41
No symbol matches 0x7ffff7c80e41.+0000> cs     nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7c80e4b <+++info symbol 0x7ffff7c80e4b
No symbol matches 0x7ffff7c80e4b.+0000> nop    DWORD PTR [rax+rax*1+0x0]
 → 0x7ffff7c80e50 <++++info symbol 0x7ffff7c80e50
puts+0000> endbr64 
   0x7ffff7c80e54 <+++info symbol 0x7ffff7c80e54
puts+0004> push   r14
   0x7ffff7c80e56 <+++info symbol 0x7ffff7c80e56
puts+0006> push   r13
   0x7ffff7c80e58 <+++info symbol 0x7ffff7c80e58
puts+0008> push   r12
   0x7ffff7c80e5a <+++info symbol 0x7ffff7c80e5a
puts+000a> mov    r12, rdi
   0x7ffff7c80e5d <+++info symbol 0x7ffff7c80e5d
puts+000d> push   rbp
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x7ffff7c80e50 in __GI__IO_puts (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7c80e50 → __GI__IO_puts(str=0x555555556110 "FAILED (list is still empty after adding)")
[#1] 0x555555555754 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
35	in ./libio/ioputs.c
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc8
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbc8  →  0x0000555555555754  →  <++++info symbol 0x555555555754
test1+006b> mov eax, 0x0
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rip   : 0x00007ffff7c80e54  →  <++++info symbol 0x7ffff7c80e54
puts+0004> push r14
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc8│+0x0000: 0x0000555555555754  →  <++++info symbol 0x555555555754
test1+006b> mov eax, 0x0	 ← $rsp
0x00007fffffffdbd0│+0x0008: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0010: 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
0x00007fffffffdbe0│+0x0018: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0020: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0028: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0030: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0038: 0x0000000000001000
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7c80e41 <+++info symbol 0x7ffff7c80e41
No symbol matches 0x7ffff7c80e41.+0000> cs     nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7c80e4b <+++info symbol 0x7ffff7c80e4b
No symbol matches 0x7ffff7c80e4b.+0000> nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7c80e50 <+++info symbol 0x7ffff7c80e50
puts+0000> endbr64 
 → 0x7ffff7c80e54 <++++info symbol 0x7ffff7c80e54
puts+0004> push   r14
   0x7ffff7c80e56 <+++info symbol 0x7ffff7c80e56
puts+0006> push   r13
   0x7ffff7c80e58 <+++info symbol 0x7ffff7c80e58
puts+0008> push   r12
   0x7ffff7c80e5a <+++info symbol 0x7ffff7c80e5a
puts+000a> mov    r12, rdi
   0x7ffff7c80e5d <+++info symbol 0x7ffff7c80e5d
puts+000d> push   rbp
   0x7ffff7c80e5e <+++info symbol 0x7ffff7c80e5e
puts+000e> push   rbx
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x7ffff7c80e54 in __GI__IO_puts (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7c80e54 → __GI__IO_puts(str=0x555555556110 "FAILED (list is still empty after adding)")
[#1] 0x555555555754 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc8
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbc8  →  0x0000555555555754  →  <++++info symbol 0x555555555754
test1+006b> mov eax, 0x0
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rip   : 0x00007ffff7c80e54  →  <++++info symbol 0x7ffff7c80e54
puts+0004> push r14
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc8│+0x0000: 0x0000555555555754  →  <++++info symbol 0x555555555754
test1+006b> mov eax, 0x0	 ← $rsp
0x00007fffffffdbd0│+0x0008: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0010: 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
0x00007fffffffdbe0│+0x0018: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0020: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0028: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0030: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0038: 0x0000000000001000
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7c80e41 <+++info symbol 0x7ffff7c80e41
No symbol matches 0x7ffff7c80e41.+0000> cs     nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7c80e4b <+++info symbol 0x7ffff7c80e4b
No symbol matches 0x7ffff7c80e4b.+0000> nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7c80e50 <+++info symbol 0x7ffff7c80e50
puts+0000> endbr64 
 → 0x7ffff7c80e54 <++++info symbol 0x7ffff7c80e54
puts+0004> push   r14
   0x7ffff7c80e56 <+++info symbol 0x7ffff7c80e56
puts+0006> push   r13
   0x7ffff7c80e58 <+++info symbol 0x7ffff7c80e58
puts+0008> push   r12
   0x7ffff7c80e5a <+++info symbol 0x7ffff7c80e5a
puts+000a> mov    r12, rdi
   0x7ffff7c80e5d <+++info symbol 0x7ffff7c80e5d
puts+000d> push   rbp
   0x7ffff7c80e5e <+++info symbol 0x7ffff7c80e5e
puts+000e> push   rbx
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x7ffff7c80e54 in __GI__IO_puts (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7c80e54 → __GI__IO_puts(str=0x555555556110 "FAILED (list is still empty after adding)")
[#1] 0x555555555754 → test1()
[#2] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
__strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:50
50	../sysdeps/x86_64/multiarch/strlen-avx2.S: No such file or directory.
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb88
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdb88  →  0x00007ffff7c80e68  →  <++++info symbol 0x7ffff7c80e68
puts+0018> mov r13, QWORD PTR [rip+0x198fc9]        # 0x7ffff7e19e38
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rip   : 0x00007ffff7d9d7e0  →  <++++info symbol 0x7ffff7d9d7e0
__strlen_avx2+0000> endbr64 
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb88│+0x0000: 0x00007ffff7c80e68  →  <++++info symbol 0x7ffff7c80e68
puts+0018> mov r13, QWORD PTR [rip+0x198fc9]        # 0x7ffff7e19e38	 ← $rsp
0x00007fffffffdb90│+0x0008: 0x0000000000000000
0x00007fffffffdb98│+0x0010: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0018: 0x0000000000000000
0x00007fffffffdba8│+0x0020: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbb0│+0x0028: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbb8│+0x0030: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
0x00007fffffffdbc0│+0x0038: 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7d9d7d2 <+++info symbol 0x7ffff7d9d7d2
__strrchr_avx2+01c2> vzeroupper 
   0x7ffff7d9d7d5 <+++info symbol 0x7ffff7d9d7d5
__strrchr_avx2+01c5> ret    
   0x7ffff7d9d7d6 <+++info symbol 0x7ffff7d9d7d6
No symbol matches 0x7ffff7d9d7d6.+0000> cs     nop WORD PTR [rax+rax*1+0x0]
 → 0x7ffff7d9d7e0 <++++info symbol 0x7ffff7d9d7e0
__strlen_avx2+0000> endbr64 
   0x7ffff7d9d7e4 <+++info symbol 0x7ffff7d9d7e4
__strlen_avx2+0004> mov    eax, edi
   0x7ffff7d9d7e6 <+++info symbol 0x7ffff7d9d7e6
__strlen_avx2+0006> mov    rdx, rdi
   0x7ffff7d9d7e9 <+++info symbol 0x7ffff7d9d7e9
__strlen_avx2+0009> vpxor  xmm0, xmm0, xmm0
   0x7ffff7d9d7ed <+++info symbol 0x7ffff7d9d7ed
__strlen_avx2+000d> and    eax, 0xfff
   0x7ffff7d9d7f2 <+++info symbol 0x7ffff7d9d7f2
__strlen_avx2+0012> cmp    eax, 0xfe0
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x7ffff7d9d7e0 in __strlen_avx2 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7d9d7e0 → __strlen_avx2()
[#1] 0x7ffff7c80e68 → __GI__IO_puts(str=0x555555556110 "FAILED (list is still empty after adding)")
[#2] 0x555555555754 → test1()
[#3] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb88
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdb88  →  0x00007ffff7c80e68  →  <++++info symbol 0x7ffff7c80e68
puts+0018> mov r13, QWORD PTR [rip+0x198fc9]        # 0x7ffff7e19e38
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rip   : 0x00007ffff7d9d7e0  →  <++++info symbol 0x7ffff7d9d7e0
__strlen_avx2+0000> endbr64 
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb88│+0x0000: 0x00007ffff7c80e68  →  <++++info symbol 0x7ffff7c80e68
puts+0018> mov r13, QWORD PTR [rip+0x198fc9]        # 0x7ffff7e19e38	 ← $rsp
0x00007fffffffdb90│+0x0008: 0x0000000000000000
0x00007fffffffdb98│+0x0010: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0018: 0x0000000000000000
0x00007fffffffdba8│+0x0020: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbb0│+0x0028: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbb8│+0x0030: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
0x00007fffffffdbc0│+0x0038: 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7d9d7d2 <+++info symbol 0x7ffff7d9d7d2
__strrchr_avx2+01c2> vzeroupper 
   0x7ffff7d9d7d5 <+++info symbol 0x7ffff7d9d7d5
__strrchr_avx2+01c5> ret    
   0x7ffff7d9d7d6 <+++info symbol 0x7ffff7d9d7d6
No symbol matches 0x7ffff7d9d7d6.+0000> cs     nop WORD PTR [rax+rax*1+0x0]
 → 0x7ffff7d9d7e0 <++++info symbol 0x7ffff7d9d7e0
__strlen_avx2+0000> endbr64 
   0x7ffff7d9d7e4 <+++info symbol 0x7ffff7d9d7e4
__strlen_avx2+0004> mov    eax, edi
   0x7ffff7d9d7e6 <+++info symbol 0x7ffff7d9d7e6
__strlen_avx2+0006> mov    rdx, rdi
   0x7ffff7d9d7e9 <+++info symbol 0x7ffff7d9d7e9
__strlen_avx2+0009> vpxor  xmm0, xmm0, xmm0
   0x7ffff7d9d7ed <+++info symbol 0x7ffff7d9d7ed
__strlen_avx2+000d> and    eax, 0xfff
   0x7ffff7d9d7f2 <+++info symbol 0x7ffff7d9d7f2
__strlen_avx2+0012> cmp    eax, 0xfe0
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x7ffff7d9d7e0 in __strlen_avx2 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7d9d7e0 → __strlen_avx2()
[#1] 0x7ffff7c80e68 → __GI__IO_puts(str=0x555555556110 "FAILED (list is still empty after adding)")
[#2] 0x555555555754 → test1()
[#3] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
63	in ../sysdeps/x86_64/multiarch/strlen-avx2.S
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb88
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdb88  →  0x00007ffff7c80e68  →  <++++info symbol 0x7ffff7c80e68
puts+0018> mov r13, QWORD PTR [rip+0x198fc9]        # 0x7ffff7e19e38
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rip   : 0x00007ffff7d9d7e4  →  <++++info symbol 0x7ffff7d9d7e4
__strlen_avx2+0004> mov eax, edi
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb88│+0x0000: 0x00007ffff7c80e68  →  <++++info symbol 0x7ffff7c80e68
puts+0018> mov r13, QWORD PTR [rip+0x198fc9]        # 0x7ffff7e19e38	 ← $rsp
0x00007fffffffdb90│+0x0008: 0x0000000000000000
0x00007fffffffdb98│+0x0010: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0018: 0x0000000000000000
0x00007fffffffdba8│+0x0020: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbb0│+0x0028: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbb8│+0x0030: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
0x00007fffffffdbc0│+0x0038: 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7d9d7d5 <+++info symbol 0x7ffff7d9d7d5
__strrchr_avx2+01c5> ret    
   0x7ffff7d9d7d6 <+++info symbol 0x7ffff7d9d7d6
No symbol matches 0x7ffff7d9d7d6.+0000> cs     nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7d9d7e0 <+++info symbol 0x7ffff7d9d7e0
__strlen_avx2+0000> endbr64 
 → 0x7ffff7d9d7e4 <++++info symbol 0x7ffff7d9d7e4
__strlen_avx2+0004> mov    eax, edi
   0x7ffff7d9d7e6 <+++info symbol 0x7ffff7d9d7e6
__strlen_avx2+0006> mov    rdx, rdi
   0x7ffff7d9d7e9 <+++info symbol 0x7ffff7d9d7e9
__strlen_avx2+0009> vpxor  xmm0, xmm0, xmm0
   0x7ffff7d9d7ed <+++info symbol 0x7ffff7d9d7ed
__strlen_avx2+000d> and    eax, 0xfff
   0x7ffff7d9d7f2 <+++info symbol 0x7ffff7d9d7f2
__strlen_avx2+0012> cmp    eax, 0xfe0
   0x7ffff7d9d7f7 <+++info symbol 0x7ffff7d9d7f7
__strlen_avx2+0017> ja     0x7ffff7d9d930 <__strlen_avx2+336>
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x7ffff7d9d7e4 in __strlen_avx2 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7d9d7e4 → __strlen_avx2()
[#1] 0x7ffff7c80e68 → __GI__IO_puts(str=0x555555556110 "FAILED (list is still empty after adding)")
[#2] 0x555555555754 → test1()
[#3] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb88
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdb88  →  0x00007ffff7c80e68  →  <++++info symbol 0x7ffff7c80e68
puts+0018> mov r13, QWORD PTR [rip+0x198fc9]        # 0x7ffff7e19e38
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rip   : 0x00007ffff7d9d7e4  →  <++++info symbol 0x7ffff7d9d7e4
__strlen_avx2+0004> mov eax, edi
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb88│+0x0000: 0x00007ffff7c80e68  →  <++++info symbol 0x7ffff7c80e68
puts+0018> mov r13, QWORD PTR [rip+0x198fc9]        # 0x7ffff7e19e38	 ← $rsp
0x00007fffffffdb90│+0x0008: 0x0000000000000000
0x00007fffffffdb98│+0x0010: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0018: 0x0000000000000000
0x00007fffffffdba8│+0x0020: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbb0│+0x0028: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbb8│+0x0030: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
0x00007fffffffdbc0│+0x0038: 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7d9d7d5 <+++info symbol 0x7ffff7d9d7d5
__strrchr_avx2+01c5> ret    
   0x7ffff7d9d7d6 <+++info symbol 0x7ffff7d9d7d6
No symbol matches 0x7ffff7d9d7d6.+0000> cs     nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7d9d7e0 <+++info symbol 0x7ffff7d9d7e0
__strlen_avx2+0000> endbr64 
 → 0x7ffff7d9d7e4 <++++info symbol 0x7ffff7d9d7e4
__strlen_avx2+0004> mov    eax, edi
   0x7ffff7d9d7e6 <+++info symbol 0x7ffff7d9d7e6
__strlen_avx2+0006> mov    rdx, rdi
   0x7ffff7d9d7e9 <+++info symbol 0x7ffff7d9d7e9
__strlen_avx2+0009> vpxor  xmm0, xmm0, xmm0
   0x7ffff7d9d7ed <+++info symbol 0x7ffff7d9d7ed
__strlen_avx2+000d> and    eax, 0xfff
   0x7ffff7d9d7f2 <+++info symbol 0x7ffff7d9d7f2
__strlen_avx2+0012> cmp    eax, 0xfe0
   0x7ffff7d9d7f7 <+++info symbol 0x7ffff7d9d7f7
__strlen_avx2+0017> ja     0x7ffff7d9d930 <__strlen_avx2+336>
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x7ffff7d9d7e4 in __strlen_avx2 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7d9d7e4 → __strlen_avx2()
[#1] 0x7ffff7c80e68 → __GI__IO_puts(str=0x555555556110 "FAILED (list is still empty after adding)")
[#2] 0x555555555754 → test1()
[#3] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
64	in ../sysdeps/x86_64/multiarch/strlen-avx2.S
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb88
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x55556110        
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdb88  →  0x00007ffff7c80e68  →  <++++info symbol 0x7ffff7c80e68
puts+0018> mov r13, QWORD PTR [rip+0x198fc9]        # 0x7ffff7e19e38
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rip   : 0x00007ffff7d9d7e6  →  <++++info symbol 0x7ffff7d9d7e6
__strlen_avx2+0006> mov rdx, rdi
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb88│+0x0000: 0x00007ffff7c80e68  →  <++++info symbol 0x7ffff7c80e68
puts+0018> mov r13, QWORD PTR [rip+0x198fc9]        # 0x7ffff7e19e38	 ← $rsp
0x00007fffffffdb90│+0x0008: 0x0000000000000000
0x00007fffffffdb98│+0x0010: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0018: 0x0000000000000000
0x00007fffffffdba8│+0x0020: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbb0│+0x0028: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbb8│+0x0030: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
0x00007fffffffdbc0│+0x0038: 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7d9d7d6 <+++info symbol 0x7ffff7d9d7d6
No symbol matches 0x7ffff7d9d7d6.+0000> cs     nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7d9d7e0 <+++info symbol 0x7ffff7d9d7e0
__strlen_avx2+0000> endbr64 
   0x7ffff7d9d7e4 <+++info symbol 0x7ffff7d9d7e4
__strlen_avx2+0004> mov    eax, edi
 → 0x7ffff7d9d7e6 <++++info symbol 0x7ffff7d9d7e6
__strlen_avx2+0006> mov    rdx, rdi
   0x7ffff7d9d7e9 <+++info symbol 0x7ffff7d9d7e9
__strlen_avx2+0009> vpxor  xmm0, xmm0, xmm0
   0x7ffff7d9d7ed <+++info symbol 0x7ffff7d9d7ed
__strlen_avx2+000d> and    eax, 0xfff
   0x7ffff7d9d7f2 <+++info symbol 0x7ffff7d9d7f2
__strlen_avx2+0012> cmp    eax, 0xfe0
   0x7ffff7d9d7f7 <+++info symbol 0x7ffff7d9d7f7
__strlen_avx2+0017> ja     0x7ffff7d9d930 <__strlen_avx2+336>
   0x7ffff7d9d7fd <+++info symbol 0x7ffff7d9d7fd
__strlen_avx2+001d> vpcmpeqb ymm1, ymm0, YMMWORD PTR [rdi]
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x7ffff7d9d7e6 in __strlen_avx2 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7d9d7e6 → __strlen_avx2()
[#1] 0x7ffff7c80e68 → __GI__IO_puts(str=0x555555556110 "FAILED (list is still empty after adding)")
[#2] 0x555555555754 → test1()
[#3] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb88
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x55556110        
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdb88  →  0x00007ffff7c80e68  →  <++++info symbol 0x7ffff7c80e68
puts+0018> mov r13, QWORD PTR [rip+0x198fc9]        # 0x7ffff7e19e38
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rip   : 0x00007ffff7d9d7e6  →  <++++info symbol 0x7ffff7d9d7e6
__strlen_avx2+0006> mov rdx, rdi
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb88│+0x0000: 0x00007ffff7c80e68  →  <++++info symbol 0x7ffff7c80e68
puts+0018> mov r13, QWORD PTR [rip+0x198fc9]        # 0x7ffff7e19e38	 ← $rsp
0x00007fffffffdb90│+0x0008: 0x0000000000000000
0x00007fffffffdb98│+0x0010: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0018: 0x0000000000000000
0x00007fffffffdba8│+0x0020: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbb0│+0x0028: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbb8│+0x0030: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
0x00007fffffffdbc0│+0x0038: 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7d9d7d6 <+++info symbol 0x7ffff7d9d7d6
No symbol matches 0x7ffff7d9d7d6.+0000> cs     nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7d9d7e0 <+++info symbol 0x7ffff7d9d7e0
__strlen_avx2+0000> endbr64 
   0x7ffff7d9d7e4 <+++info symbol 0x7ffff7d9d7e4
__strlen_avx2+0004> mov    eax, edi
 → 0x7ffff7d9d7e6 <++++info symbol 0x7ffff7d9d7e6
__strlen_avx2+0006> mov    rdx, rdi
   0x7ffff7d9d7e9 <+++info symbol 0x7ffff7d9d7e9
__strlen_avx2+0009> vpxor  xmm0, xmm0, xmm0
   0x7ffff7d9d7ed <+++info symbol 0x7ffff7d9d7ed
__strlen_avx2+000d> and    eax, 0xfff
   0x7ffff7d9d7f2 <+++info symbol 0x7ffff7d9d7f2
__strlen_avx2+0012> cmp    eax, 0xfe0
   0x7ffff7d9d7f7 <+++info symbol 0x7ffff7d9d7f7
__strlen_avx2+0017> ja     0x7ffff7d9d930 <__strlen_avx2+336>
   0x7ffff7d9d7fd <+++info symbol 0x7ffff7d9d7fd
__strlen_avx2+001d> vpcmpeqb ymm1, ymm0, YMMWORD PTR [rdi]
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x7ffff7d9d7e6 in __strlen_avx2 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7d9d7e6 → __strlen_avx2()
[#1] 0x7ffff7c80e68 → __GI__IO_puts(str=0x555555556110 "FAILED (list is still empty after adding)")
[#2] 0x555555555754 → test1()
[#3] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
65	in ../sysdeps/x86_64/multiarch/strlen-avx2.S
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb88
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x55556110        
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rsp   : 0x00007fffffffdb88  →  0x00007ffff7c80e68  →  <++++info symbol 0x7ffff7c80e68
puts+0018> mov r13, QWORD PTR [rip+0x198fc9]        # 0x7ffff7e19e38
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rip   : 0x00007ffff7d9d7e9  →  <++++info symbol 0x7ffff7d9d7e9
__strlen_avx2+0009> vpxor xmm0, xmm0, xmm0
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb88│+0x0000: 0x00007ffff7c80e68  →  <++++info symbol 0x7ffff7c80e68
puts+0018> mov r13, QWORD PTR [rip+0x198fc9]        # 0x7ffff7e19e38	 ← $rsp
0x00007fffffffdb90│+0x0008: 0x0000000000000000
0x00007fffffffdb98│+0x0010: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0018: 0x0000000000000000
0x00007fffffffdba8│+0x0020: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbb0│+0x0028: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbb8│+0x0030: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
0x00007fffffffdbc0│+0x0038: 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7d9d7e0 <+++info symbol 0x7ffff7d9d7e0
__strlen_avx2+0000> endbr64 
   0x7ffff7d9d7e4 <+++info symbol 0x7ffff7d9d7e4
__strlen_avx2+0004> mov    eax, edi
   0x7ffff7d9d7e6 <+++info symbol 0x7ffff7d9d7e6
__strlen_avx2+0006> mov    rdx, rdi
 → 0x7ffff7d9d7e9 <++++info symbol 0x7ffff7d9d7e9
__strlen_avx2+0009> vpxor  xmm0, xmm0, xmm0
   0x7ffff7d9d7ed <+++info symbol 0x7ffff7d9d7ed
__strlen_avx2+000d> and    eax, 0xfff
   0x7ffff7d9d7f2 <+++info symbol 0x7ffff7d9d7f2
__strlen_avx2+0012> cmp    eax, 0xfe0
   0x7ffff7d9d7f7 <+++info symbol 0x7ffff7d9d7f7
__strlen_avx2+0017> ja     0x7ffff7d9d930 <__strlen_avx2+336>
   0x7ffff7d9d7fd <+++info symbol 0x7ffff7d9d7fd
__strlen_avx2+001d> vpcmpeqb ymm1, ymm0, YMMWORD PTR [rdi]
   0x7ffff7d9d801 <+++info symbol 0x7ffff7d9d801
__strlen_avx2+0021> vpmovmskb eax, ymm1
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x7ffff7d9d7e9 in __strlen_avx2 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7d9d7e9 → __strlen_avx2()
[#1] 0x7ffff7c80e68 → __GI__IO_puts(str=0x555555556110 "FAILED (list is still empty after adding)")
[#2] 0x555555555754 → test1()
[#3] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb88
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x55556110        
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rsp   : 0x00007fffffffdb88  →  0x00007ffff7c80e68  →  <++++info symbol 0x7ffff7c80e68
puts+0018> mov r13, QWORD PTR [rip+0x198fc9]        # 0x7ffff7e19e38
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rip   : 0x00007ffff7d9d7e9  →  <++++info symbol 0x7ffff7d9d7e9
__strlen_avx2+0009> vpxor xmm0, xmm0, xmm0
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb88│+0x0000: 0x00007ffff7c80e68  →  <++++info symbol 0x7ffff7c80e68
puts+0018> mov r13, QWORD PTR [rip+0x198fc9]        # 0x7ffff7e19e38	 ← $rsp
0x00007fffffffdb90│+0x0008: 0x0000000000000000
0x00007fffffffdb98│+0x0010: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0018: 0x0000000000000000
0x00007fffffffdba8│+0x0020: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbb0│+0x0028: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbb8│+0x0030: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
0x00007fffffffdbc0│+0x0038: 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7d9d7e0 <+++info symbol 0x7ffff7d9d7e0
__strlen_avx2+0000> endbr64 
   0x7ffff7d9d7e4 <+++info symbol 0x7ffff7d9d7e4
__strlen_avx2+0004> mov    eax, edi
   0x7ffff7d9d7e6 <+++info symbol 0x7ffff7d9d7e6
__strlen_avx2+0006> mov    rdx, rdi
 → 0x7ffff7d9d7e9 <++++info symbol 0x7ffff7d9d7e9
__strlen_avx2+0009> vpxor  xmm0, xmm0, xmm0
   0x7ffff7d9d7ed <+++info symbol 0x7ffff7d9d7ed
__strlen_avx2+000d> and    eax, 0xfff
   0x7ffff7d9d7f2 <+++info symbol 0x7ffff7d9d7f2
__strlen_avx2+0012> cmp    eax, 0xfe0
   0x7ffff7d9d7f7 <+++info symbol 0x7ffff7d9d7f7
__strlen_avx2+0017> ja     0x7ffff7d9d930 <__strlen_avx2+336>
   0x7ffff7d9d7fd <+++info symbol 0x7ffff7d9d7fd
__strlen_avx2+001d> vpcmpeqb ymm1, ymm0, YMMWORD PTR [rdi]
   0x7ffff7d9d801 <+++info symbol 0x7ffff7d9d801
__strlen_avx2+0021> vpmovmskb eax, ymm1
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x7ffff7d9d7e9 in __strlen_avx2 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7d9d7e9 → __strlen_avx2()
[#1] 0x7ffff7c80e68 → __GI__IO_puts(str=0x555555556110 "FAILED (list is still empty after adding)")
[#2] 0x555555555754 → test1()
[#3] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+f 1
#1  0x00007ffff7c80e68 in __GI__IO_puts (str=0x555555556110 "FAILED (list is still empty after adding)") at ./libio/ioputs.c:35
35	./libio/ioputs.c: No such file or directory.
+n
68	../sysdeps/x86_64/multiarch/strlen-avx2.S: No such file or directory.
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb88
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x55556110        
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rsp   : 0x00007fffffffdb88  →  0x00007ffff7c80e68  →  <++++info symbol 0x7ffff7c80e68
puts+0018> mov r13, QWORD PTR [rip+0x198fc9]        # 0x7ffff7e19e38
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rip   : 0x00007ffff7d9d7ed  →  <++++info symbol 0x7ffff7d9d7ed
__strlen_avx2+000d> and eax, 0xfff
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb88│+0x0000: 0x00007ffff7c80e68  →  <++++info symbol 0x7ffff7c80e68
puts+0018> mov r13, QWORD PTR [rip+0x198fc9]        # 0x7ffff7e19e38	 ← $rsp
0x00007fffffffdb90│+0x0008: 0x0000000000000000
0x00007fffffffdb98│+0x0010: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0018: 0x0000000000000000
0x00007fffffffdba8│+0x0020: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbb0│+0x0028: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbb8│+0x0030: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
0x00007fffffffdbc0│+0x0038: 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7d9d7e4 <+++info symbol 0x7ffff7d9d7e4
__strlen_avx2+0004> mov    eax, edi
   0x7ffff7d9d7e6 <+++info symbol 0x7ffff7d9d7e6
__strlen_avx2+0006> mov    rdx, rdi
   0x7ffff7d9d7e9 <+++info symbol 0x7ffff7d9d7e9
__strlen_avx2+0009> vpxor  xmm0, xmm0, xmm0
 → 0x7ffff7d9d7ed <++++info symbol 0x7ffff7d9d7ed
__strlen_avx2+000d> and    eax, 0xfff
   0x7ffff7d9d7f2 <+++info symbol 0x7ffff7d9d7f2
__strlen_avx2+0012> cmp    eax, 0xfe0
   0x7ffff7d9d7f7 <+++info symbol 0x7ffff7d9d7f7
__strlen_avx2+0017> ja     0x7ffff7d9d930 <__strlen_avx2+336>
   0x7ffff7d9d7fd <+++info symbol 0x7ffff7d9d7fd
__strlen_avx2+001d> vpcmpeqb ymm1, ymm0, YMMWORD PTR [rdi]
   0x7ffff7d9d801 <+++info symbol 0x7ffff7d9d801
__strlen_avx2+0021> vpmovmskb eax, ymm1
   0x7ffff7d9d805 <+++info symbol 0x7ffff7d9d805
__strlen_avx2+0025> test   eax, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x7ffff7d9d7ed in __strlen_avx2 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7d9d7ed → __strlen_avx2()
[#1] 0x7ffff7c80e68 → __GI__IO_puts(str=0x555555556110 "FAILED (list is still empty after adding)")
[#2] 0x555555555754 → test1()
[#3] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb88
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x55556110        
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rsp   : 0x00007fffffffdb88  →  0x00007ffff7c80e68  →  <++++info symbol 0x7ffff7c80e68
puts+0018> mov r13, QWORD PTR [rip+0x198fc9]        # 0x7ffff7e19e38
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rdi   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$rip   : 0x00007ffff7d9d7ed  →  <++++info symbol 0x7ffff7d9d7ed
__strlen_avx2+000d> and eax, 0xfff
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x0000555555556110  →  "FAILED (list is still empty after adding)"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb88│+0x0000: 0x00007ffff7c80e68  →  <++++info symbol 0x7ffff7c80e68
puts+0018> mov r13, QWORD PTR [rip+0x198fc9]        # 0x7ffff7e19e38	 ← $rsp
0x00007fffffffdb90│+0x0008: 0x0000000000000000
0x00007fffffffdb98│+0x0010: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0018: 0x0000000000000000
0x00007fffffffdba8│+0x0020: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbb0│+0x0028: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbb8│+0x0030: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
0x00007fffffffdbc0│+0x0038: 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7d9d7e4 <+++info symbol 0x7ffff7d9d7e4
__strlen_avx2+0004> mov    eax, edi
   0x7ffff7d9d7e6 <+++info symbol 0x7ffff7d9d7e6
__strlen_avx2+0006> mov    rdx, rdi
   0x7ffff7d9d7e9 <+++info symbol 0x7ffff7d9d7e9
__strlen_avx2+0009> vpxor  xmm0, xmm0, xmm0
 → 0x7ffff7d9d7ed <++++info symbol 0x7ffff7d9d7ed
__strlen_avx2+000d> and    eax, 0xfff
   0x7ffff7d9d7f2 <+++info symbol 0x7ffff7d9d7f2
__strlen_avx2+0012> cmp    eax, 0xfe0
   0x7ffff7d9d7f7 <+++info symbol 0x7ffff7d9d7f7
__strlen_avx2+0017> ja     0x7ffff7d9d930 <__strlen_avx2+336>
   0x7ffff7d9d7fd <+++info symbol 0x7ffff7d9d7fd
__strlen_avx2+001d> vpcmpeqb ymm1, ymm0, YMMWORD PTR [rdi]
   0x7ffff7d9d801 <+++info symbol 0x7ffff7d9d801
__strlen_avx2+0021> vpmovmskb eax, ymm1
   0x7ffff7d9d805 <+++info symbol 0x7ffff7d9d805
__strlen_avx2+0025> test   eax, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x7ffff7d9d7ed in __strlen_avx2 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7d9d7ed → __strlen_avx2()
[#1] 0x7ffff7c80e68 → __GI__IO_puts(str=0x555555556110 "FAILED (list is still empty after adding)")
[#2] 0x555555555754 → test1()
[#3] 0x5555555555e4 → main(argc=1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+quit
+source ~/.gef/gef.py
++set confirm off
++set verbose off
++set pagination off
++set print elements 0
++set history save on
++set history filename ~/.gdb_history
++set output-radix 0x10
++set print pretty on
++set disassembly-flavor intel
++handle SIGALRM print nopass
++save gdb-index '/tmp/gef'
GEF for linux ready, type `gef' to start, `gef config' to configure
93 commands loaded and 5 functions added for GDB 12.1 in 0.00ms using Python engine 3.10
++define target hookpost-remote
++define target hookpost-extended-remote
++define hookpost-source
++pi gef.gdb.load()
Reading symbols from ./student.bin...
+b main
Breakpoint 1 at 0x1377: file student.c, line 105.
+run
Starting program: /home/liub5/CSSE332-lab-liub5/debug/student.bin 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=0x1, argv=0x7fffffffdd28) at student.c:105
warning: Source file is more recent than executable.
105	  // 1. Init the head
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555377  →  <++++info symbol 0x555555555377
main+0013> lea rax, [rip+0x2d02]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555536c <+++info symbol 0x55555555536c
main+0008> sub    rsp, 0x20
   0x555555555370 <+++info symbol 0x555555555370
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555373 <+++info symbol 0x555555555373
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x555555555377 <++++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
   0x555555555386 <+++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+105 ────
    100	 }
    101	 
    102	 int main(int argc, char **argv) {
    103	   int i, j, num_tests;
    104	 
 →  105	   // 1. Init the head
    106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
    110	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555377 in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555377 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555377  →  <++++info symbol 0x555555555377
main+0013> lea rax, [rip+0x2d02]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555536c <+++info symbol 0x55555555536c
main+0008> sub    rsp, 0x20
   0x555555555370 <+++info symbol 0x555555555370
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555373 <+++info symbol 0x555555555373
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x555555555377 <++++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
   0x555555555386 <+++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+105 ────
    100	 }
    101	 
    102	 int main(int argc, char **argv) {
    103	   int i, j, num_tests;
    104	 
 →  105	   // 1. Init the head
    106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
    110	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555377 in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555377 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
108	  // 2. Get which test to run.
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555386  →  <++++info symbol 0x555555555386
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555377 <+++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
 → 0x555555555386 <++++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+108 ────
    103	   int i, j, num_tests;
    104	 
    105	   // 1. Init the head
    106	   init_node(&head);
    107	 
 →  108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
    110	 
    111	   switch(num_tests) {
    112	     case 0:
    113	       // Allocate nodes and set the grades.
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555386 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555386 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555386  →  <++++info symbol 0x555555555386
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555377 <+++info symbol 0x555555555377
main+0013> lea    rax, [rip+0x2d02]        # 0x555555558080 <head>
   0x55555555537e <+++info symbol 0x55555555537e
main+001a> mov    rdi, rax
   0x555555555381 <+++info symbol 0x555555555381
main+001d> call   0x555555555a2e <init_node>
 → 0x555555555386 <++++info symbol 0x555555555386
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555538a <+++info symbol 0x55555555538a
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x55555555538d <+++info symbol 0x55555555538d
main+0029> mov    rsi, rdx
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+108 ────
    103	   int i, j, num_tests;
    104	 
    105	   // 1. Init the head
    106	   init_node(&head);
    107	 
 →  108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
    110	 
    111	   switch(num_tests) {
    112	     case 0:
    113	       // Allocate nodes and set the grades.
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555386 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555386 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
110	
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x000055555555539a  →  <++++info symbol 0x55555555539a
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x55555555539a <++++info symbol 0x55555555539a
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x55555555539e <+++info symbol 0x55555555539e
main+003a> je     0x5555555555cc <main+616>
   0x5555555553a4 <+++info symbol 0x5555555553a4
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553a8 <+++info symbol 0x5555555553a8
main+0044> jg     0x5555555555df <main+635>
   0x5555555553ae <+++info symbol 0x5555555553ae
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553b2 <+++info symbol 0x5555555553b2
main+004e> je     0x5555555555b9 <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+110 ────
    105	   // 1. Init the head
    106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
 →  110	 
    111	   switch(num_tests) {
    112	     case 0:
    113	       // Allocate nodes and set the grades.
    114	       for(i = 0; i < NUM_STUDENTS; i++) {
    115	         students[i] = alloc_student(names[i]);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539a in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539a → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x000055555555539a  →  <++++info symbol 0x55555555539a
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555390 <+++info symbol 0x555555555390
main+002c> mov    edi, eax
   0x555555555392 <+++info symbol 0x555555555392
main+002e> call   0x55555555562c <parse_args>
   0x555555555397 <+++info symbol 0x555555555397
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x55555555539a <++++info symbol 0x55555555539a
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x55555555539e <+++info symbol 0x55555555539e
main+003a> je     0x5555555555cc <main+616>
   0x5555555553a4 <+++info symbol 0x5555555553a4
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553a8 <+++info symbol 0x5555555553a8
main+0044> jg     0x5555555555df <main+635>
   0x5555555553ae <+++info symbol 0x5555555553ae
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553b2 <+++info symbol 0x5555555553b2
main+004e> je     0x5555555555b9 <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+110 ────
    105	   // 1. Init the head
    106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
 →  110	 
    111	   switch(num_tests) {
    112	     case 0:
    113	       // Allocate nodes and set the grades.
    114	       for(i = 0; i < NUM_STUDENTS; i++) {
    115	         students[i] = alloc_student(names[i]);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539a in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539a → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
150	    default:
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555df  →  <++++info symbol 0x5555555555df
main+027b> call 0x5555555556e9 <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555d3 <+++info symbol 0x5555555555d3
main+026f> jne    0x55555555561e <main+698>
   0x5555555555d5 <+++info symbol 0x5555555555d5
main+0271> mov    edi, 0x1
   0x5555555555da <+++info symbol 0x5555555555da
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555df <++++info symbol 0x5555555555df
main+027b> call   0x5555555556e9 <test1>
   ↳  0x5555555556e9 <+++info symbol 0x5555555556e9
test1+0000> endbr64 
      0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
      0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
      0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
      0x5555555556f5 <+++info symbol 0x5555555556f5
test1+000c> lea    rax, [rip+0x90c]        # 0x555555556008
      0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+150 ────
    145	       break;
    146	     case 3:
    147	       if(!test3()) exit(EXIT_FAILURE);
    148	       break;
    149	     case -1:
 →  150	     default:
    151	       if(!test1()) exit(EXIT_FAILURE);
    152	       if(!test2()) exit(EXIT_FAILURE);
    153	       if(!test3()) exit(EXIT_FAILURE);
    154	       break;
    155	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555df in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555df → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555df  →  <++++info symbol 0x5555555555df
main+027b> call 0x5555555556e9 <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555d3 <+++info symbol 0x5555555555d3
main+026f> jne    0x55555555561e <main+698>
   0x5555555555d5 <+++info symbol 0x5555555555d5
main+0271> mov    edi, 0x1
   0x5555555555da <+++info symbol 0x5555555555da
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555df <++++info symbol 0x5555555555df
main+027b> call   0x5555555556e9 <test1>
   ↳  0x5555555556e9 <+++info symbol 0x5555555556e9
test1+0000> endbr64 
      0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
      0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
      0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
      0x5555555556f5 <+++info symbol 0x5555555556f5
test1+000c> lea    rax, [rip+0x90c]        # 0x555555556008
      0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+150 ────
    145	       break;
    146	     case 3:
    147	       if(!test3()) exit(EXIT_FAILURE);
    148	       break;
    149	     case -1:
 →  150	     default:
    151	       if(!test1()) exit(EXIT_FAILURE);
    152	       if(!test2()) exit(EXIT_FAILURE);
    153	       if(!test3()) exit(EXIT_FAILURE);
    154	       break;
    155	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555df in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555df → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
test1 () at student.c:189
189	int test1(void) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555556f5  →  <++++info symbol 0x5555555556f5
test1+000c> lea rax, [rip+0x90c]        # 0x555555556008
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0xffffffffff558080
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
   0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
   0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
 → 0x5555555556f5 <++++info symbol 0x5555555556f5
test1+000c> lea    rax, [rip+0x90c]        # 0x555555556008
   0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
   0x5555555556ff <+++info symbol 0x5555555556ff
test1+0016> call   0x555555555249 <alloc_student>
   0x555555555704 <+++info symbol 0x555555555704
test1+001b> mov    QWORD PTR [rbp-0x8], rax
   0x555555555708 <+++info symbol 0x555555555708
test1+001f> lea    rax, [rip+0x9e5]        # 0x5555555560f4
   0x55555555570f <+++info symbol 0x55555555570f
test1+0026> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+189 ────
    184	   }
    185	 
    186	   return tests;
    187	 }
    188	 
 →  189	 int test1(void) {
    190	   struct student *st = alloc_student("Mohammad");
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
    193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555556f5 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555556f5 → test1()
[#1] 0x5555555555e4 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555556f5  →  <++++info symbol 0x5555555556f5
test1+000c> lea rax, [rip+0x90c]        # 0x555555556008
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0xffffffffff558080
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555556ed <+++info symbol 0x5555555556ed
test1+0004> push   rbp
   0x5555555556ee <+++info symbol 0x5555555556ee
test1+0005> mov    rbp, rsp
   0x5555555556f1 <+++info symbol 0x5555555556f1
test1+0008> sub    rsp, 0x10
 → 0x5555555556f5 <++++info symbol 0x5555555556f5
test1+000c> lea    rax, [rip+0x90c]        # 0x555555556008
   0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
   0x5555555556ff <+++info symbol 0x5555555556ff
test1+0016> call   0x555555555249 <alloc_student>
   0x555555555704 <+++info symbol 0x555555555704
test1+001b> mov    QWORD PTR [rbp-0x8], rax
   0x555555555708 <+++info symbol 0x555555555708
test1+001f> lea    rax, [rip+0x9e5]        # 0x5555555560f4
   0x55555555570f <+++info symbol 0x55555555570f
test1+0026> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+189 ────
    184	   }
    185	 
    186	   return tests;
    187	 }
    188	 
 →  189	 int test1(void) {
    190	   struct student *st = alloc_student("Mohammad");
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
    193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555556f5 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555556f5 → test1()
[#1] 0x5555555555e4 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
192	  // This test1 just tests adding at the head and then deleting.
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x61686f4d        
$rdx   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rip   : 0x0000555555555708  →  <++++info symbol 0x555555555708
test1+001f> lea rax, [rip+0x9e5]        # 0x5555555560f4
$r8    : 0x8               
$r9    : 0x00005555555592c0  →  "Mohammad"
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592d0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
   0x5555555556ff <+++info symbol 0x5555555556ff
test1+0016> call   0x555555555249 <alloc_student>
   0x555555555704 <+++info symbol 0x555555555704
test1+001b> mov    QWORD PTR [rbp-0x8], rax
 → 0x555555555708 <++++info symbol 0x555555555708
test1+001f> lea    rax, [rip+0x9e5]        # 0x5555555560f4
   0x55555555570f <+++info symbol 0x55555555570f
test1+0026> mov    rdi, rax
   0x555555555712 <+++info symbol 0x555555555712
test1+0029> mov    eax, 0x0
   0x555555555717 <+++info symbol 0x555555555717
test1+002e> call   0x555555555100 <printf@plt>
   0x55555555571c <+++info symbol 0x55555555571c
test1+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555720 <+++info symbol 0x555555555720
test1+0037> mov    rsi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+192 ────
    187	 }
    188	 
    189	 int test1(void) {
    190	   struct student *st = alloc_student("Mohammad");
    191	 
 →  192	   // This test1 just tests adding at the head and then deleting.
    193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
    195	   if(IS_EMPTY(head)) {
    196	     printf("FAILED (list is still empty after adding)\n");
    197	     return 0;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555708 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555708 → test1()
[#1] 0x5555555555e4 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x61686f4d        
$rdx   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rip   : 0x0000555555555708  →  <++++info symbol 0x555555555708
test1+001f> lea rax, [rip+0x9e5]        # 0x5555555560f4
$r8    : 0x8               
$r9    : 0x00005555555592c0  →  "Mohammad"
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592d0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555556fc <+++info symbol 0x5555555556fc
test1+0013> mov    rdi, rax
   0x5555555556ff <+++info symbol 0x5555555556ff
test1+0016> call   0x555555555249 <alloc_student>
   0x555555555704 <+++info symbol 0x555555555704
test1+001b> mov    QWORD PTR [rbp-0x8], rax
 → 0x555555555708 <++++info symbol 0x555555555708
test1+001f> lea    rax, [rip+0x9e5]        # 0x5555555560f4
   0x55555555570f <+++info symbol 0x55555555570f
test1+0026> mov    rdi, rax
   0x555555555712 <+++info symbol 0x555555555712
test1+0029> mov    eax, 0x0
   0x555555555717 <+++info symbol 0x555555555717
test1+002e> call   0x555555555100 <printf@plt>
   0x55555555571c <+++info symbol 0x55555555571c
test1+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555720 <+++info symbol 0x555555555720
test1+0037> mov    rsi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+192 ────
    187	 }
    188	 
    189	 int test1(void) {
    190	   struct student *st = alloc_student("Mohammad");
    191	 
 →  192	   // This test1 just tests adding at the head and then deleting.
    193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
    195	   if(IS_EMPTY(head)) {
    196	     printf("FAILED (list is still empty after adding)\n");
    197	     return 0;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555708 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555708 → test1()
[#1] 0x5555555555e4 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
193	  printf("Test 1 (simple add_head): ");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1a              
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$rdi   : 0x00007fffffffd670  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x000055555555571c  →  <++++info symbol 0x55555555571c
test1+0033> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555570f <+++info symbol 0x55555555570f
test1+0026> mov    rdi, rax
   0x555555555712 <+++info symbol 0x555555555712
test1+0029> mov    eax, 0x0
   0x555555555717 <+++info symbol 0x555555555717
test1+002e> call   0x555555555100 <printf@plt>
 → 0x55555555571c <++++info symbol 0x55555555571c
test1+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555720 <+++info symbol 0x555555555720
test1+0037> mov    rsi, rax
   0x555555555723 <+++info symbol 0x555555555723
test1+003a> lea    rax, [rip+0x2956]        # 0x555555558080 <head>
   0x55555555572a <+++info symbol 0x55555555572a
test1+0041> mov    rdi, rax
   0x55555555572d <+++info symbol 0x55555555572d
test1+0044> call   0x555555555a48 <add_head>
   0x555555555732 <+++info symbol 0x555555555732
test1+0049> mov    rax, QWORD PTR [rip+0x2947]        # 0x555555558080 <head>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+193 ────
    188	 
    189	 int test1(void) {
    190	   struct student *st = alloc_student("Mohammad");
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
 →  193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
    195	   if(IS_EMPTY(head)) {
    196	     printf("FAILED (list is still empty after adding)\n");
    197	     return 0;
    198	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555571c in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555571c → test1()
[#1] 0x5555555555e4 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1a              
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$rdi   : 0x00007fffffffd670  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x000055555555571c  →  <++++info symbol 0x55555555571c
test1+0033> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555570f <+++info symbol 0x55555555570f
test1+0026> mov    rdi, rax
   0x555555555712 <+++info symbol 0x555555555712
test1+0029> mov    eax, 0x0
   0x555555555717 <+++info symbol 0x555555555717
test1+002e> call   0x555555555100 <printf@plt>
 → 0x55555555571c <++++info symbol 0x55555555571c
test1+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555720 <+++info symbol 0x555555555720
test1+0037> mov    rsi, rax
   0x555555555723 <+++info symbol 0x555555555723
test1+003a> lea    rax, [rip+0x2956]        # 0x555555558080 <head>
   0x55555555572a <+++info symbol 0x55555555572a
test1+0041> mov    rdi, rax
   0x55555555572d <+++info symbol 0x55555555572d
test1+0044> call   0x555555555a48 <add_head>
   0x555555555732 <+++info symbol 0x555555555732
test1+0049> mov    rax, QWORD PTR [rip+0x2947]        # 0x555555558080 <head>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+193 ────
    188	 
    189	 int test1(void) {
    190	   struct student *st = alloc_student("Mohammad");
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
 →  193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
    195	   if(IS_EMPTY(head)) {
    196	     printf("FAILED (list is still empty after adding)\n");
    197	     return 0;
    198	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555571c in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555571c → test1()
[#1] 0x5555555555e4 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
add_head (head=0x555555558080 <head>, node=0x5555555592a0) at sllist.c:34
34	  node->next = head->next;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555a58  →  <++++info symbol 0x555555555a58
add_head+0010> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbc8│+0x0008: 0x0000555555555732  →  <++++info symbol 0x555555555732
test1+0049> mov rax, QWORD PTR [rip+0x2947]        # 0x555555558080 <head>
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbe8│+0x0028: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555a4d <+++info symbol 0x555555555a4d
add_head+0005> mov    rbp, rsp
   0x555555555a50 <+++info symbol 0x555555555a50
add_head+0008> mov    QWORD PTR [rbp-0x8], rdi
   0x555555555a54 <+++info symbol 0x555555555a54
add_head+000c> mov    QWORD PTR [rbp-0x10], rsi
 → 0x555555555a58 <++++info symbol 0x555555555a58
add_head+0010> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555a5c <+++info symbol 0x555555555a5c
add_head+0014> mov    rdx, QWORD PTR [rax]
   0x555555555a5f <+++info symbol 0x555555555a5f
add_head+0017> mov    rax, QWORD PTR [rbp-0x10]
   0x555555555a63 <+++info symbol 0x555555555a63
add_head+001b> mov    QWORD PTR [rax], rdx
   0x555555555a66 <+++info symbol 0x555555555a66
add_head+001e> nop    
   0x555555555a67 <+++info symbol 0x555555555a67
add_head+001f> pop    rbp
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+34 ────
     29	 }
     30	 
     31	 // add at head
     32	 void add_head(struct list_node *head, struct list_node *node)
     33	 {
           // head=0x00007fffffffdbb8  →  [...]  →  [loop detected], node=0x00007fffffffdbb0  →  [...]  →  [loop detected]
 →   34	   node->next = head->next;
     35	 }
     36	 
     37	 // add at tail
     38	 void add_tail(struct list_node *head, struct list_node *node)
     39	 {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555a58 in add_head (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555a58 → add_head(head=0x555555558080 <head>, node=0x5555555592a0)
[#1] 0x555555555732 → test1()
[#2] 0x5555555555e4 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555a58  →  <++++info symbol 0x555555555a58
add_head+0010> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x0               
$r9    : 0x00005555555592e0  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x00005555555596e0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555364  →  <++++info symbol 0x555555555364
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbc8│+0x0008: 0x0000555555555732  →  <++++info symbol 0x555555555732
test1+0049> mov rax, QWORD PTR [rip+0x2947]        # 0x555555558080 <head>
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbe8│+0x0028: 0x00005555555555e4  →  <++++info symbol 0x5555555555e4
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555a4d <+++info symbol 0x555555555a4d
add_head+0005> mov    rbp, rsp
   0x555555555a50 <+++info symbol 0x555555555a50
add_head+0008> mov    QWORD PTR [rbp-0x8], rdi
   0x555555555a54 <+++info symbol 0x555555555a54
add_head+000c> mov    QWORD PTR [rbp-0x10], rsi
 → 0x555555555a58 <++++info symbol 0x555555555a58
add_head+0010> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555a5c <+++info symbol 0x555555555a5c
add_head+0014> mov    rdx, QWORD PTR [rax]
   0x555555555a5f <+++info symbol 0x555555555a5f
add_head+0017> mov    rax, QWORD PTR [rbp-0x10]
   0x555555555a63 <+++info symbol 0x555555555a63
add_head+001b> mov    QWORD PTR [rax], rdx
   0x555555555a66 <+++info symbol 0x555555555a66
add_head+001e> nop    
   0x555555555a67 <+++info symbol 0x555555555a67
add_head+001f> pop    rbp
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+34 ────
     29	 }
     30	 
     31	 // add at head
     32	 void add_head(struct list_node *head, struct list_node *node)
     33	 {
           // head=0x00007fffffffdbb8  →  [...]  →  [loop detected], node=0x00007fffffffdbb0  →  [...]  →  [loop detected]
 →   34	   node->next = head->next;
     35	 }
     36	 
     37	 // add at tail
     38	 void add_tail(struct list_node *head, struct list_node *node)
     39	 {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555a58 in add_head (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555a58 → add_head(head=0x555555558080 <head>, node=0x5555555592a0)
[#1] 0x555555555732 → test1()
[#2] 0x5555555555e4 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Quit
+info localinfo local
Undefined info command: "localinfo local".  Try "help info".
+info args
head = 0x555555558080 <head>
node = 0x5555555592a0
+p *head
$1 = {
  next = 0x555555558080 <head>
}
+p *head@10
$2 = {{
    next = 0x555555558080 <head>
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }}
+p *node@10
$3 = {{
    next = 0x5555555592a0
  }, {
    next = 0x5555555592c0
  }, {
    next = 0x0
  }, {
    next = 0x21
  }, {
    next = 0x64616d6d61686f4d
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x411
  }, {
    next = 0x2820312074736554
  }, {
    next = 0x6120656c706d6973
  }}
+p *node@10
$4 = {{
    next = 0x5555555592a0
  }, {
    next = 0x5555555592c0
  }, {
    next = 0x0
  }, {
    next = 0x21
  }, {
    next = 0x64616d6d61686f4d
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x411
  }, {
    next = 0x2820312074736554
  }, {
    next = 0x6120656c706d6973
  }}
+(gdb) set output-radix 10
Undefined command: "".  Try "help".
+set output-radix 10
Output radix now set to decimal 10, hex a, octal 12.
+p *node@10
$5 = {{
    next = 0x5555555592a0
  }, {
    next = 0x5555555592c0
  }, {
    next = 0x0
  }, {
    next = 0x21
  }, {
    next = 0x64616d6d61686f4d
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x411
  }, {
    next = 0x2820312074736554
  }, {
    next = 0x6120656c706d6973
  }}
+p *head@10
$6 = {{
    next = 0x555555558080 <head>
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }, {
    next = 0x0
  }}
+p *head@2
$7 = {{
    next = 0x555555558080 <head>
  }, {
    next = 0x0
  }}
+p *node@2
$8 = {{
    next = 0x5555555592a0
  }, {
    next = 0x5555555592c0
  }}
+quit
+source ~/.gef/gef.py
++set confirm off
++set verbose off
++set pagination off
++set print elements 0
++set history save on
++set history filename ~/.gdb_history
++set output-radix 0x10
++set print pretty on
++set disassembly-flavor intel
++handle SIGALRM print nopass
++save gdb-index '/tmp/gef'
GEF for linux ready, type `gef' to start, `gef config' to configure
93 commands loaded and 5 functions added for GDB 12.1 in 0.00ms using Python engine 3.10
++define target hookpost-remote
++define target hookpost-extended-remote
++define hookpost-source
++pi gef.gdb.load()
Reading symbols from ./student.bin...
+b main
Breakpoint 1 at 0x138c: file student.c, line 106.
+run
Starting program: /home/liub5/CSSE332-lab-liub5/debug/student.bin 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=0x1, argv=0x7fffffffdd28) at student.c:106
106	  init_node(&head);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x000055555555538c  →  <++++info symbol 0x55555555538c
main+0013> lea rax, [rip+0x2ced]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555381 <+++info symbol 0x555555555381
main+0008> sub    rsp, 0x20
   0x555555555385 <+++info symbol 0x555555555385
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555388 <+++info symbol 0x555555555388
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x55555555538c <++++info symbol 0x55555555538c
main+0013> lea    rax, [rip+0x2ced]        # 0x555555558080 <head>
   0x555555555393 <+++info symbol 0x555555555393
main+001a> mov    rdi, rax
   0x555555555396 <+++info symbol 0x555555555396
main+001d> call   0x555555555a43 <init_node>
   0x55555555539b <+++info symbol 0x55555555539b
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555539f <+++info symbol 0x55555555539f
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x5555555553a2 <+++info symbol 0x5555555553a2
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+106 ────
    101	 
    102	 int main(int argc, char **argv) {
    103	   int i, j, num_tests;
    104	 
    105	   // 1. Init the head
 →  106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
    110	 
    111	   switch(num_tests) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555538c in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555538c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x000055555555538c  →  <++++info symbol 0x55555555538c
main+0013> lea rax, [rip+0x2ced]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555381 <+++info symbol 0x555555555381
main+0008> sub    rsp, 0x20
   0x555555555385 <+++info symbol 0x555555555385
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555388 <+++info symbol 0x555555555388
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x55555555538c <++++info symbol 0x55555555538c
main+0013> lea    rax, [rip+0x2ced]        # 0x555555558080 <head>
   0x555555555393 <+++info symbol 0x555555555393
main+001a> mov    rdi, rax
   0x555555555396 <+++info symbol 0x555555555396
main+001d> call   0x555555555a43 <init_node>
   0x55555555539b <+++info symbol 0x55555555539b
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555539f <+++info symbol 0x55555555539f
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x5555555553a2 <+++info symbol 0x5555555553a2
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+106 ────
    101	 
    102	 int main(int argc, char **argv) {
    103	   int i, j, num_tests;
    104	 
    105	   // 1. Init the head
 →  106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
    110	 
    111	   switch(num_tests) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555538c in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555538c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
109	  num_tests = parse_args(argc, argv);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x000055555555539b  →  <++++info symbol 0x55555555539b
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555538c <+++info symbol 0x55555555538c
main+0013> lea    rax, [rip+0x2ced]        # 0x555555558080 <head>
   0x555555555393 <+++info symbol 0x555555555393
main+001a> mov    rdi, rax
   0x555555555396 <+++info symbol 0x555555555396
main+001d> call   0x555555555a43 <init_node>
 → 0x55555555539b <++++info symbol 0x55555555539b
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555539f <+++info symbol 0x55555555539f
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x5555555553a2 <+++info symbol 0x5555555553a2
main+0029> mov    rsi, rdx
   0x5555555553a5 <+++info symbol 0x5555555553a5
main+002c> mov    edi, eax
   0x5555555553a7 <+++info symbol 0x5555555553a7
main+002e> call   0x555555555641 <parse_args>
   0x5555555553ac <+++info symbol 0x5555555553ac
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+109 ────
    104	 
    105	   // 1. Init the head
    106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
           // argc=0x1, argv=0x00007fffffffdbf0  →  [...]  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin", num_tests=0x5555
 →  109	   num_tests = parse_args(argc, argv);
    110	 
    111	   switch(num_tests) {
    112	     case 0:
    113	       // Allocate nodes and set the grades.
    114	       for(i = 0; i < NUM_STUDENTS; i++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539b in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539b → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x000055555555539b  →  <++++info symbol 0x55555555539b
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555538c <+++info symbol 0x55555555538c
main+0013> lea    rax, [rip+0x2ced]        # 0x555555558080 <head>
   0x555555555393 <+++info symbol 0x555555555393
main+001a> mov    rdi, rax
   0x555555555396 <+++info symbol 0x555555555396
main+001d> call   0x555555555a43 <init_node>
 → 0x55555555539b <++++info symbol 0x55555555539b
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555539f <+++info symbol 0x55555555539f
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x5555555553a2 <+++info symbol 0x5555555553a2
main+0029> mov    rsi, rdx
   0x5555555553a5 <+++info symbol 0x5555555553a5
main+002c> mov    edi, eax
   0x5555555553a7 <+++info symbol 0x5555555553a7
main+002e> call   0x555555555641 <parse_args>
   0x5555555553ac <+++info symbol 0x5555555553ac
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+109 ────
    104	 
    105	   // 1. Init the head
    106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
           // argc=0x1, argv=0x00007fffffffdbf0  →  [...]  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin", num_tests=0x5555
 →  109	   num_tests = parse_args(argc, argv);
    110	 
    111	   switch(num_tests) {
    112	     case 0:
    113	       // Allocate nodes and set the grades.
    114	       for(i = 0; i < NUM_STUDENTS; i++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539b in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539b → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
111	  switch(num_tests) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555553af  →  <++++info symbol 0x5555555553af
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553a5 <+++info symbol 0x5555555553a5
main+002c> mov    edi, eax
   0x5555555553a7 <+++info symbol 0x5555555553a7
main+002e> call   0x555555555641 <parse_args>
   0x5555555553ac <+++info symbol 0x5555555553ac
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x5555555553af <++++info symbol 0x5555555553af
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553b3 <+++info symbol 0x5555555553b3
main+003a> je     0x5555555555e1 <main+616>
   0x5555555553b9 <+++info symbol 0x5555555553b9
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553bd <+++info symbol 0x5555555553bd
main+0044> jg     0x5555555555f4 <main+635>
   0x5555555553c3 <+++info symbol 0x5555555553c3
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553c7 <+++info symbol 0x5555555553c7
main+004e> je     0x5555555555ce <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+111 ────
    106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
    110	 
           // num_tests=-0x1
 →  111	   switch(num_tests) {
    112	     case 0:
    113	       // Allocate nodes and set the grades.
    114	       for(i = 0; i < NUM_STUDENTS; i++) {
    115	         students[i] = alloc_student(names[i]);
    116	         for(j = 0; j < NUM_EXAMS; j++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555553af in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553af → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555553af  →  <++++info symbol 0x5555555553af
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553a5 <+++info symbol 0x5555555553a5
main+002c> mov    edi, eax
   0x5555555553a7 <+++info symbol 0x5555555553a7
main+002e> call   0x555555555641 <parse_args>
   0x5555555553ac <+++info symbol 0x5555555553ac
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x5555555553af <++++info symbol 0x5555555553af
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553b3 <+++info symbol 0x5555555553b3
main+003a> je     0x5555555555e1 <main+616>
   0x5555555553b9 <+++info symbol 0x5555555553b9
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553bd <+++info symbol 0x5555555553bd
main+0044> jg     0x5555555555f4 <main+635>
   0x5555555553c3 <+++info symbol 0x5555555553c3
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553c7 <+++info symbol 0x5555555553c7
main+004e> je     0x5555555555ce <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+111 ────
    106	   init_node(&head);
    107	 
    108	   // 2. Get which test to run.
    109	   num_tests = parse_args(argc, argv);
    110	 
           // num_tests=-0x1
 →  111	   switch(num_tests) {
    112	     case 0:
    113	       // Allocate nodes and set the grades.
    114	       for(i = 0; i < NUM_STUDENTS; i++) {
    115	         students[i] = alloc_student(names[i]);
    116	         for(j = 0; j < NUM_EXAMS; j++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555553af in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553af → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
151	      if(!test1()) exit(EXIT_FAILURE);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555f4  →  <++++info symbol 0x5555555555f4
main+027b> call 0x5555555556fe <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555e8 <+++info symbol 0x5555555555e8
main+026f> jne    0x555555555633 <main+698>
   0x5555555555ea <+++info symbol 0x5555555555ea
main+0271> mov    edi, 0x1
   0x5555555555ef <+++info symbol 0x5555555555ef
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555f4 <++++info symbol 0x5555555555f4
main+027b> call   0x5555555556fe <test1>
   ↳  0x5555555556fe <+++info symbol 0x5555555556fe
test1+0000> endbr64 
      0x555555555702 <+++info symbol 0x555555555702
test1+0004> push   rbp
      0x555555555703 <+++info symbol 0x555555555703
test1+0005> mov    rbp, rsp
      0x555555555706 <+++info symbol 0x555555555706
test1+0008> sub    rsp, 0x10
      0x55555555570a <+++info symbol 0x55555555570a
test1+000c> lea    rax, [rip+0x8f7]        # 0x555555556008
      0x555555555711 <+++info symbol 0x555555555711
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+151 ────
    146	     case 3:
    147	       if(!test3()) exit(EXIT_FAILURE);
    148	       break;
    149	     case -1:
    150	     default:
 →  151	       if(!test1()) exit(EXIT_FAILURE);
    152	       if(!test2()) exit(EXIT_FAILURE);
    153	       if(!test3()) exit(EXIT_FAILURE);
    154	       break;
    155	   }
    156	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555f4 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555f4 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555f4  →  <++++info symbol 0x5555555555f4
main+027b> call 0x5555555556fe <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555e8 <+++info symbol 0x5555555555e8
main+026f> jne    0x555555555633 <main+698>
   0x5555555555ea <+++info symbol 0x5555555555ea
main+0271> mov    edi, 0x1
   0x5555555555ef <+++info symbol 0x5555555555ef
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555f4 <++++info symbol 0x5555555555f4
main+027b> call   0x5555555556fe <test1>
   ↳  0x5555555556fe <+++info symbol 0x5555555556fe
test1+0000> endbr64 
      0x555555555702 <+++info symbol 0x555555555702
test1+0004> push   rbp
      0x555555555703 <+++info symbol 0x555555555703
test1+0005> mov    rbp, rsp
      0x555555555706 <+++info symbol 0x555555555706
test1+0008> sub    rsp, 0x10
      0x55555555570a <+++info symbol 0x55555555570a
test1+000c> lea    rax, [rip+0x8f7]        # 0x555555556008
      0x555555555711 <+++info symbol 0x555555555711
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+151 ────
    146	     case 3:
    147	       if(!test3()) exit(EXIT_FAILURE);
    148	       break;
    149	     case -1:
    150	     default:
 →  151	       if(!test1()) exit(EXIT_FAILURE);
    152	       if(!test2()) exit(EXIT_FAILURE);
    153	       if(!test3()) exit(EXIT_FAILURE);
    154	       break;
    155	   }
    156	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555f4 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555f4 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
test1 () at student.c:190
190	  struct student *st = alloc_student("Mohammad");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x000055555555570a  →  <++++info symbol 0x55555555570a
test1+000c> lea rax, [rip+0x8f7]        # 0x555555556008
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0xffffffffff558080
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555f9  →  <++++info symbol 0x5555555555f9
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555702 <+++info symbol 0x555555555702
test1+0004> push   rbp
   0x555555555703 <+++info symbol 0x555555555703
test1+0005> mov    rbp, rsp
   0x555555555706 <+++info symbol 0x555555555706
test1+0008> sub    rsp, 0x10
 → 0x55555555570a <++++info symbol 0x55555555570a
test1+000c> lea    rax, [rip+0x8f7]        # 0x555555556008
   0x555555555711 <+++info symbol 0x555555555711
test1+0013> mov    rdi, rax
   0x555555555714 <+++info symbol 0x555555555714
test1+0016> call   0x555555555249 <alloc_student>
   0x555555555719 <+++info symbol 0x555555555719
test1+001b> mov    QWORD PTR [rbp-0x8], rax
   0x55555555571d <+++info symbol 0x55555555571d
test1+001f> lea    rax, [rip+0x9d0]        # 0x5555555560f4
   0x555555555724 <+++info symbol 0x555555555724
test1+0026> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+190 ────
    185	 
    186	   return tests;
    187	 }
    188	 
    189	 int test1(void) {
           // st=0x00007fffffffdbd8  →  0xffffffffff558080
 →  190	   struct student *st = alloc_student("Mohammad");
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
    193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
    195	   if(IS_EMPTY(head)) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555570a in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555570a → test1()
[#1] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x000055555555570a  →  <++++info symbol 0x55555555570a
test1+000c> lea rax, [rip+0x8f7]        # 0x555555556008
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0xffffffffff558080
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555f9  →  <++++info symbol 0x5555555555f9
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555702 <+++info symbol 0x555555555702
test1+0004> push   rbp
   0x555555555703 <+++info symbol 0x555555555703
test1+0005> mov    rbp, rsp
   0x555555555706 <+++info symbol 0x555555555706
test1+0008> sub    rsp, 0x10
 → 0x55555555570a <++++info symbol 0x55555555570a
test1+000c> lea    rax, [rip+0x8f7]        # 0x555555556008
   0x555555555711 <+++info symbol 0x555555555711
test1+0013> mov    rdi, rax
   0x555555555714 <+++info symbol 0x555555555714
test1+0016> call   0x555555555249 <alloc_student>
   0x555555555719 <+++info symbol 0x555555555719
test1+001b> mov    QWORD PTR [rbp-0x8], rax
   0x55555555571d <+++info symbol 0x55555555571d
test1+001f> lea    rax, [rip+0x9d0]        # 0x5555555560f4
   0x555555555724 <+++info symbol 0x555555555724
test1+0026> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+190 ────
    185	 
    186	   return tests;
    187	 }
    188	 
    189	 int test1(void) {
           // st=0x00007fffffffdbd8  →  0xffffffffff558080
 →  190	   struct student *st = alloc_student("Mohammad");
    191	 
    192	   // This test1 just tests adding at the head and then deleting.
    193	   printf("Test 1 (simple add_head): ");
    194	   add_head(&head, &st->node);
    195	   if(IS_EMPTY(head)) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555570a in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555570a → test1()
[#1] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n

Program received signal SIGSEGV, Segmentation fault.
0x000055555555526b in alloc_student (name=0x555555556008 "Mohammad") at student.c:72
72	  st->grades = malloc(NUM_EXAMS * sizeof(int));
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb90
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x21              
$rdx   : 0x00005555555592a0  →  0x0000000000000000
$rsp   : 0x00007fffffffdb90  →  0x0000000000000000
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592b0  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x000055555555526b  →  <++++info symbol 0x55555555526b
alloc_student+0022> mov QWORD PTR [rax+0x10], rdx
$r8    : 0x21001           
$r9    : 0x00005555555592a0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592b0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow RESUME virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb90│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdb98│+0x0008: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0010: 0x0000000000000000
0x00007fffffffdba8│+0x0018: 0x0000000000000001
0x00007fffffffdbb0│+0x0020: 0x0000555555554040  →  0x0000000400000006
0x00007fffffffdbb8│+0x0028: 0x0000000000000000
0x00007fffffffdbc0│+0x0030: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbc8│+0x0038: 0x0000555555555719  →  <++++info symbol 0x555555555719
test1+001b> mov QWORD PTR [rbp-0x8], rax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555525f <+++info symbol 0x55555555525f
alloc_student+0016> call   0x555555555120 <malloc@plt>
   0x555555555264 <+++info symbol 0x555555555264
alloc_student+001b> mov    rdx, rax
   0x555555555267 <+++info symbol 0x555555555267
alloc_student+001e> mov    rax, QWORD PTR [rbp-0x18]
 → 0x55555555526b <++++info symbol 0x55555555526b
alloc_student+0022> mov    QWORD PTR [rax+0x10], rdx
   0x55555555526f <+++info symbol 0x55555555526f
alloc_student+0026> mov    edi, 0x18
   0x555555555274 <+++info symbol 0x555555555274
alloc_student+002b> call   0x555555555120 <malloc@plt>
   0x555555555279 <+++info symbol 0x555555555279
alloc_student+0030> mov    QWORD PTR [rbp-0x18], rax
   0x55555555527d <+++info symbol 0x55555555527d
alloc_student+0034> cmp    QWORD PTR [rbp-0x18], 0x0
   0x555555555282 <+++info symbol 0x555555555282
alloc_student+0039> jne    0x55555555529d <alloc_student+84>
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+72 ────
     67	  *  into it.
     68	  */
     69	 struct student *alloc_student(const char *name) {
     70	   struct student *st;
     71	 
           // st=0x00007fffffffdba8  →  0x0000000000000001
 →   72	   st->grades = malloc(NUM_EXAMS * sizeof(int));
     73	   st = malloc(sizeof(struct student));
     74	   if(!st) {
     75	     perror("PANIC: malloc failed, out of memory!");
     76	     exit(EXIT_FAILURE);
     77	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555526b in alloc_student (), reason: SIGSEGV
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555526b → alloc_student(name=0x555555556008 "Mohammad")
[#1] 0x555555555719 → test1()
[#2] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdb90
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x21              
$rdx   : 0x00005555555592a0  →  0x0000000000000000
$rsp   : 0x00007fffffffdb90  →  0x0000000000000000
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592b0  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x000055555555526b  →  <++++info symbol 0x55555555526b
alloc_student+0022> mov QWORD PTR [rax+0x10], rdx
$r8    : 0x21001           
$r9    : 0x00005555555592a0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592b0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow RESUME virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdb90│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdb98│+0x0008: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdba0│+0x0010: 0x0000000000000000
0x00007fffffffdba8│+0x0018: 0x0000000000000001
0x00007fffffffdbb0│+0x0020: 0x0000555555554040  →  0x0000000400000006
0x00007fffffffdbb8│+0x0028: 0x0000000000000000
0x00007fffffffdbc0│+0x0030: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbc8│+0x0038: 0x0000555555555719  →  <++++info symbol 0x555555555719
test1+001b> mov QWORD PTR [rbp-0x8], rax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555525f <+++info symbol 0x55555555525f
alloc_student+0016> call   0x555555555120 <malloc@plt>
   0x555555555264 <+++info symbol 0x555555555264
alloc_student+001b> mov    rdx, rax
   0x555555555267 <+++info symbol 0x555555555267
alloc_student+001e> mov    rax, QWORD PTR [rbp-0x18]
 → 0x55555555526b <++++info symbol 0x55555555526b
alloc_student+0022> mov    QWORD PTR [rax+0x10], rdx
   0x55555555526f <+++info symbol 0x55555555526f
alloc_student+0026> mov    edi, 0x18
   0x555555555274 <+++info symbol 0x555555555274
alloc_student+002b> call   0x555555555120 <malloc@plt>
   0x555555555279 <+++info symbol 0x555555555279
alloc_student+0030> mov    QWORD PTR [rbp-0x18], rax
   0x55555555527d <+++info symbol 0x55555555527d
alloc_student+0034> cmp    QWORD PTR [rbp-0x18], 0x0
   0x555555555282 <+++info symbol 0x555555555282
alloc_student+0039> jne    0x55555555529d <alloc_student+84>
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+72 ────
     67	  *  into it.
     68	  */
     69	 struct student *alloc_student(const char *name) {
     70	   struct student *st;
     71	 
           // st=0x00007fffffffdba8  →  0x0000000000000001
 →   72	   st->grades = malloc(NUM_EXAMS * sizeof(int));
     73	   st = malloc(sizeof(struct student));
     74	   if(!st) {
     75	     perror("PANIC: malloc failed, out of memory!");
     76	     exit(EXIT_FAILURE);
     77	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555526b in alloc_student (), reason: SIGSEGV
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555526b → alloc_student(name=0x555555556008 "Mohammad")
[#1] 0x555555555719 → test1()
[#2] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n

Program terminated with signal SIGSEGV, Segmentation fault.
The program no longer exists.
+quit
+source ~/.gef/gef.py
++set confirm off
++set verbose off
++set pagination off
++set print elements 0
++set history save on
++set history filename ~/.gdb_history
++set output-radix 0x10
++set print pretty on
++set disassembly-flavor intel
++handle SIGALRM print nopass
++save gdb-index '/tmp/gef'
GEF for linux ready, type `gef' to start, `gef config' to configure
93 commands loaded and 5 functions added for GDB 12.1 in 0.00ms using Python engine 3.10
++define target hookpost-remote
++define target hookpost-extended-remote
++define hookpost-source
++pi gef.gdb.load()
Reading symbols from ./student.bin...
+b main
Breakpoint 1 at 0x138c: file student.c, line 107.
+run
Starting program: /home/liub5/CSSE332-lab-liub5/debug/student.bin 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=0x1, argv=0x7fffffffdd28) at student.c:107
107	  init_node(&head);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x000055555555538c  →  <++++info symbol 0x55555555538c
main+0013> lea rax, [rip+0x2ced]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555381 <+++info symbol 0x555555555381
main+0008> sub    rsp, 0x20
   0x555555555385 <+++info symbol 0x555555555385
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555388 <+++info symbol 0x555555555388
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x55555555538c <++++info symbol 0x55555555538c
main+0013> lea    rax, [rip+0x2ced]        # 0x555555558080 <head>
   0x555555555393 <+++info symbol 0x555555555393
main+001a> mov    rdi, rax
   0x555555555396 <+++info symbol 0x555555555396
main+001d> call   0x555555555a43 <init_node>
   0x55555555539b <+++info symbol 0x55555555539b
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555539f <+++info symbol 0x55555555539f
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x5555555553a2 <+++info symbol 0x5555555553a2
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+107 ────
    102	 
    103	 int main(int argc, char **argv) {
    104	   int i, j, num_tests;
    105	 
    106	   // 1. Init the head
 →  107	   init_node(&head);
    108	 
    109	   // 2. Get which test to run.
    110	   num_tests = parse_args(argc, argv);
    111	 
    112	   switch(num_tests) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555538c in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555538c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x000055555555538c  →  <++++info symbol 0x55555555538c
main+0013> lea rax, [rip+0x2ced]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555381 <+++info symbol 0x555555555381
main+0008> sub    rsp, 0x20
   0x555555555385 <+++info symbol 0x555555555385
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555388 <+++info symbol 0x555555555388
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x55555555538c <++++info symbol 0x55555555538c
main+0013> lea    rax, [rip+0x2ced]        # 0x555555558080 <head>
   0x555555555393 <+++info symbol 0x555555555393
main+001a> mov    rdi, rax
   0x555555555396 <+++info symbol 0x555555555396
main+001d> call   0x555555555a43 <init_node>
   0x55555555539b <+++info symbol 0x55555555539b
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555539f <+++info symbol 0x55555555539f
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x5555555553a2 <+++info symbol 0x5555555553a2
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+107 ────
    102	 
    103	 int main(int argc, char **argv) {
    104	   int i, j, num_tests;
    105	 
    106	   // 1. Init the head
 →  107	   init_node(&head);
    108	 
    109	   // 2. Get which test to run.
    110	   num_tests = parse_args(argc, argv);
    111	 
    112	   switch(num_tests) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555538c in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555538c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
110	  num_tests = parse_args(argc, argv);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x000055555555539b  →  <++++info symbol 0x55555555539b
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555538c <+++info symbol 0x55555555538c
main+0013> lea    rax, [rip+0x2ced]        # 0x555555558080 <head>
   0x555555555393 <+++info symbol 0x555555555393
main+001a> mov    rdi, rax
   0x555555555396 <+++info symbol 0x555555555396
main+001d> call   0x555555555a43 <init_node>
 → 0x55555555539b <++++info symbol 0x55555555539b
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555539f <+++info symbol 0x55555555539f
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x5555555553a2 <+++info symbol 0x5555555553a2
main+0029> mov    rsi, rdx
   0x5555555553a5 <+++info symbol 0x5555555553a5
main+002c> mov    edi, eax
   0x5555555553a7 <+++info symbol 0x5555555553a7
main+002e> call   0x555555555641 <parse_args>
   0x5555555553ac <+++info symbol 0x5555555553ac
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+110 ────
    105	 
    106	   // 1. Init the head
    107	   init_node(&head);
    108	 
    109	   // 2. Get which test to run.
           // argc=0x1, argv=0x00007fffffffdbf0  →  [...]  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin", num_tests=0x5555
 →  110	   num_tests = parse_args(argc, argv);
    111	 
    112	   switch(num_tests) {
    113	     case 0:
    114	       // Allocate nodes and set the grades.
    115	       for(i = 0; i < NUM_STUDENTS; i++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539b in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539b → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x000055555555539b  →  <++++info symbol 0x55555555539b
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555538c <+++info symbol 0x55555555538c
main+0013> lea    rax, [rip+0x2ced]        # 0x555555558080 <head>
   0x555555555393 <+++info symbol 0x555555555393
main+001a> mov    rdi, rax
   0x555555555396 <+++info symbol 0x555555555396
main+001d> call   0x555555555a43 <init_node>
 → 0x55555555539b <++++info symbol 0x55555555539b
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555539f <+++info symbol 0x55555555539f
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x5555555553a2 <+++info symbol 0x5555555553a2
main+0029> mov    rsi, rdx
   0x5555555553a5 <+++info symbol 0x5555555553a5
main+002c> mov    edi, eax
   0x5555555553a7 <+++info symbol 0x5555555553a7
main+002e> call   0x555555555641 <parse_args>
   0x5555555553ac <+++info symbol 0x5555555553ac
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+110 ────
    105	 
    106	   // 1. Init the head
    107	   init_node(&head);
    108	 
    109	   // 2. Get which test to run.
           // argc=0x1, argv=0x00007fffffffdbf0  →  [...]  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin", num_tests=0x5555
 →  110	   num_tests = parse_args(argc, argv);
    111	 
    112	   switch(num_tests) {
    113	     case 0:
    114	       // Allocate nodes and set the grades.
    115	       for(i = 0; i < NUM_STUDENTS; i++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539b in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539b → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
112	  switch(num_tests) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555553af  →  <++++info symbol 0x5555555553af
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553a5 <+++info symbol 0x5555555553a5
main+002c> mov    edi, eax
   0x5555555553a7 <+++info symbol 0x5555555553a7
main+002e> call   0x555555555641 <parse_args>
   0x5555555553ac <+++info symbol 0x5555555553ac
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x5555555553af <++++info symbol 0x5555555553af
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553b3 <+++info symbol 0x5555555553b3
main+003a> je     0x5555555555e1 <main+616>
   0x5555555553b9 <+++info symbol 0x5555555553b9
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553bd <+++info symbol 0x5555555553bd
main+0044> jg     0x5555555555f4 <main+635>
   0x5555555553c3 <+++info symbol 0x5555555553c3
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553c7 <+++info symbol 0x5555555553c7
main+004e> je     0x5555555555ce <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+112 ────
    107	   init_node(&head);
    108	 
    109	   // 2. Get which test to run.
    110	   num_tests = parse_args(argc, argv);
    111	 
           // num_tests=-0x1
 →  112	   switch(num_tests) {
    113	     case 0:
    114	       // Allocate nodes and set the grades.
    115	       for(i = 0; i < NUM_STUDENTS; i++) {
    116	         students[i] = alloc_student(names[i]);
    117	         for(j = 0; j < NUM_EXAMS; j++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555553af in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553af → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555553af  →  <++++info symbol 0x5555555553af
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553a5 <+++info symbol 0x5555555553a5
main+002c> mov    edi, eax
   0x5555555553a7 <+++info symbol 0x5555555553a7
main+002e> call   0x555555555641 <parse_args>
   0x5555555553ac <+++info symbol 0x5555555553ac
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x5555555553af <++++info symbol 0x5555555553af
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553b3 <+++info symbol 0x5555555553b3
main+003a> je     0x5555555555e1 <main+616>
   0x5555555553b9 <+++info symbol 0x5555555553b9
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553bd <+++info symbol 0x5555555553bd
main+0044> jg     0x5555555555f4 <main+635>
   0x5555555553c3 <+++info symbol 0x5555555553c3
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553c7 <+++info symbol 0x5555555553c7
main+004e> je     0x5555555555ce <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+112 ────
    107	   init_node(&head);
    108	 
    109	   // 2. Get which test to run.
    110	   num_tests = parse_args(argc, argv);
    111	 
           // num_tests=-0x1
 →  112	   switch(num_tests) {
    113	     case 0:
    114	       // Allocate nodes and set the grades.
    115	       for(i = 0; i < NUM_STUDENTS; i++) {
    116	         students[i] = alloc_student(names[i]);
    117	         for(j = 0; j < NUM_EXAMS; j++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555553af in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553af → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
152	      if(!test1()) exit(EXIT_FAILURE);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555f4  →  <++++info symbol 0x5555555555f4
main+027b> call 0x5555555556fe <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555e8 <+++info symbol 0x5555555555e8
main+026f> jne    0x555555555633 <main+698>
   0x5555555555ea <+++info symbol 0x5555555555ea
main+0271> mov    edi, 0x1
   0x5555555555ef <+++info symbol 0x5555555555ef
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555f4 <++++info symbol 0x5555555555f4
main+027b> call   0x5555555556fe <test1>
   ↳  0x5555555556fe <+++info symbol 0x5555555556fe
test1+0000> endbr64 
      0x555555555702 <+++info symbol 0x555555555702
test1+0004> push   rbp
      0x555555555703 <+++info symbol 0x555555555703
test1+0005> mov    rbp, rsp
      0x555555555706 <+++info symbol 0x555555555706
test1+0008> sub    rsp, 0x10
      0x55555555570a <+++info symbol 0x55555555570a
test1+000c> lea    rax, [rip+0x8f7]        # 0x555555556008
      0x555555555711 <+++info symbol 0x555555555711
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+152 ────
    147	     case 3:
    148	       if(!test3()) exit(EXIT_FAILURE);
    149	       break;
    150	     case -1:
    151	     default:
 →  152	       if(!test1()) exit(EXIT_FAILURE);
    153	       if(!test2()) exit(EXIT_FAILURE);
    154	       if(!test3()) exit(EXIT_FAILURE);
    155	       break;
    156	   }
    157	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555f4 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555f4 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555f4  →  <++++info symbol 0x5555555555f4
main+027b> call 0x5555555556fe <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555e8 <+++info symbol 0x5555555555e8
main+026f> jne    0x555555555633 <main+698>
   0x5555555555ea <+++info symbol 0x5555555555ea
main+0271> mov    edi, 0x1
   0x5555555555ef <+++info symbol 0x5555555555ef
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555f4 <++++info symbol 0x5555555555f4
main+027b> call   0x5555555556fe <test1>
   ↳  0x5555555556fe <+++info symbol 0x5555555556fe
test1+0000> endbr64 
      0x555555555702 <+++info symbol 0x555555555702
test1+0004> push   rbp
      0x555555555703 <+++info symbol 0x555555555703
test1+0005> mov    rbp, rsp
      0x555555555706 <+++info symbol 0x555555555706
test1+0008> sub    rsp, 0x10
      0x55555555570a <+++info symbol 0x55555555570a
test1+000c> lea    rax, [rip+0x8f7]        # 0x555555556008
      0x555555555711 <+++info symbol 0x555555555711
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+152 ────
    147	     case 3:
    148	       if(!test3()) exit(EXIT_FAILURE);
    149	       break;
    150	     case -1:
    151	     default:
 →  152	       if(!test1()) exit(EXIT_FAILURE);
    153	       if(!test2()) exit(EXIT_FAILURE);
    154	       if(!test3()) exit(EXIT_FAILURE);
    155	       break;
    156	   }
    157	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555f4 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555f4 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
test1 () at student.c:191
191	  struct student *st = alloc_student("Mohammad");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x000055555555570a  →  <++++info symbol 0x55555555570a
test1+000c> lea rax, [rip+0x8f7]        # 0x555555556008
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0xffffffffff558080
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555f9  →  <++++info symbol 0x5555555555f9
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555702 <+++info symbol 0x555555555702
test1+0004> push   rbp
   0x555555555703 <+++info symbol 0x555555555703
test1+0005> mov    rbp, rsp
   0x555555555706 <+++info symbol 0x555555555706
test1+0008> sub    rsp, 0x10
 → 0x55555555570a <++++info symbol 0x55555555570a
test1+000c> lea    rax, [rip+0x8f7]        # 0x555555556008
   0x555555555711 <+++info symbol 0x555555555711
test1+0013> mov    rdi, rax
   0x555555555714 <+++info symbol 0x555555555714
test1+0016> call   0x555555555249 <alloc_student>
   0x555555555719 <+++info symbol 0x555555555719
test1+001b> mov    QWORD PTR [rbp-0x8], rax
   0x55555555571d <+++info symbol 0x55555555571d
test1+001f> lea    rax, [rip+0x9d0]        # 0x5555555560f4
   0x555555555724 <+++info symbol 0x555555555724
test1+0026> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+191 ────
    186	 
    187	   return tests;
    188	 }
    189	 
    190	 int test1(void) {
           // st=0x00007fffffffdbd8  →  0xffffffffff558080
 →  191	   struct student *st = alloc_student("Mohammad");
    192	 
    193	   // This test1 just tests adding at the head and then deleting.
    194	   printf("Test 1 (simple add_head): ");
    195	   add_head(&head, &st->node);
    196	   if(IS_EMPTY(head)) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555570a in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555570a → test1()
[#1] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x000055555555570a  →  <++++info symbol 0x55555555570a
test1+000c> lea rax, [rip+0x8f7]        # 0x555555556008
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0xffffffffff558080
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555f9  →  <++++info symbol 0x5555555555f9
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555702 <+++info symbol 0x555555555702
test1+0004> push   rbp
   0x555555555703 <+++info symbol 0x555555555703
test1+0005> mov    rbp, rsp
   0x555555555706 <+++info symbol 0x555555555706
test1+0008> sub    rsp, 0x10
 → 0x55555555570a <++++info symbol 0x55555555570a
test1+000c> lea    rax, [rip+0x8f7]        # 0x555555556008
   0x555555555711 <+++info symbol 0x555555555711
test1+0013> mov    rdi, rax
   0x555555555714 <+++info symbol 0x555555555714
test1+0016> call   0x555555555249 <alloc_student>
   0x555555555719 <+++info symbol 0x555555555719
test1+001b> mov    QWORD PTR [rbp-0x8], rax
   0x55555555571d <+++info symbol 0x55555555571d
test1+001f> lea    rax, [rip+0x9d0]        # 0x5555555560f4
   0x555555555724 <+++info symbol 0x555555555724
test1+0026> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+191 ────
    186	 
    187	   return tests;
    188	 }
    189	 
    190	 int test1(void) {
           // st=0x00007fffffffdbd8  →  0xffffffffff558080
 →  191	   struct student *st = alloc_student("Mohammad");
    192	 
    193	   // This test1 just tests adding at the head and then deleting.
    194	   printf("Test 1 (simple add_head): ");
    195	   add_head(&head, &st->node);
    196	   if(IS_EMPTY(head)) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555570a in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555570a → test1()
[#1] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
194	  printf("Test 1 (simple add_head): ");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x61686f4d        
$rdx   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rip   : 0x000055555555571d  →  <++++info symbol 0x55555555571d
test1+001f> lea rax, [rip+0x9d0]        # 0x5555555560f4
$r8    : 0x8               
$r9    : 0x00005555555592e0  →  "Mohammad"
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592f0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555f9  →  <++++info symbol 0x5555555555f9
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555711 <+++info symbol 0x555555555711
test1+0013> mov    rdi, rax
   0x555555555714 <+++info symbol 0x555555555714
test1+0016> call   0x555555555249 <alloc_student>
   0x555555555719 <+++info symbol 0x555555555719
test1+001b> mov    QWORD PTR [rbp-0x8], rax
 → 0x55555555571d <++++info symbol 0x55555555571d
test1+001f> lea    rax, [rip+0x9d0]        # 0x5555555560f4
   0x555555555724 <+++info symbol 0x555555555724
test1+0026> mov    rdi, rax
   0x555555555727 <+++info symbol 0x555555555727
test1+0029> mov    eax, 0x0
   0x55555555572c <+++info symbol 0x55555555572c
test1+002e> call   0x555555555100 <printf@plt>
   0x555555555731 <+++info symbol 0x555555555731
test1+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555735 <+++info symbol 0x555555555735
test1+0037> mov    rsi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+194 ────
    189	 
    190	 int test1(void) {
    191	   struct student *st = alloc_student("Mohammad");
    192	 
    193	   // This test1 just tests adding at the head and then deleting.
 →  194	   printf("Test 1 (simple add_head): ");
    195	   add_head(&head, &st->node);
    196	   if(IS_EMPTY(head)) {
    197	     printf("FAILED (list is still empty after adding)\n");
    198	     return 0;
    199	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555571d in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555571d → test1()
[#1] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x61686f4d        
$rdx   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
$rip   : 0x000055555555571d  →  <++++info symbol 0x55555555571d
test1+001f> lea rax, [rip+0x9d0]        # 0x5555555560f4
$r8    : 0x8               
$r9    : 0x00005555555592e0  →  "Mohammad"
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592f0  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555f9  →  <++++info symbol 0x5555555555f9
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555711 <+++info symbol 0x555555555711
test1+0013> mov    rdi, rax
   0x555555555714 <+++info symbol 0x555555555714
test1+0016> call   0x555555555249 <alloc_student>
   0x555555555719 <+++info symbol 0x555555555719
test1+001b> mov    QWORD PTR [rbp-0x8], rax
 → 0x55555555571d <++++info symbol 0x55555555571d
test1+001f> lea    rax, [rip+0x9d0]        # 0x5555555560f4
   0x555555555724 <+++info symbol 0x555555555724
test1+0026> mov    rdi, rax
   0x555555555727 <+++info symbol 0x555555555727
test1+0029> mov    eax, 0x0
   0x55555555572c <+++info symbol 0x55555555572c
test1+002e> call   0x555555555100 <printf@plt>
   0x555555555731 <+++info symbol 0x555555555731
test1+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555735 <+++info symbol 0x555555555735
test1+0037> mov    rsi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+194 ────
    189	 
    190	 int test1(void) {
    191	   struct student *st = alloc_student("Mohammad");
    192	 
    193	   // This test1 just tests adding at the head and then deleting.
 →  194	   printf("Test 1 (simple add_head): ");
    195	   add_head(&head, &st->node);
    196	   if(IS_EMPTY(head)) {
    197	     printf("FAILED (list is still empty after adding)\n");
    198	     return 0;
    199	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555571d in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555571d → test1()
[#1] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
195	  add_head(&head, &st->node);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1a              
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555559300  →  "Test 1 (simple add_head): "
$rdi   : 0x00007fffffffd670  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x0000555555555731  →  <++++info symbol 0x555555555731
test1+0033> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x0               
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559700  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555f9  →  <++++info symbol 0x5555555555f9
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555724 <+++info symbol 0x555555555724
test1+0026> mov    rdi, rax
   0x555555555727 <+++info symbol 0x555555555727
test1+0029> mov    eax, 0x0
   0x55555555572c <+++info symbol 0x55555555572c
test1+002e> call   0x555555555100 <printf@plt>
 → 0x555555555731 <++++info symbol 0x555555555731
test1+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555735 <+++info symbol 0x555555555735
test1+0037> mov    rsi, rax
   0x555555555738 <+++info symbol 0x555555555738
test1+003a> lea    rax, [rip+0x2941]        # 0x555555558080 <head>
   0x55555555573f <+++info symbol 0x55555555573f
test1+0041> mov    rdi, rax
   0x555555555742 <+++info symbol 0x555555555742
test1+0044> call   0x555555555a5d <add_head>
   0x555555555747 <+++info symbol 0x555555555747
test1+0049> mov    rax, QWORD PTR [rip+0x2932]        # 0x555555558080 <head>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+195 ────
    190	 int test1(void) {
    191	   struct student *st = alloc_student("Mohammad");
    192	 
    193	   // This test1 just tests adding at the head and then deleting.
    194	   printf("Test 1 (simple add_head): ");
           // st=0x00007fffffffdbd8  →  [...]  →  [loop detected]
 →  195	   add_head(&head, &st->node);
    196	   if(IS_EMPTY(head)) {
    197	     printf("FAILED (list is still empty after adding)\n");
    198	     return 0;
    199	   }
    200	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555731 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555731 → test1()
[#1] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1a              
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555559300  →  "Test 1 (simple add_head): "
$rdi   : 0x00007fffffffd670  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x0000555555555731  →  <++++info symbol 0x555555555731
test1+0033> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x0               
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559700  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555f9  →  <++++info symbol 0x5555555555f9
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555724 <+++info symbol 0x555555555724
test1+0026> mov    rdi, rax
   0x555555555727 <+++info symbol 0x555555555727
test1+0029> mov    eax, 0x0
   0x55555555572c <+++info symbol 0x55555555572c
test1+002e> call   0x555555555100 <printf@plt>
 → 0x555555555731 <++++info symbol 0x555555555731
test1+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555735 <+++info symbol 0x555555555735
test1+0037> mov    rsi, rax
   0x555555555738 <+++info symbol 0x555555555738
test1+003a> lea    rax, [rip+0x2941]        # 0x555555558080 <head>
   0x55555555573f <+++info symbol 0x55555555573f
test1+0041> mov    rdi, rax
   0x555555555742 <+++info symbol 0x555555555742
test1+0044> call   0x555555555a5d <add_head>
   0x555555555747 <+++info symbol 0x555555555747
test1+0049> mov    rax, QWORD PTR [rip+0x2932]        # 0x555555558080 <head>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+195 ────
    190	 int test1(void) {
    191	   struct student *st = alloc_student("Mohammad");
    192	 
    193	   // This test1 just tests adding at the head and then deleting.
    194	   printf("Test 1 (simple add_head): ");
           // st=0x00007fffffffdbd8  →  [...]  →  [loop detected]
 →  195	   add_head(&head, &st->node);
    196	   if(IS_EMPTY(head)) {
    197	     printf("FAILED (list is still empty after adding)\n");
    198	     return 0;
    199	   }
    200	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555731 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555731 → test1()
[#1] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
196	  if(IS_EMPTY(head)) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x00005555555592a0  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x00005555555592a0  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555747  →  <++++info symbol 0x555555555747
test1+0049> mov rax, QWORD PTR [rip+0x2932]        # 0x555555558080 <head>
$r8    : 0x0               
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559700  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555f9  →  <++++info symbol 0x5555555555f9
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555738 <+++info symbol 0x555555555738
test1+003a> lea    rax, [rip+0x2941]        # 0x555555558080 <head>
   0x55555555573f <+++info symbol 0x55555555573f
test1+0041> mov    rdi, rax
   0x555555555742 <+++info symbol 0x555555555742
test1+0044> call   0x555555555a5d <add_head>
 → 0x555555555747 <++++info symbol 0x555555555747
test1+0049> mov    rax, QWORD PTR [rip+0x2932]        # 0x555555558080 <head>
   0x55555555574e <+++info symbol 0x55555555574e
test1+0050> lea    rdx, [rip+0x292b]        # 0x555555558080 <head>
   0x555555555755 <+++info symbol 0x555555555755
test1+0057> cmp    rax, rdx
   0x555555555758 <+++info symbol 0x555555555758
test1+005a> jne    0x555555555770 <test1+114>
   0x55555555575a <+++info symbol 0x55555555575a
test1+005c> lea    rax, [rip+0x9af]        # 0x555555556110
   0x555555555761 <+++info symbol 0x555555555761
test1+0063> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+196 ────
    191	   struct student *st = alloc_student("Mohammad");
    192	 
    193	   // This test1 just tests adding at the head and then deleting.
    194	   printf("Test 1 (simple add_head): ");
    195	   add_head(&head, &st->node);
 →  196	   if(IS_EMPTY(head)) {
    197	     printf("FAILED (list is still empty after adding)\n");
    198	     return 0;
    199	   }
    200	 
    201	   // check if it was inserted
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555747 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555747 → test1()
[#1] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x00005555555592a0  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x00005555555592a0  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555747  →  <++++info symbol 0x555555555747
test1+0049> mov rax, QWORD PTR [rip+0x2932]        # 0x555555558080 <head>
$r8    : 0x0               
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559700  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555f9  →  <++++info symbol 0x5555555555f9
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555738 <+++info symbol 0x555555555738
test1+003a> lea    rax, [rip+0x2941]        # 0x555555558080 <head>
   0x55555555573f <+++info symbol 0x55555555573f
test1+0041> mov    rdi, rax
   0x555555555742 <+++info symbol 0x555555555742
test1+0044> call   0x555555555a5d <add_head>
 → 0x555555555747 <++++info symbol 0x555555555747
test1+0049> mov    rax, QWORD PTR [rip+0x2932]        # 0x555555558080 <head>
   0x55555555574e <+++info symbol 0x55555555574e
test1+0050> lea    rdx, [rip+0x292b]        # 0x555555558080 <head>
   0x555555555755 <+++info symbol 0x555555555755
test1+0057> cmp    rax, rdx
   0x555555555758 <+++info symbol 0x555555555758
test1+005a> jne    0x555555555770 <test1+114>
   0x55555555575a <+++info symbol 0x55555555575a
test1+005c> lea    rax, [rip+0x9af]        # 0x555555556110
   0x555555555761 <+++info symbol 0x555555555761
test1+0063> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+196 ────
    191	   struct student *st = alloc_student("Mohammad");
    192	 
    193	   // This test1 just tests adding at the head and then deleting.
    194	   printf("Test 1 (simple add_head): ");
    195	   add_head(&head, &st->node);
 →  196	   if(IS_EMPTY(head)) {
    197	     printf("FAILED (list is still empty after adding)\n");
    198	     return 0;
    199	   }
    200	 
    201	   // check if it was inserted
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555747 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555747 → test1()
[#1] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
202	  if(head.next != &st->node) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x00005555555592a0  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x00005555555592a0  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555770  →  <++++info symbol 0x555555555770
test1+0072> mov rdx, QWORD PTR [rip+0x2909]        # 0x555555558080 <head>
$r8    : 0x0               
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559700  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555f9  →  <++++info symbol 0x5555555555f9
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555764 <+++info symbol 0x555555555764
test1+0066> call   0x5555555550e0 <puts@plt>
   0x555555555769 <+++info symbol 0x555555555769
test1+006b> mov    eax, 0x0
   0x55555555576e <+++info symbol 0x55555555576e
test1+0070> jmp    0x5555555557e9 <test1+235>
 → 0x555555555770 <++++info symbol 0x555555555770
test1+0072> mov    rdx, QWORD PTR [rip+0x2909]        # 0x555555558080 <head>
   0x555555555777 <+++info symbol 0x555555555777
test1+0079> mov    rax, QWORD PTR [rbp-0x8]
   0x55555555577b <+++info symbol 0x55555555577b
test1+007d> cmp    rdx, rax
   0x55555555577e <+++info symbol 0x55555555577e
test1+0080> je     0x555555555796 <test1+152>
   0x555555555780 <+++info symbol 0x555555555780
test1+0082> lea    rax, [rip+0x9b9]        # 0x555555556140
   0x555555555787 <+++info symbol 0x555555555787
test1+0089> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+202 ────
    197	     printf("FAILED (list is still empty after adding)\n");
    198	     return 0;
    199	   }
    200	 
    201	   // check if it was inserted
           // st=0x00007fffffffdbd8  →  [...]  →  [loop detected]
 →  202	   if(head.next != &st->node) {
    203	     printf("FAILED (list contains wrong information)\n");
    204	     return 0;
    205	   }
    206	 
    207	   // remove it and then check that it's empty.
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555770 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555770 → test1()
[#1] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x0000555555558080  →  0x00005555555592a0  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x00005555555592a0  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555770  →  <++++info symbol 0x555555555770
test1+0072> mov rdx, QWORD PTR [rip+0x2909]        # 0x555555558080 <head>
$r8    : 0x0               
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559700  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555f9  →  <++++info symbol 0x5555555555f9
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555764 <+++info symbol 0x555555555764
test1+0066> call   0x5555555550e0 <puts@plt>
   0x555555555769 <+++info symbol 0x555555555769
test1+006b> mov    eax, 0x0
   0x55555555576e <+++info symbol 0x55555555576e
test1+0070> jmp    0x5555555557e9 <test1+235>
 → 0x555555555770 <++++info symbol 0x555555555770
test1+0072> mov    rdx, QWORD PTR [rip+0x2909]        # 0x555555558080 <head>
   0x555555555777 <+++info symbol 0x555555555777
test1+0079> mov    rax, QWORD PTR [rbp-0x8]
   0x55555555577b <+++info symbol 0x55555555577b
test1+007d> cmp    rdx, rax
   0x55555555577e <+++info symbol 0x55555555577e
test1+0080> je     0x555555555796 <test1+152>
   0x555555555780 <+++info symbol 0x555555555780
test1+0082> lea    rax, [rip+0x9b9]        # 0x555555556140
   0x555555555787 <+++info symbol 0x555555555787
test1+0089> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+202 ────
    197	     printf("FAILED (list is still empty after adding)\n");
    198	     return 0;
    199	   }
    200	 
    201	   // check if it was inserted
           // st=0x00007fffffffdbd8  →  [...]  →  [loop detected]
 →  202	   if(head.next != &st->node) {
    203	     printf("FAILED (list contains wrong information)\n");
    204	     return 0;
    205	   }
    206	 
    207	   // remove it and then check that it's empty.
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555770 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555770 → test1()
[#1] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
208	  del_node(&head, &st->node);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x00005555555592a0  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555796  →  <++++info symbol 0x555555555796
test1+0098> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x0               
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559700  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555f9  →  <++++info symbol 0x5555555555f9
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555578a <+++info symbol 0x55555555578a
test1+008c> call   0x5555555550e0 <puts@plt>
   0x55555555578f <+++info symbol 0x55555555578f
test1+0091> mov    eax, 0x0
   0x555555555794 <+++info symbol 0x555555555794
test1+0096> jmp    0x5555555557e9 <test1+235>
 → 0x555555555796 <++++info symbol 0x555555555796
test1+0098> mov    rax, QWORD PTR [rbp-0x8]
   0x55555555579a <+++info symbol 0x55555555579a
test1+009c> mov    rsi, rax
   0x55555555579d <+++info symbol 0x55555555579d
test1+009f> lea    rax, [rip+0x28dc]        # 0x555555558080 <head>
   0x5555555557a4 <+++info symbol 0x5555555557a4
test1+00a6> mov    rdi, rax
   0x5555555557a7 <+++info symbol 0x5555555557a7
test1+00a9> call   0x555555555add <del_node>
   0x5555555557ac <+++info symbol 0x5555555557ac
test1+00ae> mov    rax, QWORD PTR [rip+0x28cd]        # 0x555555558080 <head>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+208 ────
    203	     printf("FAILED (list contains wrong information)\n");
    204	     return 0;
    205	   }
    206	 
    207	   // remove it and then check that it's empty.
           // st=0x00007fffffffdbd8  →  [...]  →  [loop detected]
 →  208	   del_node(&head, &st->node);
    209	   if(!IS_EMPTY(head)) {
    210	     printf("FAILED (list is still not empty after delete)\n");
    211	     return 0;
    212	   }
    213	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555796 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555796 → test1()
[#1] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x00005555555592a0  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555796  →  <++++info symbol 0x555555555796
test1+0098> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x0               
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559700  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x00005555555555f9  →  <++++info symbol 0x5555555555f9
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555578a <+++info symbol 0x55555555578a
test1+008c> call   0x5555555550e0 <puts@plt>
   0x55555555578f <+++info symbol 0x55555555578f
test1+0091> mov    eax, 0x0
   0x555555555794 <+++info symbol 0x555555555794
test1+0096> jmp    0x5555555557e9 <test1+235>
 → 0x555555555796 <++++info symbol 0x555555555796
test1+0098> mov    rax, QWORD PTR [rbp-0x8]
   0x55555555579a <+++info symbol 0x55555555579a
test1+009c> mov    rsi, rax
   0x55555555579d <+++info symbol 0x55555555579d
test1+009f> lea    rax, [rip+0x28dc]        # 0x555555558080 <head>
   0x5555555557a4 <+++info symbol 0x5555555557a4
test1+00a6> mov    rdi, rax
   0x5555555557a7 <+++info symbol 0x5555555557a7
test1+00a9> call   0x555555555add <del_node>
   0x5555555557ac <+++info symbol 0x5555555557ac
test1+00ae> mov    rax, QWORD PTR [rip+0x28cd]        # 0x555555558080 <head>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+208 ────
    203	     printf("FAILED (list contains wrong information)\n");
    204	     return 0;
    205	   }
    206	 
    207	   // remove it and then check that it's empty.
           // st=0x00007fffffffdbd8  →  [...]  →  [loop detected]
 →  208	   del_node(&head, &st->node);
    209	   if(!IS_EMPTY(head)) {
    210	     printf("FAILED (list is still not empty after delete)\n");
    211	     return 0;
    212	   }
    213	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555796 in test1 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555796 → test1()
[#1] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
del_node (head=0x555555558080 <head>, node=0x5555555592a0) at sllist.c:54
54	  struct list_node *p = head, *n = head->next;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x00005555555592a0  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x00005555555592a0  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555aed  →  <++++info symbol 0x555555555aed
del_node+0010> mov rax, QWORD PTR [rbp-0x18]
$r8    : 0x0               
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559700  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbc8│+0x0008: 0x00005555555557ac  →  <++++info symbol 0x5555555557ac
test1+00ae> mov rax, QWORD PTR [rip+0x28cd]        # 0x555555558080 <head>
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbe8│+0x0028: 0x00005555555555f9  →  <++++info symbol 0x5555555555f9
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555ae2 <+++info symbol 0x555555555ae2
del_node+0005> mov    rbp, rsp
   0x555555555ae5 <+++info symbol 0x555555555ae5
del_node+0008> mov    QWORD PTR [rbp-0x18], rdi
   0x555555555ae9 <+++info symbol 0x555555555ae9
del_node+000c> mov    QWORD PTR [rbp-0x20], rsi
 → 0x555555555aed <++++info symbol 0x555555555aed
del_node+0010> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555af1 <+++info symbol 0x555555555af1
del_node+0014> mov    QWORD PTR [rbp-0x8], rax
   0x555555555af5 <+++info symbol 0x555555555af5
del_node+0018> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555af9 <+++info symbol 0x555555555af9
del_node+001c> mov    rax, QWORD PTR [rax]
   0x555555555afc <+++info symbol 0x555555555afc
del_node+001f> mov    QWORD PTR [rbp-0x10], rax
   0x555555555b00 <+++info symbol 0x555555555b00
del_node+0023> jmp    0x555555555b15 <del_node+56>
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+54 ────
     49	 }
     50	 
     51	 // delete a node
     52	 void del_node(struct list_node *head, struct list_node *node)
     53	 {
           // head=0x00007fffffffdba8  →  [...]  →  [loop detected], p=0x00007fffffffdbb8  →  [...]  →  [loop detected], n=0x00007fffffffdbb0  →  [...]  →  [loop detected]
 →   54	   struct list_node *p = head, *n = head->next;
     55	 
     56	   // find the node
     57	   while(n != node && n != head) {
     58	     p = n;
     59	     n = n->next;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555aed in del_node (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555aed → del_node(head=0x555555558080 <head>, node=0x5555555592a0)
[#1] 0x5555555557ac → test1()
[#2] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x00005555555592a0  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x00005555555592a0  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555aed  →  <++++info symbol 0x555555555aed
del_node+0010> mov rax, QWORD PTR [rbp-0x18]
$r8    : 0x0               
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559700  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbc8│+0x0008: 0x00005555555557ac  →  <++++info symbol 0x5555555557ac
test1+00ae> mov rax, QWORD PTR [rip+0x28cd]        # 0x555555558080 <head>
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbe8│+0x0028: 0x00005555555555f9  →  <++++info symbol 0x5555555555f9
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555ae2 <+++info symbol 0x555555555ae2
del_node+0005> mov    rbp, rsp
   0x555555555ae5 <+++info symbol 0x555555555ae5
del_node+0008> mov    QWORD PTR [rbp-0x18], rdi
   0x555555555ae9 <+++info symbol 0x555555555ae9
del_node+000c> mov    QWORD PTR [rbp-0x20], rsi
 → 0x555555555aed <++++info symbol 0x555555555aed
del_node+0010> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555af1 <+++info symbol 0x555555555af1
del_node+0014> mov    QWORD PTR [rbp-0x8], rax
   0x555555555af5 <+++info symbol 0x555555555af5
del_node+0018> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555af9 <+++info symbol 0x555555555af9
del_node+001c> mov    rax, QWORD PTR [rax]
   0x555555555afc <+++info symbol 0x555555555afc
del_node+001f> mov    QWORD PTR [rbp-0x10], rax
   0x555555555b00 <+++info symbol 0x555555555b00
del_node+0023> jmp    0x555555555b15 <del_node+56>
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+54 ────
     49	 }
     50	 
     51	 // delete a node
     52	 void del_node(struct list_node *head, struct list_node *node)
     53	 {
           // head=0x00007fffffffdba8  →  [...]  →  [loop detected], p=0x00007fffffffdbb8  →  [...]  →  [loop detected], n=0x00007fffffffdbb0  →  [...]  →  [loop detected]
 →   54	   struct list_node *p = head, *n = head->next;
     55	 
     56	   // find the node
     57	   while(n != node && n != head) {
     58	     p = n;
     59	     n = n->next;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555aed in del_node (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555aed → del_node(head=0x555555558080 <head>, node=0x5555555592a0)
[#1] 0x5555555557ac → test1()
[#2] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
57	  while(n != node && n != head) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x00005555555592a0  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555b00  →  <++++info symbol 0x555555555b00
del_node+0023> jmp 0x555555555b15 <del_node+56>
$r8    : 0x0               
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559700  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbc8│+0x0008: 0x00005555555557ac  →  <++++info symbol 0x5555555557ac
test1+00ae> mov rax, QWORD PTR [rip+0x28cd]        # 0x555555558080 <head>
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbe8│+0x0028: 0x00005555555555f9  →  <++++info symbol 0x5555555555f9
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555af5 <+++info symbol 0x555555555af5
del_node+0018> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555af9 <+++info symbol 0x555555555af9
del_node+001c> mov    rax, QWORD PTR [rax]
   0x555555555afc <+++info symbol 0x555555555afc
del_node+001f> mov    QWORD PTR [rbp-0x10], rax
 → 0x555555555b00 <++++info symbol 0x555555555b00
del_node+0023> jmp    0x555555555b15 <del_node+56>
   0x555555555b02 <+++info symbol 0x555555555b02
del_node+0025> mov    rax, QWORD PTR [rbp-0x10]
   0x555555555b06 <+++info symbol 0x555555555b06
del_node+0029> mov    QWORD PTR [rbp-0x8], rax
   0x555555555b0a <+++info symbol 0x555555555b0a
del_node+002d> mov    rax, QWORD PTR [rbp-0x10]
   0x555555555b0e <+++info symbol 0x555555555b0e
del_node+0031> mov    rax, QWORD PTR [rax]
   0x555555555b11 <+++info symbol 0x555555555b11
del_node+0034> mov    QWORD PTR [rbp-0x10], rax
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+57 ────
     52	 void del_node(struct list_node *head, struct list_node *node)
     53	 {
     54	   struct list_node *p = head, *n = head->next;
     55	 
     56	   // find the node
           // head=0x00007fffffffdba8  →  [...]  →  [loop detected], node=0x00007fffffffdba0  →  [...]  →  [loop detected], n=0x00007fffffffdbb0  →  [...]  →  [loop detected]
 →   57	   while(n != node && n != head) {
     58	     p = n;
     59	     n = n->next;
     60	   }
     61	 
     62	   // empty!
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555b00 in del_node (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555b00 → del_node(head=0x555555558080 <head>, node=0x5555555592a0)
[#1] 0x5555555557ac → test1()
[#2] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x00005555555592a0  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555b00  →  <++++info symbol 0x555555555b00
del_node+0023> jmp 0x555555555b15 <del_node+56>
$r8    : 0x0               
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559700  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbc8│+0x0008: 0x00005555555557ac  →  <++++info symbol 0x5555555557ac
test1+00ae> mov rax, QWORD PTR [rip+0x28cd]        # 0x555555558080 <head>
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbe8│+0x0028: 0x00005555555555f9  →  <++++info symbol 0x5555555555f9
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555af5 <+++info symbol 0x555555555af5
del_node+0018> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555af9 <+++info symbol 0x555555555af9
del_node+001c> mov    rax, QWORD PTR [rax]
   0x555555555afc <+++info symbol 0x555555555afc
del_node+001f> mov    QWORD PTR [rbp-0x10], rax
 → 0x555555555b00 <++++info symbol 0x555555555b00
del_node+0023> jmp    0x555555555b15 <del_node+56>
   0x555555555b02 <+++info symbol 0x555555555b02
del_node+0025> mov    rax, QWORD PTR [rbp-0x10]
   0x555555555b06 <+++info symbol 0x555555555b06
del_node+0029> mov    QWORD PTR [rbp-0x8], rax
   0x555555555b0a <+++info symbol 0x555555555b0a
del_node+002d> mov    rax, QWORD PTR [rbp-0x10]
   0x555555555b0e <+++info symbol 0x555555555b0e
del_node+0031> mov    rax, QWORD PTR [rax]
   0x555555555b11 <+++info symbol 0x555555555b11
del_node+0034> mov    QWORD PTR [rbp-0x10], rax
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+57 ────
     52	 void del_node(struct list_node *head, struct list_node *node)
     53	 {
     54	   struct list_node *p = head, *n = head->next;
     55	 
     56	   // find the node
           // head=0x00007fffffffdba8  →  [...]  →  [loop detected], node=0x00007fffffffdba0  →  [...]  →  [loop detected], n=0x00007fffffffdbb0  →  [...]  →  [loop detected]
 →   57	   while(n != node && n != head) {
     58	     p = n;
     59	     n = n->next;
     60	   }
     61	 
     62	   // empty!
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555b00 in del_node (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555b00 → del_node(head=0x555555558080 <head>, node=0x5555555592a0)
[#1] 0x5555555557ac → test1()
[#2] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
63	  if(n == head) return;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x00005555555592a0  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555b29  →  <++++info symbol 0x555555555b29
del_node+004c> mov rax, QWORD PTR [rbp-0x10]
$r8    : 0x0               
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559700  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbc8│+0x0008: 0x00005555555557ac  →  <++++info symbol 0x5555555557ac
test1+00ae> mov rax, QWORD PTR [rip+0x28cd]        # 0x555555558080 <head>
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbe8│+0x0028: 0x00005555555555f9  →  <++++info symbol 0x5555555555f9
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555b1f <+++info symbol 0x555555555b1f
del_node+0042> mov    rax, QWORD PTR [rbp-0x10]
   0x555555555b23 <+++info symbol 0x555555555b23
del_node+0046> cmp    rax, QWORD PTR [rbp-0x18]
   0x555555555b27 <+++info symbol 0x555555555b27
del_node+004a> jne    0x555555555b02 <del_node+37>
 → 0x555555555b29 <++++info symbol 0x555555555b29
del_node+004c> mov    rax, QWORD PTR [rbp-0x10]
   0x555555555b2d <+++info symbol 0x555555555b2d
del_node+0050> cmp    rax, QWORD PTR [rbp-0x18]
   0x555555555b31 <+++info symbol 0x555555555b31
del_node+0054> pop    rbp
   0x555555555b32 <+++info symbol 0x555555555b32
del_node+0055> ret    
   0x555555555b33 <+++info symbol 0x555555555b33
print_list+0000> endbr64 
   0x555555555b37 <+++info symbol 0x555555555b37
print_list+0004> push   rbp
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+63 ────
     58	     p = n;
     59	     n = n->next;
     60	   }
     61	 
     62	   // empty!
           // head=0x00007fffffffdba8  →  [...]  →  [loop detected], n=0x00007fffffffdbb0  →  [...]  →  [loop detected]
 →   63	   if(n == head) return;
     64	 }
     65	 
     66	 // print the list
     67	 void print_list(struct list_node *head, void (*print_fn)(struct list_node *))
     68	 {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555b29 in del_node (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555b29 → del_node(head=0x555555558080 <head>, node=0x5555555592a0)
[#1] 0x5555555557ac → test1()
[#2] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x000055555555610e  →  0x44454c4941460000
$rdx   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x00005555555592a0  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555b29  →  <++++info symbol 0x555555555b29
del_node+004c> mov rax, QWORD PTR [rbp-0x10]
$r8    : 0x0               
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): "
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559700  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbc8│+0x0008: 0x00005555555557ac  →  <++++info symbol 0x5555555557ac
test1+00ae> mov rax, QWORD PTR [rip+0x28cd]        # 0x555555558080 <head>
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0x00005555555592a0  →  0x0000555555558080  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbe8│+0x0028: 0x00005555555555f9  →  <++++info symbol 0x5555555555f9
main+0280> test eax, eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555b1f <+++info symbol 0x555555555b1f
del_node+0042> mov    rax, QWORD PTR [rbp-0x10]
   0x555555555b23 <+++info symbol 0x555555555b23
del_node+0046> cmp    rax, QWORD PTR [rbp-0x18]
   0x555555555b27 <+++info symbol 0x555555555b27
del_node+004a> jne    0x555555555b02 <del_node+37>
 → 0x555555555b29 <++++info symbol 0x555555555b29
del_node+004c> mov    rax, QWORD PTR [rbp-0x10]
   0x555555555b2d <+++info symbol 0x555555555b2d
del_node+0050> cmp    rax, QWORD PTR [rbp-0x18]
   0x555555555b31 <+++info symbol 0x555555555b31
del_node+0054> pop    rbp
   0x555555555b32 <+++info symbol 0x555555555b32
del_node+0055> ret    
   0x555555555b33 <+++info symbol 0x555555555b33
print_list+0000> endbr64 
   0x555555555b37 <+++info symbol 0x555555555b37
print_list+0004> push   rbp
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+63 ────
     58	     p = n;
     59	     n = n->next;
     60	   }
     61	 
     62	   // empty!
           // head=0x00007fffffffdba8  →  [...]  →  [loop detected], n=0x00007fffffffdbb0  →  [...]  →  [loop detected]
 →   63	   if(n == head) return;
     64	 }
     65	 
     66	 // print the list
     67	 void print_list(struct list_node *head, void (*print_fn)(struct list_node *))
     68	 {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555b29 in del_node (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555b29 → del_node(head=0x555555558080 <head>, node=0x5555555592a0)
[#1] 0x5555555557ac → test1()
[#2] 0x5555555555f9 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+info local
p = 0x555555558080 <head>
n = 0x5555555592a0
+p *p@2
$1 = {{
    next = 0x5555555592a0
  }, {
    next = 0x0
  }}
+p *n@2
$2 = {{
    next = 0x555555558080 <head>
  }, {
    next = 0x5555555592e0
  }}
+quit
+source ~/.gef/gef.py
++set confirm off
++set verbose off
++set pagination off
++set print elements 0
++set history save on
++set history filename ~/.gdb_history
++set output-radix 0x10
++set print pretty on
++set disassembly-flavor intel
++handle SIGALRM print nopass
++save gdb-index '/tmp/gef'
GEF for linux ready, type `gef' to start, `gef config' to configure
93 commands loaded and 5 functions added for GDB 12.1 in 0.00ms using Python engine 3.10
++define target hookpost-remote
++define target hookpost-extended-remote
++define hookpost-source
++pi gef.gdb.load()
Reading symbols from ./student.bin...
+b main
Breakpoint 1 at 0x138c: file student.c, line 107.
+run
Starting program: /home/liub5/CSSE332-lab-liub5/debug/student.bin 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=0x1, argv=0x7fffffffdd28) at student.c:107
107	  init_node(&head);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x000055555555538c  →  <++++info symbol 0x55555555538c
main+0013> lea rax, [rip+0x2ced]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555381 <+++info symbol 0x555555555381
main+0008> sub    rsp, 0x20
   0x555555555385 <+++info symbol 0x555555555385
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555388 <+++info symbol 0x555555555388
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x55555555538c <++++info symbol 0x55555555538c
main+0013> lea    rax, [rip+0x2ced]        # 0x555555558080 <head>
   0x555555555393 <+++info symbol 0x555555555393
main+001a> mov    rdi, rax
   0x555555555396 <+++info symbol 0x555555555396
main+001d> call   0x555555555a43 <init_node>
   0x55555555539b <+++info symbol 0x55555555539b
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555539f <+++info symbol 0x55555555539f
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x5555555553a2 <+++info symbol 0x5555555553a2
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+107 ────
    102	 
    103	 int main(int argc, char **argv) {
    104	   int i, j, num_tests;
    105	 
    106	   // 1. Init the head
 →  107	   init_node(&head);
    108	 
    109	   // 2. Get which test to run.
    110	   num_tests = parse_args(argc, argv);
    111	 
    112	   switch(num_tests) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555538c in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555538c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x000055555555538c  →  <++++info symbol 0x55555555538c
main+0013> lea rax, [rip+0x2ced]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555381 <+++info symbol 0x555555555381
main+0008> sub    rsp, 0x20
   0x555555555385 <+++info symbol 0x555555555385
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555388 <+++info symbol 0x555555555388
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x55555555538c <++++info symbol 0x55555555538c
main+0013> lea    rax, [rip+0x2ced]        # 0x555555558080 <head>
   0x555555555393 <+++info symbol 0x555555555393
main+001a> mov    rdi, rax
   0x555555555396 <+++info symbol 0x555555555396
main+001d> call   0x555555555a43 <init_node>
   0x55555555539b <+++info symbol 0x55555555539b
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555539f <+++info symbol 0x55555555539f
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x5555555553a2 <+++info symbol 0x5555555553a2
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+107 ────
    102	 
    103	 int main(int argc, char **argv) {
    104	   int i, j, num_tests;
    105	 
    106	   // 1. Init the head
 →  107	   init_node(&head);
    108	 
    109	   // 2. Get which test to run.
    110	   num_tests = parse_args(argc, argv);
    111	 
    112	   switch(num_tests) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555538c in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555538c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
110	  num_tests = parse_args(argc, argv);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x000055555555539b  →  <++++info symbol 0x55555555539b
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555538c <+++info symbol 0x55555555538c
main+0013> lea    rax, [rip+0x2ced]        # 0x555555558080 <head>
   0x555555555393 <+++info symbol 0x555555555393
main+001a> mov    rdi, rax
   0x555555555396 <+++info symbol 0x555555555396
main+001d> call   0x555555555a43 <init_node>
 → 0x55555555539b <++++info symbol 0x55555555539b
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555539f <+++info symbol 0x55555555539f
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x5555555553a2 <+++info symbol 0x5555555553a2
main+0029> mov    rsi, rdx
   0x5555555553a5 <+++info symbol 0x5555555553a5
main+002c> mov    edi, eax
   0x5555555553a7 <+++info symbol 0x5555555553a7
main+002e> call   0x555555555641 <parse_args>
   0x5555555553ac <+++info symbol 0x5555555553ac
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+110 ────
    105	 
    106	   // 1. Init the head
    107	   init_node(&head);
    108	 
    109	   // 2. Get which test to run.
           // argc=0x1, argv=0x00007fffffffdbf0  →  [...]  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin", num_tests=0x5555
 →  110	   num_tests = parse_args(argc, argv);
    111	 
    112	   switch(num_tests) {
    113	     case 0:
    114	       // Allocate nodes and set the grades.
    115	       for(i = 0; i < NUM_STUDENTS; i++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539b in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539b → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x000055555555539b  →  <++++info symbol 0x55555555539b
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555538c <+++info symbol 0x55555555538c
main+0013> lea    rax, [rip+0x2ced]        # 0x555555558080 <head>
   0x555555555393 <+++info symbol 0x555555555393
main+001a> mov    rdi, rax
   0x555555555396 <+++info symbol 0x555555555396
main+001d> call   0x555555555a43 <init_node>
 → 0x55555555539b <++++info symbol 0x55555555539b
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555539f <+++info symbol 0x55555555539f
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x5555555553a2 <+++info symbol 0x5555555553a2
main+0029> mov    rsi, rdx
   0x5555555553a5 <+++info symbol 0x5555555553a5
main+002c> mov    edi, eax
   0x5555555553a7 <+++info symbol 0x5555555553a7
main+002e> call   0x555555555641 <parse_args>
   0x5555555553ac <+++info symbol 0x5555555553ac
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+110 ────
    105	 
    106	   // 1. Init the head
    107	   init_node(&head);
    108	 
    109	   // 2. Get which test to run.
           // argc=0x1, argv=0x00007fffffffdbf0  →  [...]  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin", num_tests=0x5555
 →  110	   num_tests = parse_args(argc, argv);
    111	 
    112	   switch(num_tests) {
    113	     case 0:
    114	       // Allocate nodes and set the grades.
    115	       for(i = 0; i < NUM_STUDENTS; i++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539b in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539b → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
112	  switch(num_tests) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555553af  →  <++++info symbol 0x5555555553af
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553a5 <+++info symbol 0x5555555553a5
main+002c> mov    edi, eax
   0x5555555553a7 <+++info symbol 0x5555555553a7
main+002e> call   0x555555555641 <parse_args>
   0x5555555553ac <+++info symbol 0x5555555553ac
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x5555555553af <++++info symbol 0x5555555553af
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553b3 <+++info symbol 0x5555555553b3
main+003a> je     0x5555555555e1 <main+616>
   0x5555555553b9 <+++info symbol 0x5555555553b9
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553bd <+++info symbol 0x5555555553bd
main+0044> jg     0x5555555555f4 <main+635>
   0x5555555553c3 <+++info symbol 0x5555555553c3
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553c7 <+++info symbol 0x5555555553c7
main+004e> je     0x5555555555ce <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+112 ────
    107	   init_node(&head);
    108	 
    109	   // 2. Get which test to run.
    110	   num_tests = parse_args(argc, argv);
    111	 
           // num_tests=-0x1
 →  112	   switch(num_tests) {
    113	     case 0:
    114	       // Allocate nodes and set the grades.
    115	       for(i = 0; i < NUM_STUDENTS; i++) {
    116	         students[i] = alloc_student(names[i]);
    117	         for(j = 0; j < NUM_EXAMS; j++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555553af in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553af → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555553af  →  <++++info symbol 0x5555555553af
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553a5 <+++info symbol 0x5555555553a5
main+002c> mov    edi, eax
   0x5555555553a7 <+++info symbol 0x5555555553a7
main+002e> call   0x555555555641 <parse_args>
   0x5555555553ac <+++info symbol 0x5555555553ac
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x5555555553af <++++info symbol 0x5555555553af
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553b3 <+++info symbol 0x5555555553b3
main+003a> je     0x5555555555e1 <main+616>
   0x5555555553b9 <+++info symbol 0x5555555553b9
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553bd <+++info symbol 0x5555555553bd
main+0044> jg     0x5555555555f4 <main+635>
   0x5555555553c3 <+++info symbol 0x5555555553c3
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553c7 <+++info symbol 0x5555555553c7
main+004e> je     0x5555555555ce <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+112 ────
    107	   init_node(&head);
    108	 
    109	   // 2. Get which test to run.
    110	   num_tests = parse_args(argc, argv);
    111	 
           // num_tests=-0x1
 →  112	   switch(num_tests) {
    113	     case 0:
    114	       // Allocate nodes and set the grades.
    115	       for(i = 0; i < NUM_STUDENTS; i++) {
    116	         students[i] = alloc_student(names[i]);
    117	         for(j = 0; j < NUM_EXAMS; j++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555553af in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553af → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
152	      if(!test1()) exit(EXIT_FAILURE);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555f4  →  <++++info symbol 0x5555555555f4
main+027b> call 0x5555555556fe <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555e8 <+++info symbol 0x5555555555e8
main+026f> jne    0x555555555633 <main+698>
   0x5555555555ea <+++info symbol 0x5555555555ea
main+0271> mov    edi, 0x1
   0x5555555555ef <+++info symbol 0x5555555555ef
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555f4 <++++info symbol 0x5555555555f4
main+027b> call   0x5555555556fe <test1>
   ↳  0x5555555556fe <+++info symbol 0x5555555556fe
test1+0000> endbr64 
      0x555555555702 <+++info symbol 0x555555555702
test1+0004> push   rbp
      0x555555555703 <+++info symbol 0x555555555703
test1+0005> mov    rbp, rsp
      0x555555555706 <+++info symbol 0x555555555706
test1+0008> sub    rsp, 0x10
      0x55555555570a <+++info symbol 0x55555555570a
test1+000c> lea    rax, [rip+0x8f7]        # 0x555555556008
      0x555555555711 <+++info symbol 0x555555555711
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+152 ────
    147	     case 3:
    148	       if(!test3()) exit(EXIT_FAILURE);
    149	       break;
    150	     case -1:
    151	     default:
 →  152	       if(!test1()) exit(EXIT_FAILURE);
    153	       if(!test2()) exit(EXIT_FAILURE);
    154	       if(!test3()) exit(EXIT_FAILURE);
    155	       break;
    156	   }
    157	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555f4 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555f4 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555f4  →  <++++info symbol 0x5555555555f4
main+027b> call 0x5555555556fe <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555e8 <+++info symbol 0x5555555555e8
main+026f> jne    0x555555555633 <main+698>
   0x5555555555ea <+++info symbol 0x5555555555ea
main+0271> mov    edi, 0x1
   0x5555555555ef <+++info symbol 0x5555555555ef
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555f4 <++++info symbol 0x5555555555f4
main+027b> call   0x5555555556fe <test1>
   ↳  0x5555555556fe <+++info symbol 0x5555555556fe
test1+0000> endbr64 
      0x555555555702 <+++info symbol 0x555555555702
test1+0004> push   rbp
      0x555555555703 <+++info symbol 0x555555555703
test1+0005> mov    rbp, rsp
      0x555555555706 <+++info symbol 0x555555555706
test1+0008> sub    rsp, 0x10
      0x55555555570a <+++info symbol 0x55555555570a
test1+000c> lea    rax, [rip+0x8f7]        # 0x555555556008
      0x555555555711 <+++info symbol 0x555555555711
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+152 ────
    147	     case 3:
    148	       if(!test3()) exit(EXIT_FAILURE);
    149	       break;
    150	     case -1:
    151	     default:
 →  152	       if(!test1()) exit(EXIT_FAILURE);
    153	       if(!test2()) exit(EXIT_FAILURE);
    154	       if(!test3()) exit(EXIT_FAILURE);
    155	       break;
    156	   }
    157	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555f4 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555f4 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
153	      if(!test2()) exit(EXIT_FAILURE);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x0000555555555607  →  <++++info symbol 0x555555555607
main+028e> call 0x5555555557eb <test2>
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): OK.\n"
$r10   : 0x77              
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555fb <+++info symbol 0x5555555555fb
main+0282> jne    0x555555555607 <main+654>
   0x5555555555fd <+++info symbol 0x5555555555fd
main+0284> mov    edi, 0x1
   0x555555555602 <+++info symbol 0x555555555602
main+0289> call   0x555555555150 <exit@plt>
 → 0x555555555607 <++++info symbol 0x555555555607
main+028e> call   0x5555555557eb <test2>
   ↳  0x5555555557eb <+++info symbol 0x5555555557eb
test2+0000> endbr64 
      0x5555555557ef <+++info symbol 0x5555555557ef
test2+0004> push   rbp
      0x5555555557f0 <+++info symbol 0x5555555557f0
test2+0005> mov    rbp, rsp
      0x5555555557f3 <+++info symbol 0x5555555557f3
test2+0008> sub    rsp, 0x10
      0x5555555557f7 <+++info symbol 0x5555555557f7
test2+000c> lea    rax, [rip+0x80a]        # 0x555555556008
      0x5555555557fe <+++info symbol 0x5555555557fe
test2+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test2 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+153 ────
    148	       if(!test3()) exit(EXIT_FAILURE);
    149	       break;
    150	     case -1:
    151	     default:
    152	       if(!test1()) exit(EXIT_FAILURE);
 →  153	       if(!test2()) exit(EXIT_FAILURE);
    154	       if(!test3()) exit(EXIT_FAILURE);
    155	       break;
    156	   }
    157	 
    158	   exit(EXIT_SUCCESS);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555607 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555607 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x0000555555555607  →  <++++info symbol 0x555555555607
main+028e> call 0x5555555557eb <test2>
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): OK.\n"
$r10   : 0x77              
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555fb <+++info symbol 0x5555555555fb
main+0282> jne    0x555555555607 <main+654>
   0x5555555555fd <+++info symbol 0x5555555555fd
main+0284> mov    edi, 0x1
   0x555555555602 <+++info symbol 0x555555555602
main+0289> call   0x555555555150 <exit@plt>
 → 0x555555555607 <++++info symbol 0x555555555607
main+028e> call   0x5555555557eb <test2>
   ↳  0x5555555557eb <+++info symbol 0x5555555557eb
test2+0000> endbr64 
      0x5555555557ef <+++info symbol 0x5555555557ef
test2+0004> push   rbp
      0x5555555557f0 <+++info symbol 0x5555555557f0
test2+0005> mov    rbp, rsp
      0x5555555557f3 <+++info symbol 0x5555555557f3
test2+0008> sub    rsp, 0x10
      0x5555555557f7 <+++info symbol 0x5555555557f7
test2+000c> lea    rax, [rip+0x80a]        # 0x555555556008
      0x5555555557fe <+++info symbol 0x5555555557fe
test2+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test2 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+153 ────
    148	       if(!test3()) exit(EXIT_FAILURE);
    149	       break;
    150	     case -1:
    151	     default:
    152	       if(!test1()) exit(EXIT_FAILURE);
 →  153	       if(!test2()) exit(EXIT_FAILURE);
    154	       if(!test3()) exit(EXIT_FAILURE);
    155	       break;
    156	   }
    157	 
    158	   exit(EXIT_SUCCESS);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555607 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555607 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
test2 () at student.c:219
219	  struct student *st = alloc_student("Mohammad");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x00005555555557f7  →  <++++info symbol 0x5555555557f7
test2+000c> lea rax, [rip+0x80a]        # 0x555555556008
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): OK.\n"
$r10   : 0x77              
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x000055555555560c  →  <++++info symbol 0x55555555560c
main+0293> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555557ef <+++info symbol 0x5555555557ef
test2+0004> push   rbp
   0x5555555557f0 <+++info symbol 0x5555555557f0
test2+0005> mov    rbp, rsp
   0x5555555557f3 <+++info symbol 0x5555555557f3
test2+0008> sub    rsp, 0x10
 → 0x5555555557f7 <++++info symbol 0x5555555557f7
test2+000c> lea    rax, [rip+0x80a]        # 0x555555556008
   0x5555555557fe <+++info symbol 0x5555555557fe
test2+0013> mov    rdi, rax
   0x555555555801 <+++info symbol 0x555555555801
test2+0016> call   0x555555555249 <alloc_student>
   0x555555555806 <+++info symbol 0x555555555806
test2+001b> mov    QWORD PTR [rbp-0x8], rax
   0x55555555580a <+++info symbol 0x55555555580a
test2+001f> lea    rax, [rip+0x991]        # 0x5555555561a2
   0x555555555811 <+++info symbol 0x555555555811
test2+0026> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+219 ────
    214	   printf("OK.\n");
    215	   return 1;
    216	 }
    217	 
    218	 int test2(void) {
           // st=0x00007fffffffdbd8  →  [...]  →  [loop detected]
 →  219	   struct student *st = alloc_student("Mohammad");
    220	 
    221	   // This test1 just tests adding at the head and then deleting.
    222	   printf("Test 2 (simple add_tail): ");
    223	   add_tail(&head, &st->node);
    224	   if(IS_EMPTY(head)) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555557f7 in test2 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555557f7 → test2()
[#1] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x00005555555557f7  →  <++++info symbol 0x5555555557f7
test2+000c> lea rax, [rip+0x80a]        # 0x555555556008
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): OK.\n"
$r10   : 0x77              
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x000055555555560c  →  <++++info symbol 0x55555555560c
main+0293> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555557ef <+++info symbol 0x5555555557ef
test2+0004> push   rbp
   0x5555555557f0 <+++info symbol 0x5555555557f0
test2+0005> mov    rbp, rsp
   0x5555555557f3 <+++info symbol 0x5555555557f3
test2+0008> sub    rsp, 0x10
 → 0x5555555557f7 <++++info symbol 0x5555555557f7
test2+000c> lea    rax, [rip+0x80a]        # 0x555555556008
   0x5555555557fe <+++info symbol 0x5555555557fe
test2+0013> mov    rdi, rax
   0x555555555801 <+++info symbol 0x555555555801
test2+0016> call   0x555555555249 <alloc_student>
   0x555555555806 <+++info symbol 0x555555555806
test2+001b> mov    QWORD PTR [rbp-0x8], rax
   0x55555555580a <+++info symbol 0x55555555580a
test2+001f> lea    rax, [rip+0x991]        # 0x5555555561a2
   0x555555555811 <+++info symbol 0x555555555811
test2+0026> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+219 ────
    214	   printf("OK.\n");
    215	   return 1;
    216	 }
    217	 
    218	 int test2(void) {
           // st=0x00007fffffffdbd8  →  [...]  →  [loop detected]
 →  219	   struct student *st = alloc_student("Mohammad");
    220	 
    221	   // This test1 just tests adding at the head and then deleting.
    222	   printf("Test 2 (simple add_tail): ");
    223	   add_tail(&head, &st->node);
    224	   if(IS_EMPTY(head)) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555557f7 in test2 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555557f7 → test2()
[#1] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
222	  printf("Test 2 (simple add_tail): ");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x61686f4d        
$rdx   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rip   : 0x000055555555580a  →  <++++info symbol 0x55555555580a
test2+001f> lea rax, [rip+0x991]        # 0x5555555561a2
$r8    : 0x8               
$r9    : 0x0000555555559750  →  "Mohammad"
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559760  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x000055555555560c  →  <++++info symbol 0x55555555560c
main+0293> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555557fe <+++info symbol 0x5555555557fe
test2+0013> mov    rdi, rax
   0x555555555801 <+++info symbol 0x555555555801
test2+0016> call   0x555555555249 <alloc_student>
   0x555555555806 <+++info symbol 0x555555555806
test2+001b> mov    QWORD PTR [rbp-0x8], rax
 → 0x55555555580a <++++info symbol 0x55555555580a
test2+001f> lea    rax, [rip+0x991]        # 0x5555555561a2
   0x555555555811 <+++info symbol 0x555555555811
test2+0026> mov    rdi, rax
   0x555555555814 <+++info symbol 0x555555555814
test2+0029> mov    eax, 0x0
   0x555555555819 <+++info symbol 0x555555555819
test2+002e> call   0x555555555100 <printf@plt>
   0x55555555581e <+++info symbol 0x55555555581e
test2+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555822 <+++info symbol 0x555555555822
test2+0037> mov    rsi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+222 ────
    217	 
    218	 int test2(void) {
    219	   struct student *st = alloc_student("Mohammad");
    220	 
    221	   // This test1 just tests adding at the head and then deleting.
 →  222	   printf("Test 2 (simple add_tail): ");
    223	   add_tail(&head, &st->node);
    224	   if(IS_EMPTY(head)) {
    225	     printf("FAILED (list is still empty after add_tail)\n");
    226	     return 0;
    227	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555580a in test2 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555580a → test2()
[#1] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x61686f4d        
$rdx   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rip   : 0x000055555555580a  →  <++++info symbol 0x55555555580a
test2+001f> lea rax, [rip+0x991]        # 0x5555555561a2
$r8    : 0x8               
$r9    : 0x0000555555559750  →  "Mohammad"
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559760  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x000055555555560c  →  <++++info symbol 0x55555555560c
main+0293> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555557fe <+++info symbol 0x5555555557fe
test2+0013> mov    rdi, rax
   0x555555555801 <+++info symbol 0x555555555801
test2+0016> call   0x555555555249 <alloc_student>
   0x555555555806 <+++info symbol 0x555555555806
test2+001b> mov    QWORD PTR [rbp-0x8], rax
 → 0x55555555580a <++++info symbol 0x55555555580a
test2+001f> lea    rax, [rip+0x991]        # 0x5555555561a2
   0x555555555811 <+++info symbol 0x555555555811
test2+0026> mov    rdi, rax
   0x555555555814 <+++info symbol 0x555555555814
test2+0029> mov    eax, 0x0
   0x555555555819 <+++info symbol 0x555555555819
test2+002e> call   0x555555555100 <printf@plt>
   0x55555555581e <+++info symbol 0x55555555581e
test2+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555822 <+++info symbol 0x555555555822
test2+0037> mov    rsi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+222 ────
    217	 
    218	 int test2(void) {
    219	   struct student *st = alloc_student("Mohammad");
    220	 
    221	   // This test1 just tests adding at the head and then deleting.
 →  222	   printf("Test 2 (simple add_tail): ");
    223	   add_tail(&head, &st->node);
    224	   if(IS_EMPTY(head)) {
    225	     printf("FAILED (list is still empty after add_tail)\n");
    226	     return 0;
    227	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555580a in test2 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555580a → test2()
[#1] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
__printf (format=0x5555555561a2 "Test 2 (simple add_tail): ") at ./stdio-common/printf.c:28
28	./stdio-common/printf.c: No such file or directory.
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc8
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x61686f4d        
$rdx   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rsp   : 0x00007fffffffdbc8  →  0x000055555555581e  →  <++++info symbol 0x55555555581e
test2+0033> mov rax, QWORD PTR [rbp-0x8]
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$rip   : 0x00007ffff7c606f0  →  <++++info symbol 0x7ffff7c606f0
printf+0000> endbr64 
$r8    : 0x8               
$r9    : 0x0000555555559750  →  "Mohammad"
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559760  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc8│+0x0000: 0x000055555555581e  →  <++++info symbol 0x55555555581e
test2+0033> mov rax, QWORD PTR [rbp-0x8]	 ← $rsp
0x00007fffffffdbd0│+0x0008: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0010: 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
0x00007fffffffdbe0│+0x0018: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0020: 0x000055555555560c  →  <++++info symbol 0x55555555560c
main+0293> test eax, eax
0x00007fffffffdbf0│+0x0028: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0030: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0038: 0x0000000000001000
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7c606e1 <+++info symbol 0x7ffff7c606e1
fprintf+00b1> ret    
   0x7ffff7c606e2 <+++info symbol 0x7ffff7c606e2
fprintf+00b2> call   0x7ffff7d36550 <__stack_chk_fail>
   0x7ffff7c606e7 <+++info symbol 0x7ffff7c606e7
No symbol matches 0x7ffff7c606e7.+0000> nop    WORD PTR [rax+rax*1+0x0]
 → 0x7ffff7c606f0 <++++info symbol 0x7ffff7c606f0
printf+0000> endbr64 
   0x7ffff7c606f4 <+++info symbol 0x7ffff7c606f4
printf+0004> sub    rsp, 0xd8
   0x7ffff7c606fb <+++info symbol 0x7ffff7c606fb
printf+000b> mov    r10, rdi
   0x7ffff7c606fe <+++info symbol 0x7ffff7c606fe
printf+000e> mov    QWORD PTR [rsp+0x28], rsi
   0x7ffff7c60703 <+++info symbol 0x7ffff7c60703
printf+0013> mov    QWORD PTR [rsp+0x30], rdx
   0x7ffff7c60708 <+++info symbol 0x7ffff7c60708
printf+0018> mov    QWORD PTR [rsp+0x38], rcx
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x7ffff7c606f0 in __printf (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7c606f0 → __printf(format=0x5555555561a2 "Test 2 (simple add_tail): ")
[#1] 0x55555555581e → test2()
[#2] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc8
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x61686f4d        
$rdx   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rsp   : 0x00007fffffffdbc8  →  0x000055555555581e  →  <++++info symbol 0x55555555581e
test2+0033> mov rax, QWORD PTR [rbp-0x8]
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$rip   : 0x00007ffff7c606f0  →  <++++info symbol 0x7ffff7c606f0
printf+0000> endbr64 
$r8    : 0x8               
$r9    : 0x0000555555559750  →  "Mohammad"
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559760  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc8│+0x0000: 0x000055555555581e  →  <++++info symbol 0x55555555581e
test2+0033> mov rax, QWORD PTR [rbp-0x8]	 ← $rsp
0x00007fffffffdbd0│+0x0008: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0010: 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
0x00007fffffffdbe0│+0x0018: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0020: 0x000055555555560c  →  <++++info symbol 0x55555555560c
main+0293> test eax, eax
0x00007fffffffdbf0│+0x0028: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0030: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0038: 0x0000000000001000
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7c606e1 <+++info symbol 0x7ffff7c606e1
fprintf+00b1> ret    
   0x7ffff7c606e2 <+++info symbol 0x7ffff7c606e2
fprintf+00b2> call   0x7ffff7d36550 <__stack_chk_fail>
   0x7ffff7c606e7 <+++info symbol 0x7ffff7c606e7
No symbol matches 0x7ffff7c606e7.+0000> nop    WORD PTR [rax+rax*1+0x0]
 → 0x7ffff7c606f0 <++++info symbol 0x7ffff7c606f0
printf+0000> endbr64 
   0x7ffff7c606f4 <+++info symbol 0x7ffff7c606f4
printf+0004> sub    rsp, 0xd8
   0x7ffff7c606fb <+++info symbol 0x7ffff7c606fb
printf+000b> mov    r10, rdi
   0x7ffff7c606fe <+++info symbol 0x7ffff7c606fe
printf+000e> mov    QWORD PTR [rsp+0x28], rsi
   0x7ffff7c60703 <+++info symbol 0x7ffff7c60703
printf+0013> mov    QWORD PTR [rsp+0x30], rdx
   0x7ffff7c60708 <+++info symbol 0x7ffff7c60708
printf+0018> mov    QWORD PTR [rsp+0x38], rcx
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x7ffff7c606f0 in __printf (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7c606f0 → __printf(format=0x5555555561a2 "Test 2 (simple add_tail): ")
[#1] 0x55555555581e → test2()
[#2] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
32	in ./stdio-common/printf.c
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdaf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x61686f4d        
$rdx   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rsp   : 0x00007fffffffdaf0  →  0x0000000000000000
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$rip   : 0x00007ffff7c60762  →  <++++info symbol 0x7ffff7c60762
printf+0072> lea rax, [rsp+0xe0]
$r8    : 0x8               
$r9    : 0x0000555555559750  →  "Mohammad"
$r10   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559760  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdaf0│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdaf8│+0x0008: 0x0000000000000000
0x00007fffffffdb00│+0x0010: 0x0000000000000000
0x00007fffffffdb08│+0x0018: 0x417e82e7d8190600
0x00007fffffffdb10│+0x0020: 0x0000005b0000006e ("n"?)
0x00007fffffffdb18│+0x0028: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdb20│+0x0030: 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
0x00007fffffffdb28│+0x0038: 0x0000000061686f4d ("Moha"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7c60752 <+++info symbol 0x7ffff7c60752
printf+0062> mov    rax, QWORD PTR fs:0x28
   0x7ffff7c6075b <+++info symbol 0x7ffff7c6075b
printf+006b> mov    QWORD PTR [rsp+0x18], rax
   0x7ffff7c60760 <+++info symbol 0x7ffff7c60760
printf+0070> xor    eax, eax
 → 0x7ffff7c60762 <++++info symbol 0x7ffff7c60762
printf+0072> lea    rax, [rsp+0xe0]
   0x7ffff7c6076a <+++info symbol 0x7ffff7c6076a
printf+007a> mov    rdx, rsp
   0x7ffff7c6076d <+++info symbol 0x7ffff7c6076d
printf+007d> xor    ecx, ecx
   0x7ffff7c6076f <+++info symbol 0x7ffff7c6076f
printf+007f> mov    QWORD PTR [rsp+0x8], rax
   0x7ffff7c60774 <+++info symbol 0x7ffff7c60774
printf+0084> lea    rax, [rsp+0x20]
   0x7ffff7c60779 <+++info symbol 0x7ffff7c60779
printf+0089> mov    rsi, r10
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x7ffff7c60762 in __printf (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7c60762 → __printf(format=0x5555555561a2 "Test 2 (simple add_tail): ")
[#1] 0x55555555581e → test2()
[#2] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdaf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x61686f4d        
$rdx   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rsp   : 0x00007fffffffdaf0  →  0x0000000000000000
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$rip   : 0x00007ffff7c60762  →  <++++info symbol 0x7ffff7c60762
printf+0072> lea rax, [rsp+0xe0]
$r8    : 0x8               
$r9    : 0x0000555555559750  →  "Mohammad"
$r10   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559760  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdaf0│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdaf8│+0x0008: 0x0000000000000000
0x00007fffffffdb00│+0x0010: 0x0000000000000000
0x00007fffffffdb08│+0x0018: 0x417e82e7d8190600
0x00007fffffffdb10│+0x0020: 0x0000005b0000006e ("n"?)
0x00007fffffffdb18│+0x0028: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdb20│+0x0030: 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
0x00007fffffffdb28│+0x0038: 0x0000000061686f4d ("Moha"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7c60752 <+++info symbol 0x7ffff7c60752
printf+0062> mov    rax, QWORD PTR fs:0x28
   0x7ffff7c6075b <+++info symbol 0x7ffff7c6075b
printf+006b> mov    QWORD PTR [rsp+0x18], rax
   0x7ffff7c60760 <+++info symbol 0x7ffff7c60760
printf+0070> xor    eax, eax
 → 0x7ffff7c60762 <++++info symbol 0x7ffff7c60762
printf+0072> lea    rax, [rsp+0xe0]
   0x7ffff7c6076a <+++info symbol 0x7ffff7c6076a
printf+007a> mov    rdx, rsp
   0x7ffff7c6076d <+++info symbol 0x7ffff7c6076d
printf+007d> xor    ecx, ecx
   0x7ffff7c6076f <+++info symbol 0x7ffff7c6076f
printf+007f> mov    QWORD PTR [rsp+0x8], rax
   0x7ffff7c60774 <+++info symbol 0x7ffff7c60774
printf+0084> lea    rax, [rsp+0x20]
   0x7ffff7c60779 <+++info symbol 0x7ffff7c60779
printf+0089> mov    rsi, r10
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x7ffff7c60762 in __printf (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7c60762 → __printf(format=0x5555555561a2 "Test 2 (simple add_tail): ")
[#1] 0x55555555581e → test2()
[#2] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
33	in ./stdio-common/printf.c
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdaf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00007fffffffdb10  →  0x0000005b0000006e ("n"?)
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007fffffffdaf0  →  0x0000000000000000
$rsp   : 0x00007fffffffdaf0  →  0x0000000000000000
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$rdi   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$rip   : 0x00007ffff7c60781  →  <++++info symbol 0x7ffff7c60781
printf+0091> mov rax, QWORD PTR [rip+0x1b96b0]        # 0x7ffff7e19e38
$r8    : 0x8               
$r9    : 0x0000555555559750  →  "Mohammad"
$r10   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559760  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdaf0│+0x0000: 0x0000000000000000	 ← $rdx, $rsp
0x00007fffffffdaf8│+0x0008: 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdb00│+0x0010: 0x00007fffffffdb10  →  0x0000005b0000006e ("n"?)
0x00007fffffffdb08│+0x0018: 0x417e82e7d8190600
0x00007fffffffdb10│+0x0020: 0x0000005b0000006e ("n"?)	 ← $rax
0x00007fffffffdb18│+0x0028: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdb20│+0x0030: 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
0x00007fffffffdb28│+0x0038: 0x0000000061686f4d ("Moha"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7c60774 <+++info symbol 0x7ffff7c60774
printf+0084> lea    rax, [rsp+0x20]
   0x7ffff7c60779 <+++info symbol 0x7ffff7c60779
printf+0089> mov    rsi, r10
   0x7ffff7c6077c <+++info symbol 0x7ffff7c6077c
printf+008c> mov    QWORD PTR [rsp+0x10], rax
 → 0x7ffff7c60781 <++++info symbol 0x7ffff7c60781
printf+0091> mov    rax, QWORD PTR [rip+0x1b96b0]        # 0x7ffff7e19e38
   0x7ffff7c60788 <+++info symbol 0x7ffff7c60788
printf+0098> mov    DWORD PTR [rsp], 0x8
   0x7ffff7c6078f <+++info symbol 0x7ffff7c6078f
printf+009f> mov    rdi, QWORD PTR [rax]
   0x7ffff7c60792 <+++info symbol 0x7ffff7c60792
printf+00a2> mov    DWORD PTR [rsp+0x4], 0x30
   0x7ffff7c6079a <+++info symbol 0x7ffff7c6079a
printf+00aa> call   0x7ffff7c75030 <__vfprintf_internal>
   0x7ffff7c6079f <+++info symbol 0x7ffff7c6079f
printf+00af> mov    rdx, QWORD PTR [rsp+0x18]
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x7ffff7c60781 in __printf (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7c60781 → __printf(format=0x5555555561a2 "Test 2 (simple add_tail): ")
[#1] 0x55555555581e → test2()
[#2] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdaf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00007fffffffdb10  →  0x0000005b0000006e ("n"?)
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007fffffffdaf0  →  0x0000000000000000
$rsp   : 0x00007fffffffdaf0  →  0x0000000000000000
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$rdi   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$rip   : 0x00007ffff7c60781  →  <++++info symbol 0x7ffff7c60781
printf+0091> mov rax, QWORD PTR [rip+0x1b96b0]        # 0x7ffff7e19e38
$r8    : 0x8               
$r9    : 0x0000555555559750  →  "Mohammad"
$r10   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559760  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdaf0│+0x0000: 0x0000000000000000	 ← $rdx, $rsp
0x00007fffffffdaf8│+0x0008: 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdb00│+0x0010: 0x00007fffffffdb10  →  0x0000005b0000006e ("n"?)
0x00007fffffffdb08│+0x0018: 0x417e82e7d8190600
0x00007fffffffdb10│+0x0020: 0x0000005b0000006e ("n"?)	 ← $rax
0x00007fffffffdb18│+0x0028: 0x0000555555556008  →  "Mohammad"
0x00007fffffffdb20│+0x0030: 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
0x00007fffffffdb28│+0x0038: 0x0000000061686f4d ("Moha"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7c60774 <+++info symbol 0x7ffff7c60774
printf+0084> lea    rax, [rsp+0x20]
   0x7ffff7c60779 <+++info symbol 0x7ffff7c60779
printf+0089> mov    rsi, r10
   0x7ffff7c6077c <+++info symbol 0x7ffff7c6077c
printf+008c> mov    QWORD PTR [rsp+0x10], rax
 → 0x7ffff7c60781 <++++info symbol 0x7ffff7c60781
printf+0091> mov    rax, QWORD PTR [rip+0x1b96b0]        # 0x7ffff7e19e38
   0x7ffff7c60788 <+++info symbol 0x7ffff7c60788
printf+0098> mov    DWORD PTR [rsp], 0x8
   0x7ffff7c6078f <+++info symbol 0x7ffff7c6078f
printf+009f> mov    rdi, QWORD PTR [rax]
   0x7ffff7c60792 <+++info symbol 0x7ffff7c60792
printf+00a2> mov    DWORD PTR [rsp+0x4], 0x30
   0x7ffff7c6079a <+++info symbol 0x7ffff7c6079a
printf+00aa> call   0x7ffff7c75030 <__vfprintf_internal>
   0x7ffff7c6079f <+++info symbol 0x7ffff7c6079f
printf+00af> mov    rdx, QWORD PTR [rsp+0x18]
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x7ffff7c60781 in __printf (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7c60781 → __printf(format=0x5555555561a2 "Test 2 (simple add_tail): ")
[#1] 0x55555555581e → test2()
[#2] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+quit
+source ~/.gef/gef.py
++set confirm off
++set verbose off
++set pagination off
++set print elements 0
++set history save on
++set history filename ~/.gdb_history
++set output-radix 0x10
++set print pretty on
++set disassembly-flavor intel
++handle SIGALRM print nopass
++save gdb-index '/tmp/gef'
GEF for linux ready, type `gef' to start, `gef config' to configure
93 commands loaded and 5 functions added for GDB 12.1 in 0.00ms using Python engine 3.10
++define target hookpost-remote
++define target hookpost-extended-remote
++define hookpost-source
++pi gef.gdb.load()
Reading symbols from ./student.bin...
+b main
Breakpoint 1 at 0x138c: file student.c, line 107.
+run
Starting program: /home/liub5/CSSE332-lab-liub5/debug/student.bin 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=0x1, argv=0x7fffffffdd28) at student.c:107
107	  init_node(&head);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x000055555555538c  →  <++++info symbol 0x55555555538c
main+0013> lea rax, [rip+0x2ced]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555381 <+++info symbol 0x555555555381
main+0008> sub    rsp, 0x20
   0x555555555385 <+++info symbol 0x555555555385
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555388 <+++info symbol 0x555555555388
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x55555555538c <++++info symbol 0x55555555538c
main+0013> lea    rax, [rip+0x2ced]        # 0x555555558080 <head>
   0x555555555393 <+++info symbol 0x555555555393
main+001a> mov    rdi, rax
   0x555555555396 <+++info symbol 0x555555555396
main+001d> call   0x555555555a43 <init_node>
   0x55555555539b <+++info symbol 0x55555555539b
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555539f <+++info symbol 0x55555555539f
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x5555555553a2 <+++info symbol 0x5555555553a2
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+107 ────
    102	 
    103	 int main(int argc, char **argv) {
    104	   int i, j, num_tests;
    105	 
    106	   // 1. Init the head
 →  107	   init_node(&head);
    108	 
    109	   // 2. Get which test to run.
    110	   num_tests = parse_args(argc, argv);
    111	 
    112	   switch(num_tests) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555538c in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555538c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffc  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x1               
$rip   : 0x000055555555538c  →  <++++info symbol 0x55555555538c
main+0013> lea rax, [rip+0x2ced]        # 0x555555558080 <head>
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555381 <+++info symbol 0x555555555381
main+0008> sub    rsp, 0x20
   0x555555555385 <+++info symbol 0x555555555385
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555388 <+++info symbol 0x555555555388
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x55555555538c <++++info symbol 0x55555555538c
main+0013> lea    rax, [rip+0x2ced]        # 0x555555558080 <head>
   0x555555555393 <+++info symbol 0x555555555393
main+001a> mov    rdi, rax
   0x555555555396 <+++info symbol 0x555555555396
main+001d> call   0x555555555a43 <init_node>
   0x55555555539b <+++info symbol 0x55555555539b
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555539f <+++info symbol 0x55555555539f
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x5555555553a2 <+++info symbol 0x5555555553a2
main+0029> mov    rsi, rdx
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+107 ────
    102	 
    103	 int main(int argc, char **argv) {
    104	   int i, j, num_tests;
    105	 
    106	   // 1. Init the head
 →  107	   init_node(&head);
    108	 
    109	   // 2. Get which test to run.
    110	   num_tests = parse_args(argc, argv);
    111	 
    112	   switch(num_tests) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555538c in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555538c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
110	  num_tests = parse_args(argc, argv);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x000055555555539b  →  <++++info symbol 0x55555555539b
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555538c <+++info symbol 0x55555555538c
main+0013> lea    rax, [rip+0x2ced]        # 0x555555558080 <head>
   0x555555555393 <+++info symbol 0x555555555393
main+001a> mov    rdi, rax
   0x555555555396 <+++info symbol 0x555555555396
main+001d> call   0x555555555a43 <init_node>
 → 0x55555555539b <++++info symbol 0x55555555539b
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555539f <+++info symbol 0x55555555539f
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x5555555553a2 <+++info symbol 0x5555555553a2
main+0029> mov    rsi, rdx
   0x5555555553a5 <+++info symbol 0x5555555553a5
main+002c> mov    edi, eax
   0x5555555553a7 <+++info symbol 0x5555555553a7
main+002e> call   0x555555555641 <parse_args>
   0x5555555553ac <+++info symbol 0x5555555553ac
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+110 ────
    105	 
    106	   // 1. Init the head
    107	   init_node(&head);
    108	 
    109	   // 2. Get which test to run.
           // argc=0x1, argv=0x00007fffffffdbf0  →  [...]  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin", num_tests=0x5555
 →  110	   num_tests = parse_args(argc, argv);
    111	 
    112	   switch(num_tests) {
    113	     case 0:
    114	       // Allocate nodes and set the grades.
    115	       for(i = 0; i < NUM_STUDENTS; i++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539b in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539b → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x000055555555539b  →  <++++info symbol 0x55555555539b
main+0022> mov rdx, QWORD PTR [rbp-0x20]
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0x0000555555555160  →  <++++info symbol 0x555555555160
_start+0000> endbr64 
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555538c <+++info symbol 0x55555555538c
main+0013> lea    rax, [rip+0x2ced]        # 0x555555558080 <head>
   0x555555555393 <+++info symbol 0x555555555393
main+001a> mov    rdi, rax
   0x555555555396 <+++info symbol 0x555555555396
main+001d> call   0x555555555a43 <init_node>
 → 0x55555555539b <++++info symbol 0x55555555539b
main+0022> mov    rdx, QWORD PTR [rbp-0x20]
   0x55555555539f <+++info symbol 0x55555555539f
main+0026> mov    eax, DWORD PTR [rbp-0x14]
   0x5555555553a2 <+++info symbol 0x5555555553a2
main+0029> mov    rsi, rdx
   0x5555555553a5 <+++info symbol 0x5555555553a5
main+002c> mov    edi, eax
   0x5555555553a7 <+++info symbol 0x5555555553a7
main+002e> call   0x555555555641 <parse_args>
   0x5555555553ac <+++info symbol 0x5555555553ac
main+0033> mov    DWORD PTR [rbp-0x4], eax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+110 ────
    105	 
    106	   // 1. Init the head
    107	   init_node(&head);
    108	 
    109	   // 2. Get which test to run.
           // argc=0x1, argv=0x00007fffffffdbf0  →  [...]  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin", num_tests=0x5555
 →  110	   num_tests = parse_args(argc, argv);
    111	 
    112	   switch(num_tests) {
    113	     case 0:
    114	       // Allocate nodes and set the grades.
    115	       for(i = 0; i < NUM_STUDENTS; i++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555539b in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555539b → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
112	  switch(num_tests) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555553af  →  <++++info symbol 0x5555555553af
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553a5 <+++info symbol 0x5555555553a5
main+002c> mov    edi, eax
   0x5555555553a7 <+++info symbol 0x5555555553a7
main+002e> call   0x555555555641 <parse_args>
   0x5555555553ac <+++info symbol 0x5555555553ac
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x5555555553af <++++info symbol 0x5555555553af
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553b3 <+++info symbol 0x5555555553b3
main+003a> je     0x5555555555e1 <main+616>
   0x5555555553b9 <+++info symbol 0x5555555553b9
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553bd <+++info symbol 0x5555555553bd
main+0044> jg     0x5555555555f4 <main+635>
   0x5555555553c3 <+++info symbol 0x5555555553c3
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553c7 <+++info symbol 0x5555555553c7
main+004e> je     0x5555555555ce <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+112 ────
    107	   init_node(&head);
    108	 
    109	   // 2. Get which test to run.
    110	   num_tests = parse_args(argc, argv);
    111	 
           // num_tests=-0x1
 →  112	   switch(num_tests) {
    113	     case 0:
    114	       // Allocate nodes and set the grades.
    115	       for(i = 0; i < NUM_STUDENTS; i++) {
    116	         students[i] = alloc_student(names[i]);
    117	         for(j = 0; j < NUM_EXAMS; j++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555553af in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553af → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555553af  →  <++++info symbol 0x5555555553af
main+0036> cmp DWORD PTR [rbp-0x4], 0x3
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553a5 <+++info symbol 0x5555555553a5
main+002c> mov    edi, eax
   0x5555555553a7 <+++info symbol 0x5555555553a7
main+002e> call   0x555555555641 <parse_args>
   0x5555555553ac <+++info symbol 0x5555555553ac
main+0033> mov    DWORD PTR [rbp-0x4], eax
 → 0x5555555553af <++++info symbol 0x5555555553af
main+0036> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553b3 <+++info symbol 0x5555555553b3
main+003a> je     0x5555555555e1 <main+616>
   0x5555555553b9 <+++info symbol 0x5555555553b9
main+0040> cmp    DWORD PTR [rbp-0x4], 0x3
   0x5555555553bd <+++info symbol 0x5555555553bd
main+0044> jg     0x5555555555f4 <main+635>
   0x5555555553c3 <+++info symbol 0x5555555553c3
main+004a> cmp    DWORD PTR [rbp-0x4], 0x2
   0x5555555553c7 <+++info symbol 0x5555555553c7
main+004e> je     0x5555555555ce <main+597>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+112 ────
    107	   init_node(&head);
    108	 
    109	   // 2. Get which test to run.
    110	   num_tests = parse_args(argc, argv);
    111	 
           // num_tests=-0x1
 →  112	   switch(num_tests) {
    113	     case 0:
    114	       // Allocate nodes and set the grades.
    115	       for(i = 0; i < NUM_STUDENTS; i++) {
    116	         students[i] = alloc_student(names[i]);
    117	         for(j = 0; j < NUM_EXAMS; j++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555553af in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553af → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
152	      if(!test1()) exit(EXIT_FAILURE);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555f4  →  <++++info symbol 0x5555555555f4
main+027b> call 0x5555555556fe <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555e8 <+++info symbol 0x5555555555e8
main+026f> jne    0x555555555633 <main+698>
   0x5555555555ea <+++info symbol 0x5555555555ea
main+0271> mov    edi, 0x1
   0x5555555555ef <+++info symbol 0x5555555555ef
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555f4 <++++info symbol 0x5555555555f4
main+027b> call   0x5555555556fe <test1>
   ↳  0x5555555556fe <+++info symbol 0x5555555556fe
test1+0000> endbr64 
      0x555555555702 <+++info symbol 0x555555555702
test1+0004> push   rbp
      0x555555555703 <+++info symbol 0x555555555703
test1+0005> mov    rbp, rsp
      0x555555555706 <+++info symbol 0x555555555706
test1+0008> sub    rsp, 0x10
      0x55555555570a <+++info symbol 0x55555555570a
test1+000c> lea    rax, [rip+0x8f7]        # 0x555555556008
      0x555555555711 <+++info symbol 0x555555555711
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+152 ────
    147	     case 3:
    148	       if(!test3()) exit(EXIT_FAILURE);
    149	       break;
    150	     case -1:
    151	     default:
 →  152	       if(!test1()) exit(EXIT_FAILURE);
    153	       if(!test2()) exit(EXIT_FAILURE);
    154	       if(!test3()) exit(EXIT_FAILURE);
    155	       break;
    156	   }
    157	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555f4 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555f4 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xffffffff        
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007ffff7e22180  →  0x0000000000000001
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rdi   : 0x00007ffff7dd9e09  →  "POSIXLY_CORRECT"
$rip   : 0x00005555555555f4  →  <++++info symbol 0x5555555555f4
main+027b> call 0x5555555556fe <test1>
$r8    : 0x1               
$r9    : 0x0               
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555e8 <+++info symbol 0x5555555555e8
main+026f> jne    0x555555555633 <main+698>
   0x5555555555ea <+++info symbol 0x5555555555ea
main+0271> mov    edi, 0x1
   0x5555555555ef <+++info symbol 0x5555555555ef
main+0276> call   0x555555555150 <exit@plt>
 → 0x5555555555f4 <++++info symbol 0x5555555555f4
main+027b> call   0x5555555556fe <test1>
   ↳  0x5555555556fe <+++info symbol 0x5555555556fe
test1+0000> endbr64 
      0x555555555702 <+++info symbol 0x555555555702
test1+0004> push   rbp
      0x555555555703 <+++info symbol 0x555555555703
test1+0005> mov    rbp, rsp
      0x555555555706 <+++info symbol 0x555555555706
test1+0008> sub    rsp, 0x10
      0x55555555570a <+++info symbol 0x55555555570a
test1+000c> lea    rax, [rip+0x8f7]        # 0x555555556008
      0x555555555711 <+++info symbol 0x555555555711
test1+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test1 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+152 ────
    147	     case 3:
    148	       if(!test3()) exit(EXIT_FAILURE);
    149	       break;
    150	     case -1:
    151	     default:
 →  152	       if(!test1()) exit(EXIT_FAILURE);
    153	       if(!test2()) exit(EXIT_FAILURE);
    154	       if(!test3()) exit(EXIT_FAILURE);
    155	       break;
    156	   }
    157	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555555f4 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555555f4 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
153	      if(!test2()) exit(EXIT_FAILURE);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x0000555555555607  →  <++++info symbol 0x555555555607
main+028e> call 0x5555555557eb <test2>
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): OK.\n"
$r10   : 0x77              
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555fb <+++info symbol 0x5555555555fb
main+0282> jne    0x555555555607 <main+654>
   0x5555555555fd <+++info symbol 0x5555555555fd
main+0284> mov    edi, 0x1
   0x555555555602 <+++info symbol 0x555555555602
main+0289> call   0x555555555150 <exit@plt>
 → 0x555555555607 <++++info symbol 0x555555555607
main+028e> call   0x5555555557eb <test2>
   ↳  0x5555555557eb <+++info symbol 0x5555555557eb
test2+0000> endbr64 
      0x5555555557ef <+++info symbol 0x5555555557ef
test2+0004> push   rbp
      0x5555555557f0 <+++info symbol 0x5555555557f0
test2+0005> mov    rbp, rsp
      0x5555555557f3 <+++info symbol 0x5555555557f3
test2+0008> sub    rsp, 0x10
      0x5555555557f7 <+++info symbol 0x5555555557f7
test2+000c> lea    rax, [rip+0x80a]        # 0x555555556008
      0x5555555557fe <+++info symbol 0x5555555557fe
test2+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test2 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+153 ────
    148	       if(!test3()) exit(EXIT_FAILURE);
    149	       break;
    150	     case -1:
    151	     default:
    152	       if(!test1()) exit(EXIT_FAILURE);
 →  153	       if(!test2()) exit(EXIT_FAILURE);
    154	       if(!test3()) exit(EXIT_FAILURE);
    155	       break;
    156	   }
    157	 
    158	   exit(EXIT_SUCCESS);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555607 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555607 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbf0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbf0  →  0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x0000555555555607  →  <++++info symbol 0x555555555607
main+028e> call 0x5555555557eb <test2>
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): OK.\n"
$r10   : 0x77              
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbf0│+0x0000: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"	 ← $rsp
0x00007fffffffdbf8│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0010: 0x0000000000001000
0x00007fffffffdc08│+0x0018: 0xffffffff55555160
0x00007fffffffdc10│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc20│+0x0030: 0x0000000000000000
0x00007fffffffdc28│+0x0038: 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555555fb <+++info symbol 0x5555555555fb
main+0282> jne    0x555555555607 <main+654>
   0x5555555555fd <+++info symbol 0x5555555555fd
main+0284> mov    edi, 0x1
   0x555555555602 <+++info symbol 0x555555555602
main+0289> call   0x555555555150 <exit@plt>
 → 0x555555555607 <++++info symbol 0x555555555607
main+028e> call   0x5555555557eb <test2>
   ↳  0x5555555557eb <+++info symbol 0x5555555557eb
test2+0000> endbr64 
      0x5555555557ef <+++info symbol 0x5555555557ef
test2+0004> push   rbp
      0x5555555557f0 <+++info symbol 0x5555555557f0
test2+0005> mov    rbp, rsp
      0x5555555557f3 <+++info symbol 0x5555555557f3
test2+0008> sub    rsp, 0x10
      0x5555555557f7 <+++info symbol 0x5555555557f7
test2+000c> lea    rax, [rip+0x80a]        # 0x555555556008
      0x5555555557fe <+++info symbol 0x5555555557fe
test2+0013> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
test2 (<void>)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+153 ────
    148	       if(!test3()) exit(EXIT_FAILURE);
    149	       break;
    150	     case -1:
    151	     default:
    152	       if(!test1()) exit(EXIT_FAILURE);
 →  153	       if(!test2()) exit(EXIT_FAILURE);
    154	       if(!test3()) exit(EXIT_FAILURE);
    155	       break;
    156	   }
    157	 
    158	   exit(EXIT_SUCCESS);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555607 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555607 → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
test2 () at student.c:219
219	  struct student *st = alloc_student("Mohammad");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x00005555555557f7  →  <++++info symbol 0x5555555557f7
test2+000c> lea rax, [rip+0x80a]        # 0x555555556008
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): OK.\n"
$r10   : 0x77              
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x000055555555560c  →  <++++info symbol 0x55555555560c
main+0293> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555557ef <+++info symbol 0x5555555557ef
test2+0004> push   rbp
   0x5555555557f0 <+++info symbol 0x5555555557f0
test2+0005> mov    rbp, rsp
   0x5555555557f3 <+++info symbol 0x5555555557f3
test2+0008> sub    rsp, 0x10
 → 0x5555555557f7 <++++info symbol 0x5555555557f7
test2+000c> lea    rax, [rip+0x80a]        # 0x555555556008
   0x5555555557fe <+++info symbol 0x5555555557fe
test2+0013> mov    rdi, rax
   0x555555555801 <+++info symbol 0x555555555801
test2+0016> call   0x555555555249 <alloc_student>
   0x555555555806 <+++info symbol 0x555555555806
test2+001b> mov    QWORD PTR [rbp-0x8], rax
   0x55555555580a <+++info symbol 0x55555555580a
test2+001f> lea    rax, [rip+0x991]        # 0x5555555561a2
   0x555555555811 <+++info symbol 0x555555555811
test2+0026> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+219 ────
    214	   printf("OK.\n");
    215	   return 1;
    216	 }
    217	 
    218	 int test2(void) {
           // st=0x00007fffffffdbd8  →  [...]  →  [loop detected]
 →  219	   struct student *st = alloc_student("Mohammad");
    220	 
    221	   // This test1 just tests adding at the head and then deleting.
    222	   printf("Test 2 (simple add_tail): ");
    223	   add_tail(&head, &st->node);
    224	   if(IS_EMPTY(head)) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555557f7 in test2 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555557f7 → test2()
[#1] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x00005555555557f7  →  <++++info symbol 0x5555555557f7
test2+000c> lea rax, [rip+0x80a]        # 0x555555556008
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x0000555555559300  →  "Test 1 (simple add_head): OK.\n"
$r10   : 0x77              
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x00005555555592a0  →  0x00005555555592a0  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x000055555555560c  →  <++++info symbol 0x55555555560c
main+0293> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555557ef <+++info symbol 0x5555555557ef
test2+0004> push   rbp
   0x5555555557f0 <+++info symbol 0x5555555557f0
test2+0005> mov    rbp, rsp
   0x5555555557f3 <+++info symbol 0x5555555557f3
test2+0008> sub    rsp, 0x10
 → 0x5555555557f7 <++++info symbol 0x5555555557f7
test2+000c> lea    rax, [rip+0x80a]        # 0x555555556008
   0x5555555557fe <+++info symbol 0x5555555557fe
test2+0013> mov    rdi, rax
   0x555555555801 <+++info symbol 0x555555555801
test2+0016> call   0x555555555249 <alloc_student>
   0x555555555806 <+++info symbol 0x555555555806
test2+001b> mov    QWORD PTR [rbp-0x8], rax
   0x55555555580a <+++info symbol 0x55555555580a
test2+001f> lea    rax, [rip+0x991]        # 0x5555555561a2
   0x555555555811 <+++info symbol 0x555555555811
test2+0026> mov    rdi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+219 ────
    214	   printf("OK.\n");
    215	   return 1;
    216	 }
    217	 
    218	 int test2(void) {
           // st=0x00007fffffffdbd8  →  [...]  →  [loop detected]
 →  219	   struct student *st = alloc_student("Mohammad");
    220	 
    221	   // This test1 just tests adding at the head and then deleting.
    222	   printf("Test 2 (simple add_tail): ");
    223	   add_tail(&head, &st->node);
    224	   if(IS_EMPTY(head)) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x5555555557f7 in test2 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555557f7 → test2()
[#1] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
222	  printf("Test 2 (simple add_tail): ");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x61686f4d        
$rdx   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rip   : 0x000055555555580a  →  <++++info symbol 0x55555555580a
test2+001f> lea rax, [rip+0x991]        # 0x5555555561a2
$r8    : 0x8               
$r9    : 0x0000555555559750  →  "Mohammad"
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559760  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x000055555555560c  →  <++++info symbol 0x55555555560c
main+0293> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555557fe <+++info symbol 0x5555555557fe
test2+0013> mov    rdi, rax
   0x555555555801 <+++info symbol 0x555555555801
test2+0016> call   0x555555555249 <alloc_student>
   0x555555555806 <+++info symbol 0x555555555806
test2+001b> mov    QWORD PTR [rbp-0x8], rax
 → 0x55555555580a <++++info symbol 0x55555555580a
test2+001f> lea    rax, [rip+0x991]        # 0x5555555561a2
   0x555555555811 <+++info symbol 0x555555555811
test2+0026> mov    rdi, rax
   0x555555555814 <+++info symbol 0x555555555814
test2+0029> mov    eax, 0x0
   0x555555555819 <+++info symbol 0x555555555819
test2+002e> call   0x555555555100 <printf@plt>
   0x55555555581e <+++info symbol 0x55555555581e
test2+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555822 <+++info symbol 0x555555555822
test2+0037> mov    rsi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+222 ────
    217	 
    218	 int test2(void) {
    219	   struct student *st = alloc_student("Mohammad");
    220	 
    221	   // This test1 just tests adding at the head and then deleting.
 →  222	   printf("Test 2 (simple add_tail): ");
    223	   add_tail(&head, &st->node);
    224	   if(IS_EMPTY(head)) {
    225	     printf("FAILED (list is still empty after add_tail)\n");
    226	     return 0;
    227	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555580a in test2 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555580a → test2()
[#1] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x61686f4d        
$rdx   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555556008  →  "Mohammad"
$rdi   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rip   : 0x000055555555580a  →  <++++info symbol 0x55555555580a
test2+001f> lea rax, [rip+0x991]        # 0x5555555561a2
$r8    : 0x8               
$r9    : 0x0000555555559750  →  "Mohammad"
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559760  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x000055555555560c  →  <++++info symbol 0x55555555560c
main+0293> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555557fe <+++info symbol 0x5555555557fe
test2+0013> mov    rdi, rax
   0x555555555801 <+++info symbol 0x555555555801
test2+0016> call   0x555555555249 <alloc_student>
   0x555555555806 <+++info symbol 0x555555555806
test2+001b> mov    QWORD PTR [rbp-0x8], rax
 → 0x55555555580a <++++info symbol 0x55555555580a
test2+001f> lea    rax, [rip+0x991]        # 0x5555555561a2
   0x555555555811 <+++info symbol 0x555555555811
test2+0026> mov    rdi, rax
   0x555555555814 <+++info symbol 0x555555555814
test2+0029> mov    eax, 0x0
   0x555555555819 <+++info symbol 0x555555555819
test2+002e> call   0x555555555100 <printf@plt>
   0x55555555581e <+++info symbol 0x55555555581e
test2+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555822 <+++info symbol 0x555555555822
test2+0037> mov    rsi, rax
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+222 ────
    217	 
    218	 int test2(void) {
    219	   struct student *st = alloc_student("Mohammad");
    220	 
    221	   // This test1 just tests adding at the head and then deleting.
 →  222	   printf("Test 2 (simple add_tail): ");
    223	   add_tail(&head, &st->node);
    224	   if(IS_EMPTY(head)) {
    225	     printf("FAILED (list is still empty after add_tail)\n");
    226	     return 0;
    227	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555580a in test2 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555580a → test2()
[#1] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
223	  add_tail(&head, &st->node);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1a              
$rbx   : 0x0               
$rcx   : 0x00007ffff7e16a00  →  0x0000000000000000
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$rdi   : 0x00007fffffffd670  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x000055555555581e  →  <++++info symbol 0x55555555581e
test2+0033> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x8               
$r9    : 0x0000555555559750  →  "Mohammad"
$r10   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559760  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x000055555555560c  →  <++++info symbol 0x55555555560c
main+0293> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555811 <+++info symbol 0x555555555811
test2+0026> mov    rdi, rax
   0x555555555814 <+++info symbol 0x555555555814
test2+0029> mov    eax, 0x0
   0x555555555819 <+++info symbol 0x555555555819
test2+002e> call   0x555555555100 <printf@plt>
 → 0x55555555581e <++++info symbol 0x55555555581e
test2+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555822 <+++info symbol 0x555555555822
test2+0037> mov    rsi, rax
   0x555555555825 <+++info symbol 0x555555555825
test2+003a> lea    rax, [rip+0x2854]        # 0x555555558080 <head>
   0x55555555582c <+++info symbol 0x55555555582c
test2+0041> mov    rdi, rax
   0x55555555582f <+++info symbol 0x55555555582f
test2+0044> call   0x555555555a97 <add_tail>
   0x555555555834 <+++info symbol 0x555555555834
test2+0049> mov    rax, QWORD PTR [rip+0x2845]        # 0x555555558080 <head>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+223 ────
    218	 int test2(void) {
    219	   struct student *st = alloc_student("Mohammad");
    220	 
    221	   // This test1 just tests adding at the head and then deleting.
    222	   printf("Test 2 (simple add_tail): ");
           // st=0x00007fffffffdbd8  →  [...]  →  [loop detected]
 →  223	   add_tail(&head, &st->node);
    224	   if(IS_EMPTY(head)) {
    225	     printf("FAILED (list is still empty after add_tail)\n");
    226	     return 0;
    227	   }
    228	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555581e in test2 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555581e → test2()
[#1] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1a              
$rbx   : 0x0               
$rcx   : 0x00007ffff7e16a00  →  0x0000000000000000
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00007ffff7fc1000  →  0x00010102464c457f
$rbp   : 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$rdi   : 0x00007fffffffd670  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x000055555555581e  →  <++++info symbol 0x55555555581e
test2+0033> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x8               
$r9    : 0x0000555555559750  →  "Mohammad"
$r10   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559760  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007ffff7fc1000  →  0x00010102464c457f	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
0x00007fffffffdbe0│+0x0010: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbe8│+0x0018: 0x000055555555560c  →  <++++info symbol 0x55555555560c
main+0293> test eax, eax
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0028: 0x0000000100000064 ("d"?)
0x00007fffffffdc00│+0x0030: 0x0000000000001000
0x00007fffffffdc08│+0x0038: 0xffffffff55555160
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555811 <+++info symbol 0x555555555811
test2+0026> mov    rdi, rax
   0x555555555814 <+++info symbol 0x555555555814
test2+0029> mov    eax, 0x0
   0x555555555819 <+++info symbol 0x555555555819
test2+002e> call   0x555555555100 <printf@plt>
 → 0x55555555581e <++++info symbol 0x55555555581e
test2+0033> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555822 <+++info symbol 0x555555555822
test2+0037> mov    rsi, rax
   0x555555555825 <+++info symbol 0x555555555825
test2+003a> lea    rax, [rip+0x2854]        # 0x555555558080 <head>
   0x55555555582c <+++info symbol 0x55555555582c
test2+0041> mov    rdi, rax
   0x55555555582f <+++info symbol 0x55555555582f
test2+0044> call   0x555555555a97 <add_tail>
   0x555555555834 <+++info symbol 0x555555555834
test2+0049> mov    rax, QWORD PTR [rip+0x2845]        # 0x555555558080 <head>
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:student.c+223 ────
    218	 int test2(void) {
    219	   struct student *st = alloc_student("Mohammad");
    220	 
    221	   // This test1 just tests adding at the head and then deleting.
    222	   printf("Test 2 (simple add_tail): ");
           // st=0x00007fffffffdbd8  →  [...]  →  [loop detected]
 →  223	   add_tail(&head, &st->node);
    224	   if(IS_EMPTY(head)) {
    225	     printf("FAILED (list is still empty after add_tail)\n");
    226	     return 0;
    227	   }
    228	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x55555555581e in test2 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555581e → test2()
[#1] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
add_tail (head=0x555555558080 <head>, node=0x555555559710) at sllist.c:42
42	  struct list_node *p = head->next;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x00007ffff7e16a00  →  0x0000000000000000
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555aa7  →  <++++info symbol 0x555555555aa7
add_tail+0010> mov rax, QWORD PTR [rbp-0x18]
$r8    : 0x8               
$r9    : 0x0000555555559750  →  "Mohammad"
$r10   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559760  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbc8│+0x0008: 0x0000555555555834  →  <++++info symbol 0x555555555834
test2+0049> mov rax, QWORD PTR [rip+0x2845]        # 0x555555558080 <head>
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbe8│+0x0028: 0x000055555555560c  →  <++++info symbol 0x55555555560c
main+0293> test eax, eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555a9c <+++info symbol 0x555555555a9c
add_tail+0005> mov    rbp, rsp
   0x555555555a9f <+++info symbol 0x555555555a9f
add_tail+0008> mov    QWORD PTR [rbp-0x18], rdi
   0x555555555aa3 <+++info symbol 0x555555555aa3
add_tail+000c> mov    QWORD PTR [rbp-0x20], rsi
 → 0x555555555aa7 <++++info symbol 0x555555555aa7
add_tail+0010> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555aab <+++info symbol 0x555555555aab
add_tail+0014> mov    rax, QWORD PTR [rax]
   0x555555555aae <+++info symbol 0x555555555aae
add_tail+0017> mov    QWORD PTR [rbp-0x8], rax
   0x555555555ab2 <+++info symbol 0x555555555ab2
add_tail+001b> jmp    0x555555555abf <add_tail+40>
   0x555555555ab4 <+++info symbol 0x555555555ab4
add_tail+001d> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555ab8 <+++info symbol 0x555555555ab8
add_tail+0021> mov    rax, QWORD PTR [rax]
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+42 ────
     37	 }
     38	 
     39	 // add at tail
     40	 void add_tail(struct list_node *head, struct list_node *node)
     41	 {
           // head=0x00007fffffffdba8  →  [...]  →  [loop detected], p=0x00007fffffffdbb8  →  0x0000000000000000
 →   42	   struct list_node *p = head->next;
     43	 
     44	   while(p->next != head) {
     45	     p = p->next;
     46	   }
     47	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555aa7 in add_tail (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555aa7 → add_tail(head=0x555555558080 <head>, node=0x555555559710)
[#1] 0x555555555834 → test2()
[#2] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x00007ffff7e16a00  →  0x0000000000000000
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555aa7  →  <++++info symbol 0x555555555aa7
add_tail+0010> mov rax, QWORD PTR [rbp-0x18]
$r8    : 0x8               
$r9    : 0x0000555555559750  →  "Mohammad"
$r10   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559760  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbc8│+0x0008: 0x0000555555555834  →  <++++info symbol 0x555555555834
test2+0049> mov rax, QWORD PTR [rip+0x2845]        # 0x555555558080 <head>
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbe8│+0x0028: 0x000055555555560c  →  <++++info symbol 0x55555555560c
main+0293> test eax, eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555a9c <+++info symbol 0x555555555a9c
add_tail+0005> mov    rbp, rsp
   0x555555555a9f <+++info symbol 0x555555555a9f
add_tail+0008> mov    QWORD PTR [rbp-0x18], rdi
   0x555555555aa3 <+++info symbol 0x555555555aa3
add_tail+000c> mov    QWORD PTR [rbp-0x20], rsi
 → 0x555555555aa7 <++++info symbol 0x555555555aa7
add_tail+0010> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555aab <+++info symbol 0x555555555aab
add_tail+0014> mov    rax, QWORD PTR [rax]
   0x555555555aae <+++info symbol 0x555555555aae
add_tail+0017> mov    QWORD PTR [rbp-0x8], rax
   0x555555555ab2 <+++info symbol 0x555555555ab2
add_tail+001b> jmp    0x555555555abf <add_tail+40>
   0x555555555ab4 <+++info symbol 0x555555555ab4
add_tail+001d> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555ab8 <+++info symbol 0x555555555ab8
add_tail+0021> mov    rax, QWORD PTR [rax]
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+42 ────
     37	 }
     38	 
     39	 // add at tail
     40	 void add_tail(struct list_node *head, struct list_node *node)
     41	 {
           // head=0x00007fffffffdba8  →  [...]  →  [loop detected], p=0x00007fffffffdbb8  →  0x0000000000000000
 →   42	   struct list_node *p = head->next;
     43	 
     44	   while(p->next != head) {
     45	     p = p->next;
     46	   }
     47	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555aa7 in add_tail (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555aa7 → add_tail(head=0x555555558080 <head>, node=0x555555559710)
[#1] 0x555555555834 → test2()
[#2] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+info local
p = 0x0
+n
44	  while(p->next != head) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x00007ffff7e16a00  →  0x0000000000000000
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555ab2  →  <++++info symbol 0x555555555ab2
add_tail+001b> jmp 0x555555555abf <add_tail+40>
$r8    : 0x8               
$r9    : 0x0000555555559750  →  "Mohammad"
$r10   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559760  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbc8│+0x0008: 0x0000555555555834  →  <++++info symbol 0x555555555834
test2+0049> mov rax, QWORD PTR [rip+0x2845]        # 0x555555558080 <head>
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbe8│+0x0028: 0x000055555555560c  →  <++++info symbol 0x55555555560c
main+0293> test eax, eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555aa7 <+++info symbol 0x555555555aa7
add_tail+0010> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555aab <+++info symbol 0x555555555aab
add_tail+0014> mov    rax, QWORD PTR [rax]
   0x555555555aae <+++info symbol 0x555555555aae
add_tail+0017> mov    QWORD PTR [rbp-0x8], rax
 → 0x555555555ab2 <++++info symbol 0x555555555ab2
add_tail+001b> jmp    0x555555555abf <add_tail+40>
   0x555555555ab4 <+++info symbol 0x555555555ab4
add_tail+001d> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555ab8 <+++info symbol 0x555555555ab8
add_tail+0021> mov    rax, QWORD PTR [rax]
   0x555555555abb <+++info symbol 0x555555555abb
add_tail+0024> mov    QWORD PTR [rbp-0x8], rax
   0x555555555abf <+++info symbol 0x555555555abf
add_tail+0028> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555ac3 <+++info symbol 0x555555555ac3
add_tail+002c> mov    rax, QWORD PTR [rax]
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+44 ────
     39	 // add at tail
     40	 void add_tail(struct list_node *head, struct list_node *node)
     41	 {
     42	   struct list_node *p = head->next;
     43	 
           // head=0x00007fffffffdba8  →  [...]  →  [loop detected], p=0x00007fffffffdbb8  →  [...]  →  [loop detected]
 →   44	   while(p->next != head) {
     45	     p = p->next;
     46	   }
     47	 
     48	   node->next = p->next;
     49	 }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555ab2 in add_tail (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555ab2 → add_tail(head=0x555555558080 <head>, node=0x555555559710)
[#1] 0x555555555834 → test2()
[#2] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x00007ffff7e16a00  →  0x0000000000000000
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555ab2  →  <++++info symbol 0x555555555ab2
add_tail+001b> jmp 0x555555555abf <add_tail+40>
$r8    : 0x8               
$r9    : 0x0000555555559750  →  "Mohammad"
$r10   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559760  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbc8│+0x0008: 0x0000555555555834  →  <++++info symbol 0x555555555834
test2+0049> mov rax, QWORD PTR [rip+0x2845]        # 0x555555558080 <head>
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbe8│+0x0028: 0x000055555555560c  →  <++++info symbol 0x55555555560c
main+0293> test eax, eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555aa7 <+++info symbol 0x555555555aa7
add_tail+0010> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555aab <+++info symbol 0x555555555aab
add_tail+0014> mov    rax, QWORD PTR [rax]
   0x555555555aae <+++info symbol 0x555555555aae
add_tail+0017> mov    QWORD PTR [rbp-0x8], rax
 → 0x555555555ab2 <++++info symbol 0x555555555ab2
add_tail+001b> jmp    0x555555555abf <add_tail+40>
   0x555555555ab4 <+++info symbol 0x555555555ab4
add_tail+001d> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555ab8 <+++info symbol 0x555555555ab8
add_tail+0021> mov    rax, QWORD PTR [rax]
   0x555555555abb <+++info symbol 0x555555555abb
add_tail+0024> mov    QWORD PTR [rbp-0x8], rax
   0x555555555abf <+++info symbol 0x555555555abf
add_tail+0028> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555ac3 <+++info symbol 0x555555555ac3
add_tail+002c> mov    rax, QWORD PTR [rax]
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+44 ────
     39	 // add at tail
     40	 void add_tail(struct list_node *head, struct list_node *node)
     41	 {
     42	   struct list_node *p = head->next;
     43	 
           // head=0x00007fffffffdba8  →  [...]  →  [loop detected], p=0x00007fffffffdbb8  →  [...]  →  [loop detected]
 →   44	   while(p->next != head) {
     45	     p = p->next;
     46	   }
     47	 
     48	   node->next = p->next;
     49	 }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555ab2 in add_tail (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555ab2 → add_tail(head=0x555555558080 <head>, node=0x555555559710)
[#1] 0x555555555834 → test2()
[#2] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+info local
p = 0x555555558080 <head>
+n
48	  node->next = p->next;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x00007ffff7e16a00  →  0x0000000000000000
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555acc  →  <++++info symbol 0x555555555acc
add_tail+0035> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x8               
$r9    : 0x0000555555559750  →  "Mohammad"
$r10   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559760  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbc8│+0x0008: 0x0000555555555834  →  <++++info symbol 0x555555555834
test2+0049> mov rax, QWORD PTR [rip+0x2845]        # 0x555555558080 <head>
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbe8│+0x0028: 0x000055555555560c  →  <++++info symbol 0x55555555560c
main+0293> test eax, eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555ac3 <+++info symbol 0x555555555ac3
add_tail+002c> mov    rax, QWORD PTR [rax]
   0x555555555ac6 <+++info symbol 0x555555555ac6
add_tail+002f> cmp    QWORD PTR [rbp-0x18], rax
   0x555555555aca <+++info symbol 0x555555555aca
add_tail+0033> jne    0x555555555ab4 <add_tail+29>
 → 0x555555555acc <++++info symbol 0x555555555acc
add_tail+0035> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555ad0 <+++info symbol 0x555555555ad0
add_tail+0039> mov    rdx, QWORD PTR [rax]
   0x555555555ad3 <+++info symbol 0x555555555ad3
add_tail+003c> mov    rax, QWORD PTR [rbp-0x20]
   0x555555555ad7 <+++info symbol 0x555555555ad7
add_tail+0040> mov    QWORD PTR [rax], rdx
   0x555555555ada <+++info symbol 0x555555555ada
add_tail+0043> nop    
   0x555555555adb <+++info symbol 0x555555555adb
add_tail+0044> pop    rbp
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+48 ────
     43	 
     44	   while(p->next != head) {
     45	     p = p->next;
     46	   }
     47	 
           // node=0x00007fffffffdba0  →  [...]  →  [loop detected], p=0x00007fffffffdbb8  →  [...]  →  [loop detected]
 →   48	   node->next = p->next;
     49	 }
     50	 
     51	 // delete a node
     52	 void del_node(struct list_node *head, struct list_node *node)
     53	 {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555acc in add_tail (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555acc → add_tail(head=0x555555558080 <head>, node=0x555555559710)
[#1] 0x555555555834 → test2()
[#2] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbc0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rbx   : 0x0               
$rcx   : 0x00007ffff7e16a00  →  0x0000000000000000
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbc0  →  0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
$rdi   : 0x0000555555558080  →  0x0000555555558080  →  [loop detected]
$rip   : 0x0000555555555acc  →  <++++info symbol 0x555555555acc
add_tail+0035> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x8               
$r9    : 0x0000555555559750  →  "Mohammad"
$r10   : 0x00005555555561a2  →  "Test 2 (simple add_tail): "
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559760  →  0x0000000000000000
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
$r13   : 0x0000555555555379  →  <++++info symbol 0x555555555379
main+0000> endbr64 
$r14   : 0x0000555555557d80  →  0x0000555555555200  →  <++++info symbol 0x555555555200
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbc0│+0x0000: 0x00007fffffffdbe0  →  0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbc8│+0x0008: 0x0000555555555834  →  <++++info symbol 0x555555555834
test2+0049> mov rax, QWORD PTR [rip+0x2845]        # 0x555555558080 <head>
0x00007fffffffdbd0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbd8│+0x0018: 0x0000555555559710  →  0x0000555555559710  →  [loop detected]
0x00007fffffffdbe0│+0x0020: 0x00007fffffffdc10  →  0x0000000000000001
0x00007fffffffdbe8│+0x0028: 0x000055555555560c  →  <++++info symbol 0x55555555560c
main+0293> test eax, eax
0x00007fffffffdbf0│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfcc  →  "/home/liub5/CSSE332-lab-liub5/debug/student.bin"
0x00007fffffffdbf8│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555ac3 <+++info symbol 0x555555555ac3
add_tail+002c> mov    rax, QWORD PTR [rax]
   0x555555555ac6 <+++info symbol 0x555555555ac6
add_tail+002f> cmp    QWORD PTR [rbp-0x18], rax
   0x555555555aca <+++info symbol 0x555555555aca
add_tail+0033> jne    0x555555555ab4 <add_tail+29>
 → 0x555555555acc <++++info symbol 0x555555555acc
add_tail+0035> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555ad0 <+++info symbol 0x555555555ad0
add_tail+0039> mov    rdx, QWORD PTR [rax]
   0x555555555ad3 <+++info symbol 0x555555555ad3
add_tail+003c> mov    rax, QWORD PTR [rbp-0x20]
   0x555555555ad7 <+++info symbol 0x555555555ad7
add_tail+0040> mov    QWORD PTR [rax], rdx
   0x555555555ada <+++info symbol 0x555555555ada
add_tail+0043> nop    
   0x555555555adb <+++info symbol 0x555555555adb
add_tail+0044> pop    rbp
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:sllist.c+48 ────
     43	 
     44	   while(p->next != head) {
     45	     p = p->next;
     46	   }
     47	 
           // node=0x00007fffffffdba0  →  [...]  →  [loop detected], p=0x00007fffffffdbb8  →  [...]  →  [loop detected]
 →   48	   node->next = p->next;
     49	 }
     50	 
     51	 // delete a node
     52	 void del_node(struct list_node *head, struct list_node *node)
     53	 {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "student.bin", stopped 0x555555555acc in add_tail (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555acc → add_tail(head=0x555555558080 <head>, node=0x555555559710)
[#1] 0x555555555834 → test2()
[#2] 0x55555555560c → main(argc=0x1, argv=0x7fffffffdd28)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+info loca
p = 0x555555558080 <head>
+p *p@2
$1 = {{
    next = 0x555555558080 <head>
  }, {
    next = 0x0
  }}
+info args
head = 0x555555558080 <head>
node = 0x555555559710
+quit

liub5@DESKTOP-34SBL6U:~/CSSE332-lab-liub5/debug$ valgrind ./student.bin
==22664== Memcheck, a memory error detector
==22664== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==22664== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==22664== Command: ./student.bin
==22664==
Test 1 (simple add_head): OK.
Test 2 (simple add_tail): OK.
Test 3 (general add and delete): OK.
==22664==
==22664== HEAP SUMMARY:
==22664==     in use at exit: 0 bytes in 0 blocks
==22664==   total heap usage: 13 allocs, 13 frees, 1,202 bytes allocated
==22664==
==22664== All heap blocks were freed -- no leaks are possible
==22664==
==22664== For lists of detected and suppressed errors, rerun with: -s
==22664== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
liub5@DESKTOP-34SBL6U:~/CSSE332-lab-liub5/debug$ valgrind ./student.bin -t 0
==22665== Memcheck, a memory error detector
==22665== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==22665== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==22665== Command: ./student.bin -t 0
==22665==
{
  Mohammad, [ 0, 2, 4 ]
  Robert  , [ 2, 4, 6 ]
  Sid     , [ 4, 6, 8 ]
  Sriram  , [ 6, 8, 10 ]
  Buffalo , [ 8, 10, 12 ]
}
==22665==
==22665== HEAP SUMMARY:
==22665==     in use at exit: 0 bytes in 0 blocks
==22665==   total heap usage: 16 allocs, 16 frees, 1,239 bytes allocated
==22665==
==22665== All heap blocks were freed -- no leaks are possible
==22665==
==22665== For lists of detected and suppressed errors, rerun with: -s
==22665== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
