+source ~/.gef/gef.py
++set confirm off
++set verbose off
++set pagination off
++set print elements 0
++set history save on
++set history filename ~/.gdb_history
++set output-radix 0x10
++set print pretty on
++set disassembly-flavor intel
++handle SIGALRM print nopass
++save gdb-index '/tmp/gef'
GEF for linux ready, type `gef' to start, `gef config' to configure
93 commands loaded and 5 functions added for GDB 12.1 in 0.00ms using Python engine 3.10
++define target hookpost-remote
++define target hookpost-extended-remote
++define hookpost-source
++pi gef.gdb.load()
Reading symbols from ./al.bin...
+set trace-commands on
+set logging file exercise1.log
+set logging enabled
Already logging to gdb.log.
+start
++entry-break
+++set stop-on-solib-events 1
+++run
Stopped due to shared library event (no libraries added or removed)
++++context
++++context
+++set stop-on-solib-events 0
+++continue
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
++++context
[H[J+++++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++++dereference -l 8 0x7fffffffdd30
++++context
[H[J+++++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++++dereference -l 8 0x7fffffffdd30
[*] PIC binary detected, retrieving text base address
[+] Breaking at entry-point: 0x555555555120
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1c              
$rbx   : 0x0               
$rcx   : 0x00007fffffffdd48  →  0x00007fffffffe001  →  "SHELL=/bin/bash"
$rdx   : 0x00007ffff7fc9040  →  <++++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$rsp   : 0x00007fffffffdd30  →  0x0000000000000001
$rbp   : 0x0               
$rsi   : 0x00007ffff7ffe888  →  0x0000000000000000
$rdi   : 0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$rip   : 0x0000555555555120  →  <++++++info symbol 0x555555555120
_start+0000> endbr64 
$r8    : 0x1               
$r9    : 0xf               
$r10   : 0x00007ffff7fc3860  →  0x000d0012000000c1
$r11   : 0x206             
$r12   : 0x0000555555555120  →  <++++++info symbol 0x555555555120
_start+0000> endbr64 
$r13   : 0x00007fffffffdd30  →  0x0000000000000001
$r14   : 0x0               
$r15   : 0x0               
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdd30│+0x0000: 0x0000000000000001	 ← $rsp, $r13
0x00007fffffffdd38│+0x0008: 0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdd40│+0x0010: 0x0000000000000000
0x00007fffffffdd48│+0x0018: 0x00007fffffffe001  →  "SHELL=/bin/bash"	 ← $rcx
0x00007fffffffdd50│+0x0020: 0x00007fffffffe011  →  "WSL2_GUI_APPS_ENABLED=1"
0x00007fffffffdd58│+0x0028: 0x00007fffffffe029  →  "WSL_DISTRO_NAME=Ubuntu-20.04"
0x00007fffffffdd60│+0x0030: 0x00007fffffffe046  →  "WT_SESSION=a54b973e-cf0a-4b47-b548-518c29e4800c"
0x00007fffffffdd68│+0x0038: 0x00007fffffffe076  →  "NAME=DESKTOP-34SBL6U"
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555110 <+++++info symbol 0x555555555110
exit@plt+0000> endbr64 
   0x555555555114 <+++++info symbol 0x555555555114
exit@plt+0004> bnd    jmp QWORD PTR [rip+0x2eb5]        # 0x555555557fd0 <exit@got.plt>
   0x55555555511b <+++++info symbol 0x55555555511b
exit@plt+000b> nop    DWORD PTR [rax+rax*1+0x0]
●→ 0x555555555120 <++++++info symbol 0x555555555120
_start+0000> endbr64 
   0x555555555124 <+++++info symbol 0x555555555124
_start+0004> xor    ebp, ebp
   0x555555555126 <+++++info symbol 0x555555555126
_start+0006> mov    r9, rdx
   0x555555555129 <+++++info symbol 0x555555555129
_start+0009> pop    rsi
   0x55555555512a <+++++info symbol 0x55555555512a
_start+000a> mov    rdx, rsp
   0x55555555512d <+++++info symbol 0x55555555512d
_start+000d> and    rsp, 0xfffffffffffffff0
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x555555555120 in _start (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555120 → _start()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1c              
$rbx   : 0x0               
$rcx   : 0x00007fffffffdd48  →  0x00007fffffffe001  →  "SHELL=/bin/bash"
$rdx   : 0x00007ffff7fc9040  →  <++++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$rsp   : 0x00007fffffffdd30  →  0x0000000000000001
$rbp   : 0x0               
$rsi   : 0x00007ffff7ffe888  →  0x0000000000000000
$rdi   : 0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$rip   : 0x0000555555555120  →  <++++++info symbol 0x555555555120
_start+0000> endbr64 
$r8    : 0x1               
$r9    : 0xf               
$r10   : 0x00007ffff7fc3860  →  0x000d0012000000c1
$r11   : 0x206             
$r12   : 0x0000555555555120  →  <++++++info symbol 0x555555555120
_start+0000> endbr64 
$r13   : 0x00007fffffffdd30  →  0x0000000000000001
$r14   : 0x0               
$r15   : 0x0               
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdd30│+0x0000: 0x0000000000000001	 ← $rsp, $r13
0x00007fffffffdd38│+0x0008: 0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdd40│+0x0010: 0x0000000000000000
0x00007fffffffdd48│+0x0018: 0x00007fffffffe001  →  "SHELL=/bin/bash"	 ← $rcx
0x00007fffffffdd50│+0x0020: 0x00007fffffffe011  →  "WSL2_GUI_APPS_ENABLED=1"
0x00007fffffffdd58│+0x0028: 0x00007fffffffe029  →  "WSL_DISTRO_NAME=Ubuntu-20.04"
0x00007fffffffdd60│+0x0030: 0x00007fffffffe046  →  "WT_SESSION=a54b973e-cf0a-4b47-b548-518c29e4800c"
0x00007fffffffdd68│+0x0038: 0x00007fffffffe076  →  "NAME=DESKTOP-34SBL6U"
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555110 <+++++info symbol 0x555555555110
exit@plt+0000> endbr64 
   0x555555555114 <+++++info symbol 0x555555555114
exit@plt+0004> bnd    jmp QWORD PTR [rip+0x2eb5]        # 0x555555557fd0 <exit@got.plt>
   0x55555555511b <+++++info symbol 0x55555555511b
exit@plt+000b> nop    DWORD PTR [rax+rax*1+0x0]
●→ 0x555555555120 <++++++info symbol 0x555555555120
_start+0000> endbr64 
   0x555555555124 <+++++info symbol 0x555555555124
_start+0004> xor    ebp, ebp
   0x555555555126 <+++++info symbol 0x555555555126
_start+0006> mov    r9, rdx
   0x555555555129 <+++++info symbol 0x555555555129
_start+0009> pop    rsi
   0x55555555512a <+++++info symbol 0x55555555512a
_start+000a> mov    rdx, rsp
   0x55555555512d <+++++info symbol 0x55555555512d
_start+000d> and    rsp, 0xfffffffffffffff0
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x555555555120 in _start (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555120 → _start()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+run
Starting program: /home/liub5/CSSE332-lab-liub5/debug/al.bin 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[Inferior 1 (process 980) exited normally]
+b main
Breakpoint 1 at 0x55555555529c: file al.c, line 73.
+run
Starting program: /home/liub5/CSSE332-lab-liub5/debug/al.bin 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=0x1, argv=0x7fffffffdd38) at al.c:73
73	  struct array_list *al = alloc_al("list", 16);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc00
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd48  →  0x00007fffffffe001  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdc00  →  0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rbp   : 0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rdi   : 0x1               
$rip   : 0x000055555555529c  →  <++++info symbol 0x55555555529c
main+0013> mov esi, 0x10
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc00│+0x0000: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"	 ← $rsp
0x00007fffffffdc08│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc10│+0x0010: 0x0000000000001000
0x00007fffffffdc18│+0x0018: 0x0000555555555120  →  <++++info symbol 0x555555555120
_start+0000> endbr64 
0x00007fffffffdc20│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc28│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc30│+0x0030: 0x0000000000000000
0x00007fffffffdc38│+0x0038: 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555291 <+++info symbol 0x555555555291
main+0008> sub    rsp, 0x20
   0x555555555295 <+++info symbol 0x555555555295
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555298 <+++info symbol 0x555555555298
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x55555555529c <++++info symbol 0x55555555529c
main+0013> mov    esi, 0x10
   0x5555555552a1 <+++info symbol 0x5555555552a1
main+0018> lea    rax, [rip+0xd96]        # 0x55555555603e
   0x5555555552a8 <+++info symbol 0x5555555552a8
main+001f> mov    rdi, rax
   0x5555555552ab <+++info symbol 0x5555555552ab
main+0022> call   0x555555555209 <alloc_al>
   0x5555555552b0 <+++info symbol 0x5555555552b0
main+0027> mov    QWORD PTR [rbp-0x8], rax
   0x5555555552b4 <+++info symbol 0x5555555552b4
main+002b> mov    DWORD PTR [rbp-0x10], 0x0
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+73 ────
     68	   * =====
     69	   * The code in main below contains another crucial bug. Use an appropriate
     70	   * tool to find and fix that bug.
     71	   */
     72	 int main(int argc, char **argv) {
           // al=0x00007fffffffdc18  →  [...]  →  <++++info symbol 0x555555555120
_start+0000> endbr64 
 →   73	   struct array_list *al = alloc_al("list", 16);
     74	 
     75	   // initialize the array list
     76	   for(int i = 0; i < al->size; i++) {
     77	     al->array[i] = i;
     78	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x55555555529c in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555529c → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc00
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd48  →  0x00007fffffffe001  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdc00  →  0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rbp   : 0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rdi   : 0x1               
$rip   : 0x000055555555529c  →  <++++info symbol 0x55555555529c
main+0013> mov esi, 0x10
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc00│+0x0000: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"	 ← $rsp
0x00007fffffffdc08│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc10│+0x0010: 0x0000000000001000
0x00007fffffffdc18│+0x0018: 0x0000555555555120  →  <++++info symbol 0x555555555120
_start+0000> endbr64 
0x00007fffffffdc20│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc28│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc30│+0x0030: 0x0000000000000000
0x00007fffffffdc38│+0x0038: 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555291 <+++info symbol 0x555555555291
main+0008> sub    rsp, 0x20
   0x555555555295 <+++info symbol 0x555555555295
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555298 <+++info symbol 0x555555555298
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x55555555529c <++++info symbol 0x55555555529c
main+0013> mov    esi, 0x10
   0x5555555552a1 <+++info symbol 0x5555555552a1
main+0018> lea    rax, [rip+0xd96]        # 0x55555555603e
   0x5555555552a8 <+++info symbol 0x5555555552a8
main+001f> mov    rdi, rax
   0x5555555552ab <+++info symbol 0x5555555552ab
main+0022> call   0x555555555209 <alloc_al>
   0x5555555552b0 <+++info symbol 0x5555555552b0
main+0027> mov    QWORD PTR [rbp-0x8], rax
   0x5555555552b4 <+++info symbol 0x5555555552b4
main+002b> mov    DWORD PTR [rbp-0x10], 0x0
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+73 ────
     68	   * =====
     69	   * The code in main below contains another crucial bug. Use an appropriate
     70	   * tool to find and fix that bug.
     71	   */
     72	 int main(int argc, char **argv) {
           // al=0x00007fffffffdc18  →  [...]  →  <++++info symbol 0x555555555120
_start+0000> endbr64 
 →   73	   struct array_list *al = alloc_al("list", 16);
     74	 
     75	   // initialize the array list
     76	   for(int i = 0; i < al->size; i++) {
     77	     al->array[i] = i;
     78	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x55555555529c in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555529c → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+info args
argc = 0x1
argv = 0x7fffffffdd38
+s
alloc_al (name=0x55555555603e "list", size=0x10) at al.c:50
50	  struct array_list *al = malloc(sizeof(struct array_list));
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x000055555555603e  →  0x206425007473696c ("list"?)
$rbx   : 0x0               
$rcx   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd48  →  0x00007fffffffe001  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbd0  →  0x00000010000006f0
$rbp   : 0x00007fffffffdbf0  →  0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x10              
$rdi   : 0x000055555555603e  →  0x206425007473696c ("list"?)
$rip   : 0x000055555555521c  →  <++++info symbol 0x55555555521c
alloc_al+0013> mov edi, 0x20
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00000010000006f0	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x000055555555603e  →  0x206425007473696c ("list"?)
0x00007fffffffdbe0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbe8│+0x0018: 0x0000010101000000
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdc20  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbf8│+0x0028: 0x00005555555552b0  →  <++++info symbol 0x5555555552b0
main+0027> mov QWORD PTR [rbp-0x8], rax
0x00007fffffffdc00│+0x0030: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdc08│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555211 <+++info symbol 0x555555555211
alloc_al+0008> sub    rsp, 0x20
   0x555555555215 <+++info symbol 0x555555555215
alloc_al+000c> mov    QWORD PTR [rbp-0x18], rdi
   0x555555555219 <+++info symbol 0x555555555219
alloc_al+0010> mov    DWORD PTR [rbp-0x1c], esi
 → 0x55555555521c <++++info symbol 0x55555555521c
alloc_al+0013> mov    edi, 0x20
   0x555555555221 <+++info symbol 0x555555555221
alloc_al+0018> call   0x5555555550f0 <malloc@plt>
   0x555555555226 <+++info symbol 0x555555555226
alloc_al+001d> mov    QWORD PTR [rbp-0x8], rax
   0x55555555522a <+++info symbol 0x55555555522a
alloc_al+0021> cmp    QWORD PTR [rbp-0x8], 0x0
   0x55555555522f <+++info symbol 0x55555555522f
alloc_al+0026> jne    0x55555555524a <alloc_al+65>
   0x555555555231 <+++info symbol 0x555555555231
alloc_al+0028> lea    rax, [rip+0xdd0]        # 0x555555556008
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+50 ────
     45	   * The code below contains ONE crucial bug. Use gdb to find the bug and fix
     46	   * it.
     47	   */
     48	 struct array_list *alloc_al(const char *name, int size)
     49	 {
           // al=0x00007fffffffdbe8  →  0x0000010101000000
 →   50	   struct array_list *al = malloc(sizeof(struct array_list));
     51	   if(!al) {
     52	     perror("PANIC: malloc failed, we didn't learn what to do here");
     53	     exit(EXIT_FAILURE);
     54	   }
     55	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x55555555521c in alloc_al (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555521c → alloc_al(name=0x55555555603e "list", size=0x10)
[#1] 0x5555555552b0 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x000055555555603e  →  0x206425007473696c ("list"?)
$rbx   : 0x0               
$rcx   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd48  →  0x00007fffffffe001  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbd0  →  0x00000010000006f0
$rbp   : 0x00007fffffffdbf0  →  0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x10              
$rdi   : 0x000055555555603e  →  0x206425007473696c ("list"?)
$rip   : 0x000055555555521c  →  <++++info symbol 0x55555555521c
alloc_al+0013> mov edi, 0x20
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00000010000006f0	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x000055555555603e  →  0x206425007473696c ("list"?)
0x00007fffffffdbe0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbe8│+0x0018: 0x0000010101000000
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdc20  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbf8│+0x0028: 0x00005555555552b0  →  <++++info symbol 0x5555555552b0
main+0027> mov QWORD PTR [rbp-0x8], rax
0x00007fffffffdc00│+0x0030: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdc08│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555211 <+++info symbol 0x555555555211
alloc_al+0008> sub    rsp, 0x20
   0x555555555215 <+++info symbol 0x555555555215
alloc_al+000c> mov    QWORD PTR [rbp-0x18], rdi
   0x555555555219 <+++info symbol 0x555555555219
alloc_al+0010> mov    DWORD PTR [rbp-0x1c], esi
 → 0x55555555521c <++++info symbol 0x55555555521c
alloc_al+0013> mov    edi, 0x20
   0x555555555221 <+++info symbol 0x555555555221
alloc_al+0018> call   0x5555555550f0 <malloc@plt>
   0x555555555226 <+++info symbol 0x555555555226
alloc_al+001d> mov    QWORD PTR [rbp-0x8], rax
   0x55555555522a <+++info symbol 0x55555555522a
alloc_al+0021> cmp    QWORD PTR [rbp-0x8], 0x0
   0x55555555522f <+++info symbol 0x55555555522f
alloc_al+0026> jne    0x55555555524a <alloc_al+65>
   0x555555555231 <+++info symbol 0x555555555231
alloc_al+0028> lea    rax, [rip+0xdd0]        # 0x555555556008
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+50 ────
     45	   * The code below contains ONE crucial bug. Use gdb to find the bug and fix
     46	   * it.
     47	   */
     48	 struct array_list *alloc_al(const char *name, int size)
     49	 {
           // al=0x00007fffffffdbe8  →  0x0000010101000000
 →   50	   struct array_list *al = malloc(sizeof(struct array_list));
     51	   if(!al) {
     52	     perror("PANIC: malloc failed, we didn't learn what to do here");
     53	     exit(EXIT_FAILURE);
     54	   }
     55	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x55555555521c in alloc_al (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555521c → alloc_al(name=0x55555555603e "list", size=0x10)
[#1] 0x5555555552b0 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
51	  if(!al) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000000000000000
$rbx   : 0x0               
$rcx   : 0x31              
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00000010000006f0
$rbp   : 0x00007fffffffdbf0  →  0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x00005555555592c0  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x000055555555522a  →  <++++info symbol 0x55555555522a
alloc_al+0021> cmp QWORD PTR [rbp-0x8], 0x0
$r8    : 0x21001           
$r9    : 0x00005555555592a0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592c0  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00000010000006f0	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x000055555555603e  →  0x206425007473696c ("list"?)
0x00007fffffffdbe0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbe8│+0x0018: 0x00005555555592a0  →  0x0000000000000000
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdc20  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbf8│+0x0028: 0x00005555555552b0  →  <++++info symbol 0x5555555552b0
main+0027> mov QWORD PTR [rbp-0x8], rax
0x00007fffffffdc00│+0x0030: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdc08│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555521c <+++info symbol 0x55555555521c
alloc_al+0013> mov    edi, 0x20
   0x555555555221 <+++info symbol 0x555555555221
alloc_al+0018> call   0x5555555550f0 <malloc@plt>
   0x555555555226 <+++info symbol 0x555555555226
alloc_al+001d> mov    QWORD PTR [rbp-0x8], rax
 → 0x55555555522a <++++info symbol 0x55555555522a
alloc_al+0021> cmp    QWORD PTR [rbp-0x8], 0x0
   0x55555555522f <+++info symbol 0x55555555522f
alloc_al+0026> jne    0x55555555524a <alloc_al+65>
   0x555555555231 <+++info symbol 0x555555555231
alloc_al+0028> lea    rax, [rip+0xdd0]        # 0x555555556008
   0x555555555238 <+++info symbol 0x555555555238
alloc_al+002f> mov    rdi, rax
   0x55555555523b <+++info symbol 0x55555555523b
alloc_al+0032> call   0x555555555100 <perror@plt>
   0x555555555240 <+++info symbol 0x555555555240
alloc_al+0037> mov    edi, 0x1
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+51 ────
     46	   * it.
     47	   */
     48	 struct array_list *alloc_al(const char *name, int size)
     49	 {
     50	   struct array_list *al = malloc(sizeof(struct array_list));
           // al=0x00007fffffffdbe8  →  [...]  →  0x0000000000000000
 →   51	   if(!al) {
     52	     perror("PANIC: malloc failed, we didn't learn what to do here");
     53	     exit(EXIT_FAILURE);
     54	   }
     55	 
     56	   strcpy(al->name, name);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x55555555522a in alloc_al (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555522a → alloc_al(name=0x55555555603e "list", size=0x10)
[#1] 0x5555555552b0 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000000000000000
$rbx   : 0x0               
$rcx   : 0x31              
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00000010000006f0
$rbp   : 0x00007fffffffdbf0  →  0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x00005555555592c0  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x000055555555522a  →  <++++info symbol 0x55555555522a
alloc_al+0021> cmp QWORD PTR [rbp-0x8], 0x0
$r8    : 0x21001           
$r9    : 0x00005555555592a0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592c0  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00000010000006f0	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x000055555555603e  →  0x206425007473696c ("list"?)
0x00007fffffffdbe0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbe8│+0x0018: 0x00005555555592a0  →  0x0000000000000000
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdc20  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbf8│+0x0028: 0x00005555555552b0  →  <++++info symbol 0x5555555552b0
main+0027> mov QWORD PTR [rbp-0x8], rax
0x00007fffffffdc00│+0x0030: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdc08│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555521c <+++info symbol 0x55555555521c
alloc_al+0013> mov    edi, 0x20
   0x555555555221 <+++info symbol 0x555555555221
alloc_al+0018> call   0x5555555550f0 <malloc@plt>
   0x555555555226 <+++info symbol 0x555555555226
alloc_al+001d> mov    QWORD PTR [rbp-0x8], rax
 → 0x55555555522a <++++info symbol 0x55555555522a
alloc_al+0021> cmp    QWORD PTR [rbp-0x8], 0x0
   0x55555555522f <+++info symbol 0x55555555522f
alloc_al+0026> jne    0x55555555524a <alloc_al+65>
   0x555555555231 <+++info symbol 0x555555555231
alloc_al+0028> lea    rax, [rip+0xdd0]        # 0x555555556008
   0x555555555238 <+++info symbol 0x555555555238
alloc_al+002f> mov    rdi, rax
   0x55555555523b <+++info symbol 0x55555555523b
alloc_al+0032> call   0x555555555100 <perror@plt>
   0x555555555240 <+++info symbol 0x555555555240
alloc_al+0037> mov    edi, 0x1
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+51 ────
     46	   * it.
     47	   */
     48	 struct array_list *alloc_al(const char *name, int size)
     49	 {
     50	   struct array_list *al = malloc(sizeof(struct array_list));
           // al=0x00007fffffffdbe8  →  [...]  →  0x0000000000000000
 →   51	   if(!al) {
     52	     perror("PANIC: malloc failed, we didn't learn what to do here");
     53	     exit(EXIT_FAILURE);
     54	   }
     55	 
     56	   strcpy(al->name, name);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x55555555522a in alloc_al (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555522a → alloc_al(name=0x55555555603e "list", size=0x10)
[#1] 0x5555555552b0 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
56	  strcpy(al->name, name);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000000000000000
$rbx   : 0x0               
$rcx   : 0x31              
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00000010000006f0
$rbp   : 0x00007fffffffdbf0  →  0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x00005555555592c0  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x000055555555524a  →  <++++info symbol 0x55555555524a
alloc_al+0041> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x21001           
$r9    : 0x00005555555592a0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592c0  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00000010000006f0	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x000055555555603e  →  0x206425007473696c ("list"?)
0x00007fffffffdbe0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbe8│+0x0018: 0x00005555555592a0  →  0x0000000000000000
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdc20  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbf8│+0x0028: 0x00005555555552b0  →  <++++info symbol 0x5555555552b0
main+0027> mov QWORD PTR [rbp-0x8], rax
0x00007fffffffdc00│+0x0030: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdc08│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555523b <+++info symbol 0x55555555523b
alloc_al+0032> call   0x555555555100 <perror@plt>
   0x555555555240 <+++info symbol 0x555555555240
alloc_al+0037> mov    edi, 0x1
   0x555555555245 <+++info symbol 0x555555555245
alloc_al+003c> call   0x555555555110 <exit@plt>
 → 0x55555555524a <++++info symbol 0x55555555524a
alloc_al+0041> mov    rax, QWORD PTR [rbp-0x8]
   0x55555555524e <+++info symbol 0x55555555524e
alloc_al+0045> mov    rdx, QWORD PTR [rbp-0x18]
   0x555555555252 <+++info symbol 0x555555555252
alloc_al+0049> mov    rsi, rdx
   0x555555555255 <+++info symbol 0x555555555255
alloc_al+004c> mov    rdi, rax
   0x555555555258 <+++info symbol 0x555555555258
alloc_al+004f> call   0x5555555550d0 <strcpy@plt>
   0x55555555525d <+++info symbol 0x55555555525d
alloc_al+0054> mov    rax, QWORD PTR [rbp-0x8]
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+56 ────
     51	   if(!al) {
     52	     perror("PANIC: malloc failed, we didn't learn what to do here");
     53	     exit(EXIT_FAILURE);
     54	   }
     55	 
           // name=0x00007fffffffdbd8  →  [...]  →  0x206425007473696c ("list"?), al=0x00007fffffffdbe8  →  [...]  →  0x0000000000000000
 →   56	   strcpy(al->name, name);
     57	   al->size = size;
     58	   al->array = malloc(size * sizeof(int));
     59	   return al;
     60	 }
     61	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x55555555524a in alloc_al (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555524a → alloc_al(name=0x55555555603e "list", size=0x10)
[#1] 0x5555555552b0 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000000000000000
$rbx   : 0x0               
$rcx   : 0x31              
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00000010000006f0
$rbp   : 0x00007fffffffdbf0  →  0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x00005555555592c0  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x000055555555524a  →  <++++info symbol 0x55555555524a
alloc_al+0041> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x21001           
$r9    : 0x00005555555592a0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592c0  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00000010000006f0	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x000055555555603e  →  0x206425007473696c ("list"?)
0x00007fffffffdbe0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbe8│+0x0018: 0x00005555555592a0  →  0x0000000000000000
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdc20  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbf8│+0x0028: 0x00005555555552b0  →  <++++info symbol 0x5555555552b0
main+0027> mov QWORD PTR [rbp-0x8], rax
0x00007fffffffdc00│+0x0030: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdc08│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555523b <+++info symbol 0x55555555523b
alloc_al+0032> call   0x555555555100 <perror@plt>
   0x555555555240 <+++info symbol 0x555555555240
alloc_al+0037> mov    edi, 0x1
   0x555555555245 <+++info symbol 0x555555555245
alloc_al+003c> call   0x555555555110 <exit@plt>
 → 0x55555555524a <++++info symbol 0x55555555524a
alloc_al+0041> mov    rax, QWORD PTR [rbp-0x8]
   0x55555555524e <+++info symbol 0x55555555524e
alloc_al+0045> mov    rdx, QWORD PTR [rbp-0x18]
   0x555555555252 <+++info symbol 0x555555555252
alloc_al+0049> mov    rsi, rdx
   0x555555555255 <+++info symbol 0x555555555255
alloc_al+004c> mov    rdi, rax
   0x555555555258 <+++info symbol 0x555555555258
alloc_al+004f> call   0x5555555550d0 <strcpy@plt>
   0x55555555525d <+++info symbol 0x55555555525d
alloc_al+0054> mov    rax, QWORD PTR [rbp-0x8]
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+56 ────
     51	   if(!al) {
     52	     perror("PANIC: malloc failed, we didn't learn what to do here");
     53	     exit(EXIT_FAILURE);
     54	   }
     55	 
           // name=0x00007fffffffdbd8  →  [...]  →  0x206425007473696c ("list"?), al=0x00007fffffffdbe8  →  [...]  →  0x0000000000000000
 →   56	   strcpy(al->name, name);
     57	   al->size = size;
     58	   al->array = malloc(size * sizeof(int));
     59	   return al;
     60	 }
     61	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x55555555524a in alloc_al (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555524a → alloc_al(name=0x55555555603e "list", size=0x10)
[#1] 0x5555555552b0 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+quit
+source ~/.gef/gef.py
++set confirm off
++set verbose off
++set pagination off
++set print elements 0
++set history save on
++set history filename ~/.gdb_history
++set output-radix 0x10
++set print pretty on
++set disassembly-flavor intel
++handle SIGALRM print nopass
++save gdb-index '/tmp/gef'
GEF for linux ready, type `gef' to start, `gef config' to configure
93 commands loaded and 5 functions added for GDB 12.1 in 0.00ms using Python engine 3.10
++define target hookpost-remote
++define target hookpost-extended-remote
++define hookpost-source
++pi gef.gdb.load()
Reading symbols from ./al.bin...
+b main
Breakpoint 1 at 0x129c: file al.c, line 73.
+run
Starting program: /home/liub5/CSSE332-lab-liub5/debug/al.bin 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (argc=0x1, argv=0x7fffffffdd38) at al.c:73
73	  struct array_list *al = alloc_al("list", 16);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc00
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd48  →  0x00007fffffffe001  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdc00  →  0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rbp   : 0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rdi   : 0x1               
$rip   : 0x000055555555529c  →  <++++info symbol 0x55555555529c
main+0013> mov esi, 0x10
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc00│+0x0000: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"	 ← $rsp
0x00007fffffffdc08│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc10│+0x0010: 0x0000000000001000
0x00007fffffffdc18│+0x0018: 0x0000555555555120  →  <++++info symbol 0x555555555120
_start+0000> endbr64 
0x00007fffffffdc20│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc28│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc30│+0x0030: 0x0000000000000000
0x00007fffffffdc38│+0x0038: 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555291 <+++info symbol 0x555555555291
main+0008> sub    rsp, 0x20
   0x555555555295 <+++info symbol 0x555555555295
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555298 <+++info symbol 0x555555555298
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x55555555529c <++++info symbol 0x55555555529c
main+0013> mov    esi, 0x10
   0x5555555552a1 <+++info symbol 0x5555555552a1
main+0018> lea    rax, [rip+0xd96]        # 0x55555555603e
   0x5555555552a8 <+++info symbol 0x5555555552a8
main+001f> mov    rdi, rax
   0x5555555552ab <+++info symbol 0x5555555552ab
main+0022> call   0x555555555209 <alloc_al>
   0x5555555552b0 <+++info symbol 0x5555555552b0
main+0027> mov    QWORD PTR [rbp-0x8], rax
   0x5555555552b4 <+++info symbol 0x5555555552b4
main+002b> mov    DWORD PTR [rbp-0x10], 0x0
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+73 ────
     68	   * =====
     69	   * The code in main below contains another crucial bug. Use an appropriate
     70	   * tool to find and fix that bug.
     71	   */
     72	 int main(int argc, char **argv) {
           // al=0x00007fffffffdc18  →  [...]  →  <++++info symbol 0x555555555120
_start+0000> endbr64 
 →   73	   struct array_list *al = alloc_al("list", 16);
     74	 
     75	   // initialize the array list
     76	   for(int i = 0; i < al->size; i++) {
     77	     al->array[i] = i;
     78	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x55555555529c in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555529c → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc00
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd48  →  0x00007fffffffe001  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdc00  →  0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rbp   : 0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rdi   : 0x1               
$rip   : 0x000055555555529c  →  <++++info symbol 0x55555555529c
main+0013> mov esi, 0x10
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc00│+0x0000: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"	 ← $rsp
0x00007fffffffdc08│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc10│+0x0010: 0x0000000000001000
0x00007fffffffdc18│+0x0018: 0x0000555555555120  →  <++++info symbol 0x555555555120
_start+0000> endbr64 
0x00007fffffffdc20│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc28│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc30│+0x0030: 0x0000000000000000
0x00007fffffffdc38│+0x0038: 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555291 <+++info symbol 0x555555555291
main+0008> sub    rsp, 0x20
   0x555555555295 <+++info symbol 0x555555555295
main+000c> mov    DWORD PTR [rbp-0x14], edi
   0x555555555298 <+++info symbol 0x555555555298
main+000f> mov    QWORD PTR [rbp-0x20], rsi
 → 0x55555555529c <++++info symbol 0x55555555529c
main+0013> mov    esi, 0x10
   0x5555555552a1 <+++info symbol 0x5555555552a1
main+0018> lea    rax, [rip+0xd96]        # 0x55555555603e
   0x5555555552a8 <+++info symbol 0x5555555552a8
main+001f> mov    rdi, rax
   0x5555555552ab <+++info symbol 0x5555555552ab
main+0022> call   0x555555555209 <alloc_al>
   0x5555555552b0 <+++info symbol 0x5555555552b0
main+0027> mov    QWORD PTR [rbp-0x8], rax
   0x5555555552b4 <+++info symbol 0x5555555552b4
main+002b> mov    DWORD PTR [rbp-0x10], 0x0
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+73 ────
     68	   * =====
     69	   * The code in main below contains another crucial bug. Use an appropriate
     70	   * tool to find and fix that bug.
     71	   */
     72	 int main(int argc, char **argv) {
           // al=0x00007fffffffdc18  →  [...]  →  <++++info symbol 0x555555555120
_start+0000> endbr64 
 →   73	   struct array_list *al = alloc_al("list", 16);
     74	 
     75	   // initialize the array list
     76	   for(int i = 0; i < al->size; i++) {
     77	     al->array[i] = i;
     78	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x55555555529c in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555529c → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
alloc_al (name=0x55555555603e "list", size=0x10) at al.c:50
50	  struct array_list *al = malloc(sizeof(struct array_list));
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x000055555555603e  →  0x206425007473696c ("list"?)
$rbx   : 0x0               
$rcx   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd48  →  0x00007fffffffe001  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbd0  →  0x00000010000006f0
$rbp   : 0x00007fffffffdbf0  →  0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x10              
$rdi   : 0x000055555555603e  →  0x206425007473696c ("list"?)
$rip   : 0x000055555555521c  →  <++++info symbol 0x55555555521c
alloc_al+0013> mov edi, 0x20
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00000010000006f0	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x000055555555603e  →  0x206425007473696c ("list"?)
0x00007fffffffdbe0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbe8│+0x0018: 0x0000010101000000
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdc20  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbf8│+0x0028: 0x00005555555552b0  →  <++++info symbol 0x5555555552b0
main+0027> mov QWORD PTR [rbp-0x8], rax
0x00007fffffffdc00│+0x0030: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdc08│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555211 <+++info symbol 0x555555555211
alloc_al+0008> sub    rsp, 0x20
   0x555555555215 <+++info symbol 0x555555555215
alloc_al+000c> mov    QWORD PTR [rbp-0x18], rdi
   0x555555555219 <+++info symbol 0x555555555219
alloc_al+0010> mov    DWORD PTR [rbp-0x1c], esi
 → 0x55555555521c <++++info symbol 0x55555555521c
alloc_al+0013> mov    edi, 0x20
   0x555555555221 <+++info symbol 0x555555555221
alloc_al+0018> call   0x5555555550f0 <malloc@plt>
   0x555555555226 <+++info symbol 0x555555555226
alloc_al+001d> mov    QWORD PTR [rbp-0x8], rax
   0x55555555522a <+++info symbol 0x55555555522a
alloc_al+0021> cmp    QWORD PTR [rbp-0x8], 0x0
   0x55555555522f <+++info symbol 0x55555555522f
alloc_al+0026> jne    0x55555555524a <alloc_al+65>
   0x555555555231 <+++info symbol 0x555555555231
alloc_al+0028> lea    rax, [rip+0xdd0]        # 0x555555556008
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+50 ────
     45	   * The code below contains ONE crucial bug. Use gdb to find the bug and fix
     46	   * it.
     47	   */
     48	 struct array_list *alloc_al(const char *name, int size)
     49	 {
           // al=0x00007fffffffdbe8  →  0x0000010101000000
 →   50	   struct array_list *al = malloc(sizeof(struct array_list));
     51	   if(!al) {
     52	     perror("PANIC: malloc failed, we didn't learn what to do here");
     53	     exit(EXIT_FAILURE);
     54	   }
     55	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x55555555521c in alloc_al (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555521c → alloc_al(name=0x55555555603e "list", size=0x10)
[#1] 0x5555555552b0 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x000055555555603e  →  0x206425007473696c ("list"?)
$rbx   : 0x0               
$rcx   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd48  →  0x00007fffffffe001  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbd0  →  0x00000010000006f0
$rbp   : 0x00007fffffffdbf0  →  0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x10              
$rdi   : 0x000055555555603e  →  0x206425007473696c ("list"?)
$rip   : 0x000055555555521c  →  <++++info symbol 0x55555555521c
alloc_al+0013> mov edi, 0x20
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00000010000006f0	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x000055555555603e  →  0x206425007473696c ("list"?)
0x00007fffffffdbe0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbe8│+0x0018: 0x0000010101000000
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdc20  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbf8│+0x0028: 0x00005555555552b0  →  <++++info symbol 0x5555555552b0
main+0027> mov QWORD PTR [rbp-0x8], rax
0x00007fffffffdc00│+0x0030: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdc08│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555211 <+++info symbol 0x555555555211
alloc_al+0008> sub    rsp, 0x20
   0x555555555215 <+++info symbol 0x555555555215
alloc_al+000c> mov    QWORD PTR [rbp-0x18], rdi
   0x555555555219 <+++info symbol 0x555555555219
alloc_al+0010> mov    DWORD PTR [rbp-0x1c], esi
 → 0x55555555521c <++++info symbol 0x55555555521c
alloc_al+0013> mov    edi, 0x20
   0x555555555221 <+++info symbol 0x555555555221
alloc_al+0018> call   0x5555555550f0 <malloc@plt>
   0x555555555226 <+++info symbol 0x555555555226
alloc_al+001d> mov    QWORD PTR [rbp-0x8], rax
   0x55555555522a <+++info symbol 0x55555555522a
alloc_al+0021> cmp    QWORD PTR [rbp-0x8], 0x0
   0x55555555522f <+++info symbol 0x55555555522f
alloc_al+0026> jne    0x55555555524a <alloc_al+65>
   0x555555555231 <+++info symbol 0x555555555231
alloc_al+0028> lea    rax, [rip+0xdd0]        # 0x555555556008
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+50 ────
     45	   * The code below contains ONE crucial bug. Use gdb to find the bug and fix
     46	   * it.
     47	   */
     48	 struct array_list *alloc_al(const char *name, int size)
     49	 {
           // al=0x00007fffffffdbe8  →  0x0000010101000000
 →   50	   struct array_list *al = malloc(sizeof(struct array_list));
     51	   if(!al) {
     52	     perror("PANIC: malloc failed, we didn't learn what to do here");
     53	     exit(EXIT_FAILURE);
     54	   }
     55	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x55555555521c in alloc_al (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555521c → alloc_al(name=0x55555555603e "list", size=0x10)
[#1] 0x5555555552b0 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+info local
al = 0x10101000000
+info argv
Undefined info command: "argv".  Try "help info".
+info argvs
Undefined info command: "argvs".  Try "help info".
+info args
name = 0x55555555603e "list"
size = 0x10
+n
51	  if(!al) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000000000000000
$rbx   : 0x0               
$rcx   : 0x31              
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00000010000006f0
$rbp   : 0x00007fffffffdbf0  →  0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x00005555555592c0  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x000055555555522a  →  <++++info symbol 0x55555555522a
alloc_al+0021> cmp QWORD PTR [rbp-0x8], 0x0
$r8    : 0x21001           
$r9    : 0x00005555555592a0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592c0  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00000010000006f0	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x000055555555603e  →  0x206425007473696c ("list"?)
0x00007fffffffdbe0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbe8│+0x0018: 0x00005555555592a0  →  0x0000000000000000
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdc20  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbf8│+0x0028: 0x00005555555552b0  →  <++++info symbol 0x5555555552b0
main+0027> mov QWORD PTR [rbp-0x8], rax
0x00007fffffffdc00│+0x0030: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdc08│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555521c <+++info symbol 0x55555555521c
alloc_al+0013> mov    edi, 0x20
   0x555555555221 <+++info symbol 0x555555555221
alloc_al+0018> call   0x5555555550f0 <malloc@plt>
   0x555555555226 <+++info symbol 0x555555555226
alloc_al+001d> mov    QWORD PTR [rbp-0x8], rax
 → 0x55555555522a <++++info symbol 0x55555555522a
alloc_al+0021> cmp    QWORD PTR [rbp-0x8], 0x0
   0x55555555522f <+++info symbol 0x55555555522f
alloc_al+0026> jne    0x55555555524a <alloc_al+65>
   0x555555555231 <+++info symbol 0x555555555231
alloc_al+0028> lea    rax, [rip+0xdd0]        # 0x555555556008
   0x555555555238 <+++info symbol 0x555555555238
alloc_al+002f> mov    rdi, rax
   0x55555555523b <+++info symbol 0x55555555523b
alloc_al+0032> call   0x555555555100 <perror@plt>
   0x555555555240 <+++info symbol 0x555555555240
alloc_al+0037> mov    edi, 0x1
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+51 ────
     46	   * it.
     47	   */
     48	 struct array_list *alloc_al(const char *name, int size)
     49	 {
     50	   struct array_list *al = malloc(sizeof(struct array_list));
           // al=0x00007fffffffdbe8  →  [...]  →  0x0000000000000000
 →   51	   if(!al) {
     52	     perror("PANIC: malloc failed, we didn't learn what to do here");
     53	     exit(EXIT_FAILURE);
     54	   }
     55	 
     56	   strcpy(al->name, name);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x55555555522a in alloc_al (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555522a → alloc_al(name=0x55555555603e "list", size=0x10)
[#1] 0x5555555552b0 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000000000000000
$rbx   : 0x0               
$rcx   : 0x31              
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00000010000006f0
$rbp   : 0x00007fffffffdbf0  →  0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x00005555555592c0  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x000055555555522a  →  <++++info symbol 0x55555555522a
alloc_al+0021> cmp QWORD PTR [rbp-0x8], 0x0
$r8    : 0x21001           
$r9    : 0x00005555555592a0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592c0  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00000010000006f0	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x000055555555603e  →  0x206425007473696c ("list"?)
0x00007fffffffdbe0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbe8│+0x0018: 0x00005555555592a0  →  0x0000000000000000
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdc20  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbf8│+0x0028: 0x00005555555552b0  →  <++++info symbol 0x5555555552b0
main+0027> mov QWORD PTR [rbp-0x8], rax
0x00007fffffffdc00│+0x0030: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdc08│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555521c <+++info symbol 0x55555555521c
alloc_al+0013> mov    edi, 0x20
   0x555555555221 <+++info symbol 0x555555555221
alloc_al+0018> call   0x5555555550f0 <malloc@plt>
   0x555555555226 <+++info symbol 0x555555555226
alloc_al+001d> mov    QWORD PTR [rbp-0x8], rax
 → 0x55555555522a <++++info symbol 0x55555555522a
alloc_al+0021> cmp    QWORD PTR [rbp-0x8], 0x0
   0x55555555522f <+++info symbol 0x55555555522f
alloc_al+0026> jne    0x55555555524a <alloc_al+65>
   0x555555555231 <+++info symbol 0x555555555231
alloc_al+0028> lea    rax, [rip+0xdd0]        # 0x555555556008
   0x555555555238 <+++info symbol 0x555555555238
alloc_al+002f> mov    rdi, rax
   0x55555555523b <+++info symbol 0x55555555523b
alloc_al+0032> call   0x555555555100 <perror@plt>
   0x555555555240 <+++info symbol 0x555555555240
alloc_al+0037> mov    edi, 0x1
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+51 ────
     46	   * it.
     47	   */
     48	 struct array_list *alloc_al(const char *name, int size)
     49	 {
     50	   struct array_list *al = malloc(sizeof(struct array_list));
           // al=0x00007fffffffdbe8  →  [...]  →  0x0000000000000000
 →   51	   if(!al) {
     52	     perror("PANIC: malloc failed, we didn't learn what to do here");
     53	     exit(EXIT_FAILURE);
     54	   }
     55	 
     56	   strcpy(al->name, name);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x55555555522a in alloc_al (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555522a → alloc_al(name=0x55555555603e "list", size=0x10)
[#1] 0x5555555552b0 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
56	  strcpy(al->name, name);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000000000000000
$rbx   : 0x0               
$rcx   : 0x31              
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00000010000006f0
$rbp   : 0x00007fffffffdbf0  →  0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x00005555555592c0  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x000055555555524a  →  <++++info symbol 0x55555555524a
alloc_al+0041> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x21001           
$r9    : 0x00005555555592a0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592c0  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00000010000006f0	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x000055555555603e  →  0x206425007473696c ("list"?)
0x00007fffffffdbe0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbe8│+0x0018: 0x00005555555592a0  →  0x0000000000000000
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdc20  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbf8│+0x0028: 0x00005555555552b0  →  <++++info symbol 0x5555555552b0
main+0027> mov QWORD PTR [rbp-0x8], rax
0x00007fffffffdc00│+0x0030: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdc08│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555523b <+++info symbol 0x55555555523b
alloc_al+0032> call   0x555555555100 <perror@plt>
   0x555555555240 <+++info symbol 0x555555555240
alloc_al+0037> mov    edi, 0x1
   0x555555555245 <+++info symbol 0x555555555245
alloc_al+003c> call   0x555555555110 <exit@plt>
 → 0x55555555524a <++++info symbol 0x55555555524a
alloc_al+0041> mov    rax, QWORD PTR [rbp-0x8]
   0x55555555524e <+++info symbol 0x55555555524e
alloc_al+0045> mov    rdx, QWORD PTR [rbp-0x18]
   0x555555555252 <+++info symbol 0x555555555252
alloc_al+0049> mov    rsi, rdx
   0x555555555255 <+++info symbol 0x555555555255
alloc_al+004c> mov    rdi, rax
   0x555555555258 <+++info symbol 0x555555555258
alloc_al+004f> call   0x5555555550d0 <strcpy@plt>
   0x55555555525d <+++info symbol 0x55555555525d
alloc_al+0054> mov    rax, QWORD PTR [rbp-0x8]
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+56 ────
     51	   if(!al) {
     52	     perror("PANIC: malloc failed, we didn't learn what to do here");
     53	     exit(EXIT_FAILURE);
     54	   }
     55	 
           // name=0x00007fffffffdbd8  →  [...]  →  0x206425007473696c ("list"?), al=0x00007fffffffdbe8  →  [...]  →  0x0000000000000000
 →   56	   strcpy(al->name, name);
     57	   al->size = size;
     58	   al->array = malloc(size * sizeof(int));
     59	   return al;
     60	 }
     61	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x55555555524a in alloc_al (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555524a → alloc_al(name=0x55555555603e "list", size=0x10)
[#1] 0x5555555552b0 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x0000000000000000
$rbx   : 0x0               
$rcx   : 0x31              
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00000010000006f0
$rbp   : 0x00007fffffffdbf0  →  0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x00005555555592c0  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x000055555555524a  →  <++++info symbol 0x55555555524a
alloc_al+0041> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x21001           
$r9    : 0x00005555555592a0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592c0  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00000010000006f0	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x000055555555603e  →  0x206425007473696c ("list"?)
0x00007fffffffdbe0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbe8│+0x0018: 0x00005555555592a0  →  0x0000000000000000
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdc20  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbf8│+0x0028: 0x00005555555552b0  →  <++++info symbol 0x5555555552b0
main+0027> mov QWORD PTR [rbp-0x8], rax
0x00007fffffffdc00│+0x0030: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdc08│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555523b <+++info symbol 0x55555555523b
alloc_al+0032> call   0x555555555100 <perror@plt>
   0x555555555240 <+++info symbol 0x555555555240
alloc_al+0037> mov    edi, 0x1
   0x555555555245 <+++info symbol 0x555555555245
alloc_al+003c> call   0x555555555110 <exit@plt>
 → 0x55555555524a <++++info symbol 0x55555555524a
alloc_al+0041> mov    rax, QWORD PTR [rbp-0x8]
   0x55555555524e <+++info symbol 0x55555555524e
alloc_al+0045> mov    rdx, QWORD PTR [rbp-0x18]
   0x555555555252 <+++info symbol 0x555555555252
alloc_al+0049> mov    rsi, rdx
   0x555555555255 <+++info symbol 0x555555555255
alloc_al+004c> mov    rdi, rax
   0x555555555258 <+++info symbol 0x555555555258
alloc_al+004f> call   0x5555555550d0 <strcpy@plt>
   0x55555555525d <+++info symbol 0x55555555525d
alloc_al+0054> mov    rax, QWORD PTR [rbp-0x8]
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+56 ────
     51	   if(!al) {
     52	     perror("PANIC: malloc failed, we didn't learn what to do here");
     53	     exit(EXIT_FAILURE);
     54	   }
     55	 
           // name=0x00007fffffffdbd8  →  [...]  →  0x206425007473696c ("list"?), al=0x00007fffffffdbe8  →  [...]  →  0x0000000000000000
 →   56	   strcpy(al->name, name);
     57	   al->size = size;
     58	   al->array = malloc(size * sizeof(int));
     59	   return al;
     60	 }
     61	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x55555555524a in alloc_al (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555524a → alloc_al(name=0x55555555603e "list", size=0x10)
[#1] 0x5555555552b0 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
57	  al->size = size;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x000000007473696c ("list"?)
$rbx   : 0x0               
$rcx   : 0x747369          
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbd0  →  0x00000010000006f0
$rbp   : 0x00007fffffffdbf0  →  0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x000055555555603e  →  0x206425007473696c ("list"?)
$rdi   : 0x00005555555592a0  →  0x000000007473696c ("list"?)
$rip   : 0x000055555555525d  →  <++++info symbol 0x55555555525d
alloc_al+0054> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x21001           
$r9    : 0x00005555555592a0  →  0x000000007473696c ("list"?)
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592c0  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00000010000006f0	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x000055555555603e  →  0x206425007473696c ("list"?)
0x00007fffffffdbe0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbe8│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdc20  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbf8│+0x0028: 0x00005555555552b0  →  <++++info symbol 0x5555555552b0
main+0027> mov QWORD PTR [rbp-0x8], rax
0x00007fffffffdc00│+0x0030: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdc08│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555252 <+++info symbol 0x555555555252
alloc_al+0049> mov    rsi, rdx
   0x555555555255 <+++info symbol 0x555555555255
alloc_al+004c> mov    rdi, rax
   0x555555555258 <+++info symbol 0x555555555258
alloc_al+004f> call   0x5555555550d0 <strcpy@plt>
 → 0x55555555525d <++++info symbol 0x55555555525d
alloc_al+0054> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555261 <+++info symbol 0x555555555261
alloc_al+0058> mov    edx, DWORD PTR [rbp-0x1c]
   0x555555555264 <+++info symbol 0x555555555264
alloc_al+005b> mov    DWORD PTR [rax+0x10], edx
   0x555555555267 <+++info symbol 0x555555555267
alloc_al+005e> mov    eax, DWORD PTR [rbp-0x1c]
   0x55555555526a <+++info symbol 0x55555555526a
alloc_al+0061> cdqe   
   0x55555555526c <+++info symbol 0x55555555526c
alloc_al+0063> shl    rax, 0x2
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+57 ────
     52	     perror("PANIC: malloc failed, we didn't learn what to do here");
     53	     exit(EXIT_FAILURE);
     54	   }
     55	 
     56	   strcpy(al->name, name);
           // size=0x10, al=0x00007fffffffdbe8  →  [...]  →  0x000000007473696c ("list"?)
 →   57	   al->size = size;
     58	   al->array = malloc(size * sizeof(int));
     59	   return al;
     60	 }
     61	 
     62	 /**
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x55555555525d in alloc_al (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555525d → alloc_al(name=0x55555555603e "list", size=0x10)
[#1] 0x5555555552b0 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x000000007473696c ("list"?)
$rbx   : 0x0               
$rcx   : 0x747369          
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbd0  →  0x00000010000006f0
$rbp   : 0x00007fffffffdbf0  →  0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x000055555555603e  →  0x206425007473696c ("list"?)
$rdi   : 0x00005555555592a0  →  0x000000007473696c ("list"?)
$rip   : 0x000055555555525d  →  <++++info symbol 0x55555555525d
alloc_al+0054> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x21001           
$r9    : 0x00005555555592a0  →  0x000000007473696c ("list"?)
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592c0  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00000010000006f0	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x000055555555603e  →  0x206425007473696c ("list"?)
0x00007fffffffdbe0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbe8│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdc20  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbf8│+0x0028: 0x00005555555552b0  →  <++++info symbol 0x5555555552b0
main+0027> mov QWORD PTR [rbp-0x8], rax
0x00007fffffffdc00│+0x0030: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdc08│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555252 <+++info symbol 0x555555555252
alloc_al+0049> mov    rsi, rdx
   0x555555555255 <+++info symbol 0x555555555255
alloc_al+004c> mov    rdi, rax
   0x555555555258 <+++info symbol 0x555555555258
alloc_al+004f> call   0x5555555550d0 <strcpy@plt>
 → 0x55555555525d <++++info symbol 0x55555555525d
alloc_al+0054> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555261 <+++info symbol 0x555555555261
alloc_al+0058> mov    edx, DWORD PTR [rbp-0x1c]
   0x555555555264 <+++info symbol 0x555555555264
alloc_al+005b> mov    DWORD PTR [rax+0x10], edx
   0x555555555267 <+++info symbol 0x555555555267
alloc_al+005e> mov    eax, DWORD PTR [rbp-0x1c]
   0x55555555526a <+++info symbol 0x55555555526a
alloc_al+0061> cdqe   
   0x55555555526c <+++info symbol 0x55555555526c
alloc_al+0063> shl    rax, 0x2
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+57 ────
     52	     perror("PANIC: malloc failed, we didn't learn what to do here");
     53	     exit(EXIT_FAILURE);
     54	   }
     55	 
     56	   strcpy(al->name, name);
           // size=0x10, al=0x00007fffffffdbe8  →  [...]  →  0x000000007473696c ("list"?)
 →   57	   al->size = size;
     58	   al->array = malloc(size * sizeof(int));
     59	   return al;
     60	 }
     61	 
     62	 /**
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x55555555525d in alloc_al (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555525d → alloc_al(name=0x55555555603e "list", size=0x10)
[#1] 0x5555555552b0 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+f
#0  alloc_al (name=0x55555555603e "list", size=0x10) at al.c:57
57	  al->size = size;
+n
58	  al->array = malloc(size * sizeof(int));
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x000000007473696c ("list"?)
$rbx   : 0x0               
$rcx   : 0x747369          
$rdx   : 0x10              
$rsp   : 0x00007fffffffdbd0  →  0x00000010000006f0
$rbp   : 0x00007fffffffdbf0  →  0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x000055555555603e  →  0x206425007473696c ("list"?)
$rdi   : 0x00005555555592a0  →  0x000000007473696c ("list"?)
$rip   : 0x0000555555555267  →  <++++info symbol 0x555555555267
alloc_al+005e> mov eax, DWORD PTR [rbp-0x1c]
$r8    : 0x21001           
$r9    : 0x00005555555592a0  →  0x000000007473696c ("list"?)
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592c0  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00000010000006f0	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x000055555555603e  →  0x206425007473696c ("list"?)
0x00007fffffffdbe0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbe8│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdc20  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbf8│+0x0028: 0x00005555555552b0  →  <++++info symbol 0x5555555552b0
main+0027> mov QWORD PTR [rbp-0x8], rax
0x00007fffffffdc00│+0x0030: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdc08│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555525d <+++info symbol 0x55555555525d
alloc_al+0054> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555261 <+++info symbol 0x555555555261
alloc_al+0058> mov    edx, DWORD PTR [rbp-0x1c]
   0x555555555264 <+++info symbol 0x555555555264
alloc_al+005b> mov    DWORD PTR [rax+0x10], edx
 → 0x555555555267 <++++info symbol 0x555555555267
alloc_al+005e> mov    eax, DWORD PTR [rbp-0x1c]
   0x55555555526a <+++info symbol 0x55555555526a
alloc_al+0061> cdqe   
   0x55555555526c <+++info symbol 0x55555555526c
alloc_al+0063> shl    rax, 0x2
   0x555555555270 <+++info symbol 0x555555555270
alloc_al+0067> mov    rdi, rax
   0x555555555273 <+++info symbol 0x555555555273
alloc_al+006a> call   0x5555555550f0 <malloc@plt>
   0x555555555278 <+++info symbol 0x555555555278
alloc_al+006f> mov    rdx, rax
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+58 ────
     53	     exit(EXIT_FAILURE);
     54	   }
     55	 
     56	   strcpy(al->name, name);
     57	   al->size = size;
           // size=0x10, al=0x00007fffffffdbe8  →  [...]  →  0x000000007473696c ("list"?)
 →   58	   al->array = malloc(size * sizeof(int));
     59	   return al;
     60	 }
     61	 
     62	 /**
     63	   * The main function below allocate an array list, fills it with some data,
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x555555555267 in alloc_al (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555267 → alloc_al(name=0x55555555603e "list", size=0x10)
[#1] 0x5555555552b0 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x000000007473696c ("list"?)
$rbx   : 0x0               
$rcx   : 0x747369          
$rdx   : 0x10              
$rsp   : 0x00007fffffffdbd0  →  0x00000010000006f0
$rbp   : 0x00007fffffffdbf0  →  0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x000055555555603e  →  0x206425007473696c ("list"?)
$rdi   : 0x00005555555592a0  →  0x000000007473696c ("list"?)
$rip   : 0x0000555555555267  →  <++++info symbol 0x555555555267
alloc_al+005e> mov eax, DWORD PTR [rbp-0x1c]
$r8    : 0x21001           
$r9    : 0x00005555555592a0  →  0x000000007473696c ("list"?)
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x00005555555592c0  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00000010000006f0	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x000055555555603e  →  0x206425007473696c ("list"?)
0x00007fffffffdbe0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbe8│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdc20  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbf8│+0x0028: 0x00005555555552b0  →  <++++info symbol 0x5555555552b0
main+0027> mov QWORD PTR [rbp-0x8], rax
0x00007fffffffdc00│+0x0030: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdc08│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555525d <+++info symbol 0x55555555525d
alloc_al+0054> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555261 <+++info symbol 0x555555555261
alloc_al+0058> mov    edx, DWORD PTR [rbp-0x1c]
   0x555555555264 <+++info symbol 0x555555555264
alloc_al+005b> mov    DWORD PTR [rax+0x10], edx
 → 0x555555555267 <++++info symbol 0x555555555267
alloc_al+005e> mov    eax, DWORD PTR [rbp-0x1c]
   0x55555555526a <+++info symbol 0x55555555526a
alloc_al+0061> cdqe   
   0x55555555526c <+++info symbol 0x55555555526c
alloc_al+0063> shl    rax, 0x2
   0x555555555270 <+++info symbol 0x555555555270
alloc_al+0067> mov    rdi, rax
   0x555555555273 <+++info symbol 0x555555555273
alloc_al+006a> call   0x5555555550f0 <malloc@plt>
   0x555555555278 <+++info symbol 0x555555555278
alloc_al+006f> mov    rdx, rax
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+58 ────
     53	     exit(EXIT_FAILURE);
     54	   }
     55	 
     56	   strcpy(al->name, name);
     57	   al->size = size;
           // size=0x10, al=0x00007fffffffdbe8  →  [...]  →  0x000000007473696c ("list"?)
 →   58	   al->array = malloc(size * sizeof(int));
     59	   return al;
     60	 }
     61	 
     62	 /**
     63	   * The main function below allocate an array list, fills it with some data,
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x555555555267 in alloc_al (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555267 → alloc_al(name=0x55555555603e "list", size=0x10)
[#1] 0x5555555552b0 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
59	  return al;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x000000007473696c ("list"?)
$rbx   : 0x0               
$rcx   : 0x51              
$rdx   : 0x00005555555592d0  →  0x0000000000000000
$rsp   : 0x00007fffffffdbd0  →  0x00000010000006f0
$rbp   : 0x00007fffffffdbf0  →  0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x0000555555559310  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x0000555555555283  →  <++++info symbol 0x555555555283
alloc_al+007a> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x21001           
$r9    : 0x00005555555592d0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559310  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00000010000006f0	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x000055555555603e  →  0x206425007473696c ("list"?)
0x00007fffffffdbe0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbe8│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdc20  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbf8│+0x0028: 0x00005555555552b0  →  <++++info symbol 0x5555555552b0
main+0027> mov QWORD PTR [rbp-0x8], rax
0x00007fffffffdc00│+0x0030: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdc08│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555278 <+++info symbol 0x555555555278
alloc_al+006f> mov    rdx, rax
   0x55555555527b <+++info symbol 0x55555555527b
alloc_al+0072> mov    rax, QWORD PTR [rbp-0x8]
   0x55555555527f <+++info symbol 0x55555555527f
alloc_al+0076> mov    QWORD PTR [rax+0x18], rdx
 → 0x555555555283 <++++info symbol 0x555555555283
alloc_al+007a> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555287 <+++info symbol 0x555555555287
alloc_al+007e> leave  
   0x555555555288 <+++info symbol 0x555555555288
alloc_al+007f> ret    
   0x555555555289 <++++info symbol 0x555555555289
main+0000> endbr64 
   0x55555555528d <+++info symbol 0x55555555528d
main+0004> push   rbp
   0x55555555528e <+++info symbol 0x55555555528e
main+0005> mov    rbp, rsp
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+59 ────
     54	   }
     55	 
     56	   strcpy(al->name, name);
     57	   al->size = size;
     58	   al->array = malloc(size * sizeof(int));
           // al=0x00007fffffffdbe8  →  [...]  →  0x000000007473696c ("list"?)
 →   59	   return al;
     60	 }
     61	 
     62	 /**
     63	   * The main function below allocate an array list, fills it with some data,
     64	   * and then prints it. It will then go on to free the array list to return the
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x555555555283 in alloc_al (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555283 → alloc_al(name=0x55555555603e "list", size=0x10)
[#1] 0x5555555552b0 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x000000007473696c ("list"?)
$rbx   : 0x0               
$rcx   : 0x51              
$rdx   : 0x00005555555592d0  →  0x0000000000000000
$rsp   : 0x00007fffffffdbd0  →  0x00000010000006f0
$rbp   : 0x00007fffffffdbf0  →  0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x0000555555559310  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x0000555555555283  →  <++++info symbol 0x555555555283
alloc_al+007a> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x21001           
$r9    : 0x00005555555592d0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559310  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00000010000006f0	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x000055555555603e  →  0x206425007473696c ("list"?)
0x00007fffffffdbe0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbe8│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdc20  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbf8│+0x0028: 0x00005555555552b0  →  <++++info symbol 0x5555555552b0
main+0027> mov QWORD PTR [rbp-0x8], rax
0x00007fffffffdc00│+0x0030: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdc08│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555278 <+++info symbol 0x555555555278
alloc_al+006f> mov    rdx, rax
   0x55555555527b <+++info symbol 0x55555555527b
alloc_al+0072> mov    rax, QWORD PTR [rbp-0x8]
   0x55555555527f <+++info symbol 0x55555555527f
alloc_al+0076> mov    QWORD PTR [rax+0x18], rdx
 → 0x555555555283 <++++info symbol 0x555555555283
alloc_al+007a> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555287 <+++info symbol 0x555555555287
alloc_al+007e> leave  
   0x555555555288 <+++info symbol 0x555555555288
alloc_al+007f> ret    
   0x555555555289 <++++info symbol 0x555555555289
main+0000> endbr64 
   0x55555555528d <+++info symbol 0x55555555528d
main+0004> push   rbp
   0x55555555528e <+++info symbol 0x55555555528e
main+0005> mov    rbp, rsp
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+59 ────
     54	   }
     55	 
     56	   strcpy(al->name, name);
     57	   al->size = size;
     58	   al->array = malloc(size * sizeof(int));
           // al=0x00007fffffffdbe8  →  [...]  →  0x000000007473696c ("list"?)
 →   59	   return al;
     60	 }
     61	 
     62	 /**
     63	   * The main function below allocate an array list, fills it with some data,
     64	   * and then prints it. It will then go on to free the array list to return the
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x555555555283 in alloc_al (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555283 → alloc_al(name=0x55555555603e "list", size=0x10)
[#1] 0x5555555552b0 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
60	}
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x000000007473696c ("list"?)
$rbx   : 0x0               
$rcx   : 0x51              
$rdx   : 0x00005555555592d0  →  0x0000000000000000
$rsp   : 0x00007fffffffdbd0  →  0x00000010000006f0
$rbp   : 0x00007fffffffdbf0  →  0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x0000555555559310  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x0000555555555287  →  <++++info symbol 0x555555555287
alloc_al+007e> leave 
$r8    : 0x21001           
$r9    : 0x00005555555592d0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559310  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00000010000006f0	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x000055555555603e  →  0x206425007473696c ("list"?)
0x00007fffffffdbe0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbe8│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdc20  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbf8│+0x0028: 0x00005555555552b0  →  <++++info symbol 0x5555555552b0
main+0027> mov QWORD PTR [rbp-0x8], rax
0x00007fffffffdc00│+0x0030: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdc08│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555527b <+++info symbol 0x55555555527b
alloc_al+0072> mov    rax, QWORD PTR [rbp-0x8]
   0x55555555527f <+++info symbol 0x55555555527f
alloc_al+0076> mov    QWORD PTR [rax+0x18], rdx
   0x555555555283 <+++info symbol 0x555555555283
alloc_al+007a> mov    rax, QWORD PTR [rbp-0x8]
 → 0x555555555287 <++++info symbol 0x555555555287
alloc_al+007e> leave  
   0x555555555288 <+++info symbol 0x555555555288
alloc_al+007f> ret    
   0x555555555289 <++++info symbol 0x555555555289
main+0000> endbr64 
   0x55555555528d <+++info symbol 0x55555555528d
main+0004> push   rbp
   0x55555555528e <+++info symbol 0x55555555528e
main+0005> mov    rbp, rsp
   0x555555555291 <+++info symbol 0x555555555291
main+0008> sub    rsp, 0x20
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+60 ────
     55	 
     56	   strcpy(al->name, name);
     57	   al->size = size;
     58	   al->array = malloc(size * sizeof(int));
     59	   return al;
 →   60	 }
     61	 
     62	 /**
     63	   * The main function below allocate an array list, fills it with some data,
     64	   * and then prints it. It will then go on to free the array list to return the
     65	   * memory back to the operating system.
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x555555555287 in alloc_al (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555287 → alloc_al(name=0x55555555603e "list", size=0x10)
[#1] 0x5555555552b0 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x000000007473696c ("list"?)
$rbx   : 0x0               
$rcx   : 0x51              
$rdx   : 0x00005555555592d0  →  0x0000000000000000
$rsp   : 0x00007fffffffdbd0  →  0x00000010000006f0
$rbp   : 0x00007fffffffdbf0  →  0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x0000555555559310  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x0000555555555287  →  <++++info symbol 0x555555555287
alloc_al+007e> leave 
$r8    : 0x21001           
$r9    : 0x00005555555592d0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559310  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00000010000006f0	 ← $rsp
0x00007fffffffdbd8│+0x0008: 0x000055555555603e  →  0x206425007473696c ("list"?)
0x00007fffffffdbe0│+0x0010: 0x00007ffff7fc1000  →  0x00010102464c457f
0x00007fffffffdbe8│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdbf0│+0x0020: 0x00007fffffffdc20  →  0x0000000000000001	 ← $rbp
0x00007fffffffdbf8│+0x0028: 0x00005555555552b0  →  <++++info symbol 0x5555555552b0
main+0027> mov QWORD PTR [rbp-0x8], rax
0x00007fffffffdc00│+0x0030: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
0x00007fffffffdc08│+0x0038: 0x0000000100000064 ("d"?)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555527b <+++info symbol 0x55555555527b
alloc_al+0072> mov    rax, QWORD PTR [rbp-0x8]
   0x55555555527f <+++info symbol 0x55555555527f
alloc_al+0076> mov    QWORD PTR [rax+0x18], rdx
   0x555555555283 <+++info symbol 0x555555555283
alloc_al+007a> mov    rax, QWORD PTR [rbp-0x8]
 → 0x555555555287 <++++info symbol 0x555555555287
alloc_al+007e> leave  
   0x555555555288 <+++info symbol 0x555555555288
alloc_al+007f> ret    
   0x555555555289 <++++info symbol 0x555555555289
main+0000> endbr64 
   0x55555555528d <+++info symbol 0x55555555528d
main+0004> push   rbp
   0x55555555528e <+++info symbol 0x55555555528e
main+0005> mov    rbp, rsp
   0x555555555291 <+++info symbol 0x555555555291
main+0008> sub    rsp, 0x20
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+60 ────
     55	 
     56	   strcpy(al->name, name);
     57	   al->size = size;
     58	   al->array = malloc(size * sizeof(int));
     59	   return al;
 →   60	 }
     61	 
     62	 /**
     63	   * The main function below allocate an array list, fills it with some data,
     64	   * and then prints it. It will then go on to free the array list to return the
     65	   * memory back to the operating system.
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x555555555287 in alloc_al (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555287 → alloc_al(name=0x55555555603e "list", size=0x10)
[#1] 0x5555555552b0 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
main (argc=0x1, argv=0x7fffffffdd38) at al.c:76
76	  for(int i = 0; i < al->size; i++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc00
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x000000007473696c ("list"?)
$rbx   : 0x0               
$rcx   : 0x51              
$rdx   : 0x00005555555592d0  →  0x0000000000000000
$rsp   : 0x00007fffffffdc00  →  0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rbp   : 0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x0000555555559310  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x00005555555552b4  →  <++++info symbol 0x5555555552b4
main+002b> mov DWORD PTR [rbp-0x10], 0x0
$r8    : 0x21001           
$r9    : 0x00005555555592d0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559310  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc00│+0x0000: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"	 ← $rsp
0x00007fffffffdc08│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc10│+0x0010: 0x0000000000001000
0x00007fffffffdc18│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdc20│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc28│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc30│+0x0030: 0x0000000000000000
0x00007fffffffdc38│+0x0038: 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552a8 <+++info symbol 0x5555555552a8
main+001f> mov    rdi, rax
   0x5555555552ab <+++info symbol 0x5555555552ab
main+0022> call   0x555555555209 <alloc_al>
   0x5555555552b0 <+++info symbol 0x5555555552b0
main+0027> mov    QWORD PTR [rbp-0x8], rax
 → 0x5555555552b4 <++++info symbol 0x5555555552b4
main+002b> mov    DWORD PTR [rbp-0x10], 0x0
   0x5555555552bb <+++info symbol 0x5555555552bb
main+0032> jmp    0x5555555552da <main+81>
   0x5555555552bd <+++info symbol 0x5555555552bd
main+0034> mov    rax, QWORD PTR [rbp-0x8]
   0x5555555552c1 <+++info symbol 0x5555555552c1
main+0038> mov    rdx, QWORD PTR [rax+0x18]
   0x5555555552c5 <+++info symbol 0x5555555552c5
main+003c> mov    eax, DWORD PTR [rbp-0x10]
   0x5555555552c8 <+++info symbol 0x5555555552c8
main+003f> cdqe   
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+76 ────
     71	   */
     72	 int main(int argc, char **argv) {
     73	   struct array_list *al = alloc_al("list", 16);
     74	 
     75	   // initialize the array list
           // i=0x1000, al=0x00007fffffffdc18  →  [...]  →  0x000000007473696c ("list"?)
 →   76	   for(int i = 0; i < al->size; i++) {
     77	     al->array[i] = i;
     78	   }
     79	 
     80	   // print it out
     81	   for(int i = 0; i < al->size; i++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x5555555552b4 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552b4 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc00
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00005555555592a0  →  0x000000007473696c ("list"?)
$rbx   : 0x0               
$rcx   : 0x51              
$rdx   : 0x00005555555592d0  →  0x0000000000000000
$rsp   : 0x00007fffffffdc00  →  0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rbp   : 0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x0000555555559310  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x00005555555552b4  →  <++++info symbol 0x5555555552b4
main+002b> mov DWORD PTR [rbp-0x10], 0x0
$r8    : 0x21001           
$r9    : 0x00005555555592d0  →  0x0000000000000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559310  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc00│+0x0000: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"	 ← $rsp
0x00007fffffffdc08│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc10│+0x0010: 0x0000000000001000
0x00007fffffffdc18│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdc20│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc28│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc30│+0x0030: 0x0000000000000000
0x00007fffffffdc38│+0x0038: 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552a8 <+++info symbol 0x5555555552a8
main+001f> mov    rdi, rax
   0x5555555552ab <+++info symbol 0x5555555552ab
main+0022> call   0x555555555209 <alloc_al>
   0x5555555552b0 <+++info symbol 0x5555555552b0
main+0027> mov    QWORD PTR [rbp-0x8], rax
 → 0x5555555552b4 <++++info symbol 0x5555555552b4
main+002b> mov    DWORD PTR [rbp-0x10], 0x0
   0x5555555552bb <+++info symbol 0x5555555552bb
main+0032> jmp    0x5555555552da <main+81>
   0x5555555552bd <+++info symbol 0x5555555552bd
main+0034> mov    rax, QWORD PTR [rbp-0x8]
   0x5555555552c1 <+++info symbol 0x5555555552c1
main+0038> mov    rdx, QWORD PTR [rax+0x18]
   0x5555555552c5 <+++info symbol 0x5555555552c5
main+003c> mov    eax, DWORD PTR [rbp-0x10]
   0x5555555552c8 <+++info symbol 0x5555555552c8
main+003f> cdqe   
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+76 ────
     71	   */
     72	 int main(int argc, char **argv) {
     73	   struct array_list *al = alloc_al("list", 16);
     74	 
     75	   // initialize the array list
           // i=0x1000, al=0x00007fffffffdc18  →  [...]  →  0x000000007473696c ("list"?)
 →   76	   for(int i = 0; i < al->size; i++) {
     77	     al->array[i] = i;
     78	   }
     79	 
     80	   // print it out
     81	   for(int i = 0; i < al->size; i++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x5555555552b4 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552b4 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+until 79
main (argc=0x1, argv=0x7fffffffdd38) at al.c:81
81	  for(int i = 0; i < al->size; i++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc00
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x10              
$rbx   : 0x0               
$rcx   : 0x51              
$rdx   : 0x000055555555930c  →  0x000000000000000f
$rsp   : 0x00007fffffffdc00  →  0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rbp   : 0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x0000555555559310  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x00005555555552e6  →  <++++info symbol 0x5555555552e6
main+005d> mov DWORD PTR [rbp-0xc], 0x0
$r8    : 0x21001           
$r9    : 0x00005555555592d0  →  0x0000000100000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559310  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc00│+0x0000: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"	 ← $rsp
0x00007fffffffdc08│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc10│+0x0010: 0x0000000000000010
0x00007fffffffdc18│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdc20│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc28│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc30│+0x0030: 0x0000000000000000
0x00007fffffffdc38│+0x0038: 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552de <+++info symbol 0x5555555552de
main+0055> mov    eax, DWORD PTR [rax+0x10]
   0x5555555552e1 <+++info symbol 0x5555555552e1
main+0058> cmp    DWORD PTR [rbp-0x10], eax
   0x5555555552e4 <+++info symbol 0x5555555552e4
main+005b> jl     0x5555555552bd <main+52>
 → 0x5555555552e6 <++++info symbol 0x5555555552e6
main+005d> mov    DWORD PTR [rbp-0xc], 0x0
   0x5555555552ed <+++info symbol 0x5555555552ed
main+0064> jmp    0x55555555531f <main+150>
   0x5555555552ef <+++info symbol 0x5555555552ef
main+0066> mov    rax, QWORD PTR [rbp-0x8]
   0x5555555552f3 <+++info symbol 0x5555555552f3
main+006a> mov    rdx, QWORD PTR [rax+0x18]
   0x5555555552f7 <+++info symbol 0x5555555552f7
main+006e> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555552fa <+++info symbol 0x5555555552fa
main+0071> cdqe   
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+81 ────
     76	   for(int i = 0; i < al->size; i++) {
     77	     al->array[i] = i;
     78	   }
     79	 
     80	   // print it out
           // i=0x0, al=0x00007fffffffdc18  →  [...]  →  0x000000007473696c ("list"?)
 →   81	   for(int i = 0; i < al->size; i++) {
     82	     printf("%d ", al->array[i]);
     83	   }
     84	   printf("\n");
     85	 
     86	   // cleanup because we are nice
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x5555555552e6 in main (), reason: TEMPORARY BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552e6 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc00
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x10              
$rbx   : 0x0               
$rcx   : 0x51              
$rdx   : 0x000055555555930c  →  0x000000000000000f
$rsp   : 0x00007fffffffdc00  →  0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rbp   : 0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x0000555555559310  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x00005555555552e6  →  <++++info symbol 0x5555555552e6
main+005d> mov DWORD PTR [rbp-0xc], 0x0
$r8    : 0x21001           
$r9    : 0x00005555555592d0  →  0x0000000100000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559310  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc00│+0x0000: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"	 ← $rsp
0x00007fffffffdc08│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc10│+0x0010: 0x0000000000000010
0x00007fffffffdc18│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdc20│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc28│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc30│+0x0030: 0x0000000000000000
0x00007fffffffdc38│+0x0038: 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552de <+++info symbol 0x5555555552de
main+0055> mov    eax, DWORD PTR [rax+0x10]
   0x5555555552e1 <+++info symbol 0x5555555552e1
main+0058> cmp    DWORD PTR [rbp-0x10], eax
   0x5555555552e4 <+++info symbol 0x5555555552e4
main+005b> jl     0x5555555552bd <main+52>
 → 0x5555555552e6 <++++info symbol 0x5555555552e6
main+005d> mov    DWORD PTR [rbp-0xc], 0x0
   0x5555555552ed <+++info symbol 0x5555555552ed
main+0064> jmp    0x55555555531f <main+150>
   0x5555555552ef <+++info symbol 0x5555555552ef
main+0066> mov    rax, QWORD PTR [rbp-0x8]
   0x5555555552f3 <+++info symbol 0x5555555552f3
main+006a> mov    rdx, QWORD PTR [rax+0x18]
   0x5555555552f7 <+++info symbol 0x5555555552f7
main+006e> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555552fa <+++info symbol 0x5555555552fa
main+0071> cdqe   
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+81 ────
     76	   for(int i = 0; i < al->size; i++) {
     77	     al->array[i] = i;
     78	   }
     79	 
     80	   // print it out
           // i=0x0, al=0x00007fffffffdc18  →  [...]  →  0x000000007473696c ("list"?)
 →   81	   for(int i = 0; i < al->size; i++) {
     82	     printf("%d ", al->array[i]);
     83	   }
     84	   printf("\n");
     85	 
     86	   // cleanup because we are nice
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x5555555552e6 in main (), reason: TEMPORARY BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552e6 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
82	    printf("%d ", al->array[i]);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc00
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x10              
$rbx   : 0x0               
$rcx   : 0x51              
$rdx   : 0x000055555555930c  →  0x000000000000000f
$rsp   : 0x00007fffffffdc00  →  0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rbp   : 0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x0000555555559310  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x00005555555552ef  →  <++++info symbol 0x5555555552ef
main+0066> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x21001           
$r9    : 0x00005555555592d0  →  0x0000000100000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559310  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc00│+0x0000: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"	 ← $rsp
0x00007fffffffdc08│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc10│+0x0010: 0x0000000000000010
0x00007fffffffdc18│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdc20│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc28│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc30│+0x0030: 0x0000000000000000
0x00007fffffffdc38│+0x0038: 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552e4 <+++info symbol 0x5555555552e4
main+005b> jl     0x5555555552bd <main+52>
   0x5555555552e6 <+++info symbol 0x5555555552e6
main+005d> mov    DWORD PTR [rbp-0xc], 0x0
   0x5555555552ed <+++info symbol 0x5555555552ed
main+0064> jmp    0x55555555531f <main+150>
 → 0x5555555552ef <++++info symbol 0x5555555552ef
main+0066> mov    rax, QWORD PTR [rbp-0x8]
   0x5555555552f3 <+++info symbol 0x5555555552f3
main+006a> mov    rdx, QWORD PTR [rax+0x18]
   0x5555555552f7 <+++info symbol 0x5555555552f7
main+006e> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555552fa <+++info symbol 0x5555555552fa
main+0071> cdqe   
   0x5555555552fc <+++info symbol 0x5555555552fc
main+0073> shl    rax, 0x2
   0x555555555300 <+++info symbol 0x555555555300
main+0077> add    rax, rdx
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+82 ────
     77	     al->array[i] = i;
     78	   }
     79	 
     80	   // print it out
     81	   for(int i = 0; i < al->size; i++) {
             // i=0x0, al=0x00007fffffffdc18  →  [...]  →  0x000000007473696c ("list"?)
 →   82	     printf("%d ", al->array[i]);
     83	   }
     84	   printf("\n");
     85	 
     86	   // cleanup because we are nice
     87	   free(al->array);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x5555555552ef in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552ef → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc00
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x10              
$rbx   : 0x0               
$rcx   : 0x51              
$rdx   : 0x000055555555930c  →  0x000000000000000f
$rsp   : 0x00007fffffffdc00  →  0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rbp   : 0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x0000555555559310  →  0x0000000000000000
$rdi   : 0x0               
$rip   : 0x00005555555552ef  →  <++++info symbol 0x5555555552ef
main+0066> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x21001           
$r9    : 0x00005555555592d0  →  0x0000000100000000
$r10   : 0xfffffffffffff000
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559310  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc00│+0x0000: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"	 ← $rsp
0x00007fffffffdc08│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc10│+0x0010: 0x0000000000000010
0x00007fffffffdc18│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdc20│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc28│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc30│+0x0030: 0x0000000000000000
0x00007fffffffdc38│+0x0038: 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552e4 <+++info symbol 0x5555555552e4
main+005b> jl     0x5555555552bd <main+52>
   0x5555555552e6 <+++info symbol 0x5555555552e6
main+005d> mov    DWORD PTR [rbp-0xc], 0x0
   0x5555555552ed <+++info symbol 0x5555555552ed
main+0064> jmp    0x55555555531f <main+150>
 → 0x5555555552ef <++++info symbol 0x5555555552ef
main+0066> mov    rax, QWORD PTR [rbp-0x8]
   0x5555555552f3 <+++info symbol 0x5555555552f3
main+006a> mov    rdx, QWORD PTR [rax+0x18]
   0x5555555552f7 <+++info symbol 0x5555555552f7
main+006e> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555552fa <+++info symbol 0x5555555552fa
main+0071> cdqe   
   0x5555555552fc <+++info symbol 0x5555555552fc
main+0073> shl    rax, 0x2
   0x555555555300 <+++info symbol 0x555555555300
main+0077> add    rax, rdx
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+82 ────
     77	     al->array[i] = i;
     78	   }
     79	 
     80	   // print it out
     81	   for(int i = 0; i < al->size; i++) {
             // i=0x0, al=0x00007fffffffdc18  →  [...]  →  0x000000007473696c ("list"?)
 →   82	     printf("%d ", al->array[i]);
     83	   }
     84	   printf("\n");
     85	 
     86	   // cleanup because we are nice
     87	   free(al->array);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x5555555552ef in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552ef → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
81	  for(int i = 0; i < al->size; i++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc00
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdc00  →  0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rbp   : 0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x0000555555556045  →  0x3c3b031b01000020 (" "?)
$rdi   : 0x00007fffffffd6a0  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x000055555555531b  →  <++++info symbol 0x55555555531b
main+0092> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x0               
$r9    : 0x0000555555559320  →  0x0000000000002030 ("0 "?)
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559720  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc00│+0x0000: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"	 ← $rsp
0x00007fffffffdc08│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc10│+0x0010: 0x0000000000000010
0x00007fffffffdc18│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdc20│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc28│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc30│+0x0030: 0x0000000000000000
0x00007fffffffdc38│+0x0038: 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555530e <+++info symbol 0x55555555530e
main+0085> mov    rdi, rax
   0x555555555311 <+++info symbol 0x555555555311
main+0088> mov    eax, 0x0
   0x555555555316 <+++info symbol 0x555555555316
main+008d> call   0x5555555550e0 <printf@plt>
 → 0x55555555531b <++++info symbol 0x55555555531b
main+0092> add    DWORD PTR [rbp-0xc], 0x1
   0x55555555531f <+++info symbol 0x55555555531f
main+0096> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555323 <+++info symbol 0x555555555323
main+009a> mov    eax, DWORD PTR [rax+0x10]
   0x555555555326 <+++info symbol 0x555555555326
main+009d> cmp    DWORD PTR [rbp-0xc], eax
   0x555555555329 <+++info symbol 0x555555555329
main+00a0> jl     0x5555555552ef <main+102>
   0x55555555532b <+++info symbol 0x55555555532b
main+00a2> mov    edi, 0xa
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+81 ────
     76	   for(int i = 0; i < al->size; i++) {
     77	     al->array[i] = i;
     78	   }
     79	 
     80	   // print it out
           // i=0x0, al=0x00007fffffffdc18  →  [...]  →  0x000000007473696c ("list"?)
 →   81	   for(int i = 0; i < al->size; i++) {
     82	     printf("%d ", al->array[i]);
     83	   }
     84	   printf("\n");
     85	 
     86	   // cleanup because we are nice
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x55555555531b in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555531b → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc00
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdc00  →  0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rbp   : 0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x0000555555556045  →  0x3c3b031b01000020 (" "?)
$rdi   : 0x00007fffffffd6a0  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x000055555555531b  →  <++++info symbol 0x55555555531b
main+0092> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x0               
$r9    : 0x0000555555559320  →  0x0000000000002030 ("0 "?)
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559720  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc00│+0x0000: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"	 ← $rsp
0x00007fffffffdc08│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc10│+0x0010: 0x0000000000000010
0x00007fffffffdc18│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdc20│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc28│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc30│+0x0030: 0x0000000000000000
0x00007fffffffdc38│+0x0038: 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555530e <+++info symbol 0x55555555530e
main+0085> mov    rdi, rax
   0x555555555311 <+++info symbol 0x555555555311
main+0088> mov    eax, 0x0
   0x555555555316 <+++info symbol 0x555555555316
main+008d> call   0x5555555550e0 <printf@plt>
 → 0x55555555531b <++++info symbol 0x55555555531b
main+0092> add    DWORD PTR [rbp-0xc], 0x1
   0x55555555531f <+++info symbol 0x55555555531f
main+0096> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555323 <+++info symbol 0x555555555323
main+009a> mov    eax, DWORD PTR [rax+0x10]
   0x555555555326 <+++info symbol 0x555555555326
main+009d> cmp    DWORD PTR [rbp-0xc], eax
   0x555555555329 <+++info symbol 0x555555555329
main+00a0> jl     0x5555555552ef <main+102>
   0x55555555532b <+++info symbol 0x55555555532b
main+00a2> mov    edi, 0xa
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+81 ────
     76	   for(int i = 0; i < al->size; i++) {
     77	     al->array[i] = i;
     78	   }
     79	 
     80	   // print it out
           // i=0x0, al=0x00007fffffffdc18  →  [...]  →  0x000000007473696c ("list"?)
 →   81	   for(int i = 0; i < al->size; i++) {
     82	     printf("%d ", al->array[i]);
     83	   }
     84	   printf("\n");
     85	 
     86	   // cleanup because we are nice
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x55555555531b in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555531b → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
82	    printf("%d ", al->array[i]);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc00
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x10              
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdc00  →  0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rbp   : 0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x0000555555556045  →  0x3c3b031b01000020 (" "?)
$rdi   : 0x00007fffffffd6a0  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x00005555555552ef  →  <++++info symbol 0x5555555552ef
main+0066> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x0               
$r9    : 0x0000555555559320  →  0x0000000000002030 ("0 "?)
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559720  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc00│+0x0000: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"	 ← $rsp
0x00007fffffffdc08│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc10│+0x0010: 0x0000000100000010
0x00007fffffffdc18│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdc20│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc28│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc30│+0x0030: 0x0000000000000000
0x00007fffffffdc38│+0x0038: 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552e4 <+++info symbol 0x5555555552e4
main+005b> jl     0x5555555552bd <main+52>
   0x5555555552e6 <+++info symbol 0x5555555552e6
main+005d> mov    DWORD PTR [rbp-0xc], 0x0
   0x5555555552ed <+++info symbol 0x5555555552ed
main+0064> jmp    0x55555555531f <main+150>
 → 0x5555555552ef <++++info symbol 0x5555555552ef
main+0066> mov    rax, QWORD PTR [rbp-0x8]
   0x5555555552f3 <+++info symbol 0x5555555552f3
main+006a> mov    rdx, QWORD PTR [rax+0x18]
   0x5555555552f7 <+++info symbol 0x5555555552f7
main+006e> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555552fa <+++info symbol 0x5555555552fa
main+0071> cdqe   
   0x5555555552fc <+++info symbol 0x5555555552fc
main+0073> shl    rax, 0x2
   0x555555555300 <+++info symbol 0x555555555300
main+0077> add    rax, rdx
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+82 ────
     77	     al->array[i] = i;
     78	   }
     79	 
     80	   // print it out
     81	   for(int i = 0; i < al->size; i++) {
             // i=0x1, al=0x00007fffffffdc18  →  [...]  →  0x000000007473696c ("list"?)
 →   82	     printf("%d ", al->array[i]);
     83	   }
     84	   printf("\n");
     85	 
     86	   // cleanup because we are nice
     87	   free(al->array);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x5555555552ef in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552ef → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc00
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x10              
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdc00  →  0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rbp   : 0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x0000555555556045  →  0x3c3b031b01000020 (" "?)
$rdi   : 0x00007fffffffd6a0  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x00005555555552ef  →  <++++info symbol 0x5555555552ef
main+0066> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x0               
$r9    : 0x0000555555559320  →  0x0000000000002030 ("0 "?)
$r10   : 0x77              
$r11   : 0x00007ffff7e1ace0  →  0x0000555555559720  →  0x0000000000000000
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc00│+0x0000: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"	 ← $rsp
0x00007fffffffdc08│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc10│+0x0010: 0x0000000100000010
0x00007fffffffdc18│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdc20│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc28│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc30│+0x0030: 0x0000000000000000
0x00007fffffffdc38│+0x0038: 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552e4 <+++info symbol 0x5555555552e4
main+005b> jl     0x5555555552bd <main+52>
   0x5555555552e6 <+++info symbol 0x5555555552e6
main+005d> mov    DWORD PTR [rbp-0xc], 0x0
   0x5555555552ed <+++info symbol 0x5555555552ed
main+0064> jmp    0x55555555531f <main+150>
 → 0x5555555552ef <++++info symbol 0x5555555552ef
main+0066> mov    rax, QWORD PTR [rbp-0x8]
   0x5555555552f3 <+++info symbol 0x5555555552f3
main+006a> mov    rdx, QWORD PTR [rax+0x18]
   0x5555555552f7 <+++info symbol 0x5555555552f7
main+006e> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555552fa <+++info symbol 0x5555555552fa
main+0071> cdqe   
   0x5555555552fc <+++info symbol 0x5555555552fc
main+0073> shl    rax, 0x2
   0x555555555300 <+++info symbol 0x555555555300
main+0077> add    rax, rdx
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+82 ────
     77	     al->array[i] = i;
     78	   }
     79	 
     80	   // print it out
     81	   for(int i = 0; i < al->size; i++) {
             // i=0x1, al=0x00007fffffffdc18  →  [...]  →  0x000000007473696c ("list"?)
 →   82	     printf("%d ", al->array[i]);
     83	   }
     84	   printf("\n");
     85	 
     86	   // cleanup because we are nice
     87	   free(al->array);
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x5555555552ef in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552ef → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+until 87
main (argc=0x1, argv=0x7fffffffdd38) at al.c:87
87	  free(al->array);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc00
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xa               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdc00  →  0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rbp   : 0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x0000555555555335  →  <++++info symbol 0x555555555335
main+00ac> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdad6  →  0xfce6e7f840003531 ("15"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc00│+0x0000: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"	 ← $rsp
0x00007fffffffdc08│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc10│+0x0010: 0x0000001000000010
0x00007fffffffdc18│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdc20│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc28│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc30│+0x0030: 0x0000000000000000
0x00007fffffffdc38│+0x0038: 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555329 <+++info symbol 0x555555555329
main+00a0> jl     0x5555555552ef <main+102>
   0x55555555532b <+++info symbol 0x55555555532b
main+00a2> mov    edi, 0xa
   0x555555555330 <+++info symbol 0x555555555330
main+00a7> call   0x5555555550c0 <putchar@plt>
 → 0x555555555335 <++++info symbol 0x555555555335
main+00ac> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555339 <+++info symbol 0x555555555339
main+00b0> mov    rax, QWORD PTR [rax+0x18]
   0x55555555533d <+++info symbol 0x55555555533d
main+00b4> mov    rdi, rax
   0x555555555340 <+++info symbol 0x555555555340
main+00b7> call   0x5555555550b0 <free@plt>
   0x555555555345 <+++info symbol 0x555555555345
main+00bc> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555349 <+++info symbol 0x555555555349
main+00c0> mov    rdi, rax
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+87 ────
     82	     printf("%d ", al->array[i]);
     83	   }
     84	   printf("\n");
     85	 
     86	   // cleanup because we are nice
           // al=0x00007fffffffdc18  →  [...]  →  0x000000007473696c ("list"?)
 →   87	   free(al->array);
     88	   free(al);
     89	 
     90	   exit(EXIT_SUCCESS);
     91	 }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x555555555335 in main (), reason: TEMPORARY BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555335 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc00
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0xa               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdc00  →  0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rbp   : 0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x0000555555555335  →  <++++info symbol 0x555555555335
main+00ac> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdad6  →  0xfce6e7f840003531 ("15"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc00│+0x0000: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"	 ← $rsp
0x00007fffffffdc08│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc10│+0x0010: 0x0000001000000010
0x00007fffffffdc18│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdc20│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc28│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc30│+0x0030: 0x0000000000000000
0x00007fffffffdc38│+0x0038: 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555329 <+++info symbol 0x555555555329
main+00a0> jl     0x5555555552ef <main+102>
   0x55555555532b <+++info symbol 0x55555555532b
main+00a2> mov    edi, 0xa
   0x555555555330 <+++info symbol 0x555555555330
main+00a7> call   0x5555555550c0 <putchar@plt>
 → 0x555555555335 <++++info symbol 0x555555555335
main+00ac> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555339 <+++info symbol 0x555555555339
main+00b0> mov    rax, QWORD PTR [rax+0x18]
   0x55555555533d <+++info symbol 0x55555555533d
main+00b4> mov    rdi, rax
   0x555555555340 <+++info symbol 0x555555555340
main+00b7> call   0x5555555550b0 <free@plt>
   0x555555555345 <+++info symbol 0x555555555345
main+00bc> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555349 <+++info symbol 0x555555555349
main+00c0> mov    rdi, rax
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+87 ────
     82	     printf("%d ", al->array[i]);
     83	   }
     84	   printf("\n");
     85	 
     86	   // cleanup because we are nice
           // al=0x00007fffffffdc18  →  [...]  →  0x000000007473696c ("list"?)
 →   87	   free(al->array);
     88	   free(al);
     89	 
     90	   exit(EXIT_SUCCESS);
     91	 }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x555555555335 in main (), reason: TEMPORARY BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555335 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
88	  free(al);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc00
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x3               
$rdx   : 0x555555559       
$rsp   : 0x00007fffffffdc00  →  0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rbp   : 0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x0000555555559010  →  0x0001000000000000
$rdi   : 0x7               
$rip   : 0x0000555555555345  →  <++++info symbol 0x555555555345
main+00bc> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x00005555555592d0  →  0x0000000555555559
$r9    : 0x00007fffffffdad6  →  0xfce6e7f840003531 ("15"?)
$r10   : 0x0               
$r11   : 0xb1d30a274d6e575d
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc00│+0x0000: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"	 ← $rsp
0x00007fffffffdc08│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc10│+0x0010: 0x0000001000000010
0x00007fffffffdc18│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdc20│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc28│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc30│+0x0030: 0x0000000000000000
0x00007fffffffdc38│+0x0038: 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555339 <+++info symbol 0x555555555339
main+00b0> mov    rax, QWORD PTR [rax+0x18]
   0x55555555533d <+++info symbol 0x55555555533d
main+00b4> mov    rdi, rax
   0x555555555340 <+++info symbol 0x555555555340
main+00b7> call   0x5555555550b0 <free@plt>
 → 0x555555555345 <++++info symbol 0x555555555345
main+00bc> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555349 <+++info symbol 0x555555555349
main+00c0> mov    rdi, rax
   0x55555555534c <+++info symbol 0x55555555534c
main+00c3> call   0x5555555550b0 <free@plt>
   0x555555555351 <+++info symbol 0x555555555351
main+00c8> mov    edi, 0x0
   0x555555555356 <+++info symbol 0x555555555356
main+00cd> call   0x555555555110 <exit@plt>
   0x55555555535b <+++info symbol 0x55555555535b
No symbol matches 0x55555555535b.+0000> add    bl, dh
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+88 ────
     83	   }
     84	   printf("\n");
     85	 
     86	   // cleanup because we are nice
     87	   free(al->array);
           // al=0x00007fffffffdc18  →  [...]  →  0x000000007473696c ("list"?)
 →   88	   free(al);
     89	 
     90	   exit(EXIT_SUCCESS);
     91	 }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x555555555345 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555345 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc00
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x3               
$rdx   : 0x555555559       
$rsp   : 0x00007fffffffdc00  →  0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rbp   : 0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x0000555555559010  →  0x0001000000000000
$rdi   : 0x7               
$rip   : 0x0000555555555345  →  <++++info symbol 0x555555555345
main+00bc> mov rax, QWORD PTR [rbp-0x8]
$r8    : 0x00005555555592d0  →  0x0000000555555559
$r9    : 0x00007fffffffdad6  →  0xfce6e7f840003531 ("15"?)
$r10   : 0x0               
$r11   : 0xb1d30a274d6e575d
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc00│+0x0000: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"	 ← $rsp
0x00007fffffffdc08│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc10│+0x0010: 0x0000001000000010
0x00007fffffffdc18│+0x0018: 0x00005555555592a0  →  0x000000007473696c ("list"?)
0x00007fffffffdc20│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc28│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc30│+0x0030: 0x0000000000000000
0x00007fffffffdc38│+0x0038: 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555339 <+++info symbol 0x555555555339
main+00b0> mov    rax, QWORD PTR [rax+0x18]
   0x55555555533d <+++info symbol 0x55555555533d
main+00b4> mov    rdi, rax
   0x555555555340 <+++info symbol 0x555555555340
main+00b7> call   0x5555555550b0 <free@plt>
 → 0x555555555345 <++++info symbol 0x555555555345
main+00bc> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555349 <+++info symbol 0x555555555349
main+00c0> mov    rdi, rax
   0x55555555534c <+++info symbol 0x55555555534c
main+00c3> call   0x5555555550b0 <free@plt>
   0x555555555351 <+++info symbol 0x555555555351
main+00c8> mov    edi, 0x0
   0x555555555356 <+++info symbol 0x555555555356
main+00cd> call   0x555555555110 <exit@plt>
   0x55555555535b <+++info symbol 0x55555555535b
No symbol matches 0x55555555535b.+0000> add    bl, dh
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+88 ────
     83	   }
     84	   printf("\n");
     85	 
     86	   // cleanup because we are nice
     87	   free(al->array);
           // al=0x00007fffffffdc18  →  [...]  →  0x000000007473696c ("list"?)
 →   88	   free(al);
     89	 
     90	   exit(EXIT_SUCCESS);
     91	 }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x555555555345 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555345 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
90	  exit(EXIT_SUCCESS);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc00
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x555555559       
$rsp   : 0x00007fffffffdc00  →  0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rbp   : 0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x0000555555559010  →  0x0001000000010000
$rdi   : 0x7               
$rip   : 0x0000555555555351  →  <++++info symbol 0x555555555351
main+00c8> mov edi, 0x0
$r8    : 0x00005555555592a0  →  0x0000000555555559
$r9    : 0x00007fffffffdad6  →  0xfce6e7f840003531 ("15"?)
$r10   : 0x0               
$r11   : 0xb1d30a274d6e575d
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc00│+0x0000: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"	 ← $rsp
0x00007fffffffdc08│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc10│+0x0010: 0x0000001000000010
0x00007fffffffdc18│+0x0018: 0x00005555555592a0  →  0x0000000555555559
0x00007fffffffdc20│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc28│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc30│+0x0030: 0x0000000000000000
0x00007fffffffdc38│+0x0038: 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555345 <+++info symbol 0x555555555345
main+00bc> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555349 <+++info symbol 0x555555555349
main+00c0> mov    rdi, rax
   0x55555555534c <+++info symbol 0x55555555534c
main+00c3> call   0x5555555550b0 <free@plt>
 → 0x555555555351 <++++info symbol 0x555555555351
main+00c8> mov    edi, 0x0
   0x555555555356 <+++info symbol 0x555555555356
main+00cd> call   0x555555555110 <exit@plt>
   0x55555555535b <+++info symbol 0x55555555535b
No symbol matches 0x55555555535b.+0000> add    bl, dh
   0x55555555535d <+++info symbol 0x55555555535d
_fini+0001> nop    edx
   0x555555555360 <+++info symbol 0x555555555360
_fini+0004> sub    rsp, 0x8
   0x555555555364 <+++info symbol 0x555555555364
_fini+0008> add    rsp, 0x8
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+90 ────
     85	 
     86	   // cleanup because we are nice
     87	   free(al->array);
     88	   free(al);
     89	 
 →   90	   exit(EXIT_SUCCESS);
     91	 }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x555555555351 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555351 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc00
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x555555559       
$rsp   : 0x00007fffffffdc00  →  0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$rbp   : 0x00007fffffffdc20  →  0x0000000000000001
$rsi   : 0x0000555555559010  →  0x0001000000010000
$rdi   : 0x7               
$rip   : 0x0000555555555351  →  <++++info symbol 0x555555555351
main+00c8> mov edi, 0x0
$r8    : 0x00005555555592a0  →  0x0000000555555559
$r9    : 0x00007fffffffdad6  →  0xfce6e7f840003531 ("15"?)
$r10   : 0x0               
$r11   : 0xb1d30a274d6e575d
$r12   : 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"
$r13   : 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
$r14   : 0x0000555555557d90  →  0x00005555555551c0  →  <++++info symbol 0x5555555551c0
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc00│+0x0000: 0x00007fffffffdd38  →  0x00007fffffffdfd6  →  "/home/liub5/CSSE332-lab-liub5/debug/al.bin"	 ← $rsp
0x00007fffffffdc08│+0x0008: 0x0000000100000064 ("d"?)
0x00007fffffffdc10│+0x0010: 0x0000001000000010
0x00007fffffffdc18│+0x0018: 0x00005555555592a0  →  0x0000000555555559
0x00007fffffffdc20│+0x0020: 0x0000000000000001	 ← $rbp
0x00007fffffffdc28│+0x0028: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
0x00007fffffffdc30│+0x0030: 0x0000000000000000
0x00007fffffffdc38│+0x0038: 0x0000555555555289  →  <++++info symbol 0x555555555289
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555345 <+++info symbol 0x555555555345
main+00bc> mov    rax, QWORD PTR [rbp-0x8]
   0x555555555349 <+++info symbol 0x555555555349
main+00c0> mov    rdi, rax
   0x55555555534c <+++info symbol 0x55555555534c
main+00c3> call   0x5555555550b0 <free@plt>
 → 0x555555555351 <++++info symbol 0x555555555351
main+00c8> mov    edi, 0x0
   0x555555555356 <+++info symbol 0x555555555356
main+00cd> call   0x555555555110 <exit@plt>
   0x55555555535b <+++info symbol 0x55555555535b
No symbol matches 0x55555555535b.+0000> add    bl, dh
   0x55555555535d <+++info symbol 0x55555555535d
_fini+0001> nop    edx
   0x555555555360 <+++info symbol 0x555555555360
_fini+0004> sub    rsp, 0x8
   0x555555555364 <+++info symbol 0x555555555364
_fini+0008> add    rsp, 0x8
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:al.c+90 ────
     85	 
     86	   // cleanup because we are nice
     87	   free(al->array);
     88	   free(al);
     89	 
 →   90	   exit(EXIT_SUCCESS);
     91	 }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "al.bin", stopped 0x555555555351 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555351 → main(argc=0x1, argv=0x7fffffffdd38)
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
[Inferior 1 (process 1014) exited normally]
+n
The program is not being run.
+quit
