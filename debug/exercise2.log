+source ~/.gef/gef.py
++set confirm off
++set verbose off
++set pagination off
++set print elements 0
++set history save on
++set history filename ~/.gdb_history
++set output-radix 0x10
++set print pretty on
++set disassembly-flavor intel
++handle SIGALRM print nopass
++save gdb-index '/tmp/gef'
GEF for linux ready, type `gef' to start, `gef config' to configure
93 commands loaded and 5 functions added for GDB 12.1 in 0.00ms using Python engine 3.10
++define target hookpost-remote
++define target hookpost-extended-remote
++define hookpost-source
++pi gef.gdb.load()
Reading symbols from selection.bin...
+b main
Breakpoint 1 at 0x130c: file selection.c, line 42.
+run
Starting program: /home/liub5/CSSE332-lab-liub5/debug/selection.bin 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main () at selection.c:42
42	int main() {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffa  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$rdi   : 0x1               
$rip   : 0x000055555555530c  →  <++++info symbol 0x55555555530c
main+000c> mov rax, QWORD PTR fs:0x28
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x00000000178bfbff
0x00007fffffffdbf0│+0x0010: 0x00007fffffffdfb9  →  0x000034365f363878 ("x86_64"?)
0x00007fffffffdbf8│+0x0018: 0x0000000000000064 ("d"?)
0x00007fffffffdc00│+0x0020: 0x0000000000001000
0x00007fffffffdc08│+0x0028: 0x00005555555550a0  →  <++++info symbol 0x5555555550a0
_start+0000> endbr64 
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555304 <+++info symbol 0x555555555304
main+0004> push   rbp
   0x555555555305 <+++info symbol 0x555555555305
main+0005> mov    rbp, rsp
   0x555555555308 <+++info symbol 0x555555555308
main+0008> sub    rsp, 0x30
 → 0x55555555530c <++++info symbol 0x55555555530c
main+000c> mov    rax, QWORD PTR fs:0x28
   0x555555555315 <+++info symbol 0x555555555315
main+0015> mov    QWORD PTR [rbp-0x8], rax
   0x555555555319 <+++info symbol 0x555555555319
main+0019> xor    eax, eax
   0x55555555531b <+++info symbol 0x55555555531b
main+001b> mov    DWORD PTR [rbp-0x20], 0x64
   0x555555555322 <+++info symbol 0x555555555322
main+0022> mov    DWORD PTR [rbp-0x1c], 0x2d
   0x555555555329 <+++info symbol 0x555555555329
main+0029> mov    DWORD PTR [rbp-0x18], 0x59
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+42 ────
     37	       lo = mid+1;  // move lo to eliminate 1st half of A
     38	   }
     39	   return 0;
     40	 }
     41	 
 →   42	 int main() {
     43	   int list[] = { 100, 45, 89, 27, 317, 17 };
     44	 
     45	   // print the sorted list
     46	   printf("unsorted list: \n");
     47	   printf("\t [ ");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555530c in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555530c → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffa  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$rdi   : 0x1               
$rip   : 0x000055555555530c  →  <++++info symbol 0x55555555530c
main+000c> mov rax, QWORD PTR fs:0x28
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x00000000178bfbff
0x00007fffffffdbf0│+0x0010: 0x00007fffffffdfb9  →  0x000034365f363878 ("x86_64"?)
0x00007fffffffdbf8│+0x0018: 0x0000000000000064 ("d"?)
0x00007fffffffdc00│+0x0020: 0x0000000000001000
0x00007fffffffdc08│+0x0028: 0x00005555555550a0  →  <++++info symbol 0x5555555550a0
_start+0000> endbr64 
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555304 <+++info symbol 0x555555555304
main+0004> push   rbp
   0x555555555305 <+++info symbol 0x555555555305
main+0005> mov    rbp, rsp
   0x555555555308 <+++info symbol 0x555555555308
main+0008> sub    rsp, 0x30
 → 0x55555555530c <++++info symbol 0x55555555530c
main+000c> mov    rax, QWORD PTR fs:0x28
   0x555555555315 <+++info symbol 0x555555555315
main+0015> mov    QWORD PTR [rbp-0x8], rax
   0x555555555319 <+++info symbol 0x555555555319
main+0019> xor    eax, eax
   0x55555555531b <+++info symbol 0x55555555531b
main+001b> mov    DWORD PTR [rbp-0x20], 0x64
   0x555555555322 <+++info symbol 0x555555555322
main+0022> mov    DWORD PTR [rbp-0x1c], 0x2d
   0x555555555329 <+++info symbol 0x555555555329
main+0029> mov    DWORD PTR [rbp-0x18], 0x59
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+42 ────
     37	       lo = mid+1;  // move lo to eliminate 1st half of A
     38	   }
     39	   return 0;
     40	 }
     41	 
 →   42	 int main() {
     43	   int list[] = { 100, 45, 89, 27, 317, 17 };
     44	 
     45	   // print the sorted list
     46	   printf("unsorted list: \n");
     47	   printf("\t [ ");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555530c in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555530c → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
43	  int list[] = { 100, 45, 89, 27, 317, 17 };
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffa  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$rdi   : 0x1               
$rip   : 0x000055555555531b  →  <++++info symbol 0x55555555531b
main+001b> mov DWORD PTR [rbp-0x20], 0x64
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x00000000178bfbff
0x00007fffffffdbf0│+0x0010: 0x00007fffffffdfb9  →  0x000034365f363878 ("x86_64"?)
0x00007fffffffdbf8│+0x0018: 0x0000000000000064 ("d"?)
0x00007fffffffdc00│+0x0020: 0x0000000000001000
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555530c <+++info symbol 0x55555555530c
main+000c> mov    rax, QWORD PTR fs:0x28
   0x555555555315 <+++info symbol 0x555555555315
main+0015> mov    QWORD PTR [rbp-0x8], rax
   0x555555555319 <+++info symbol 0x555555555319
main+0019> xor    eax, eax
 → 0x55555555531b <++++info symbol 0x55555555531b
main+001b> mov    DWORD PTR [rbp-0x20], 0x64
   0x555555555322 <+++info symbol 0x555555555322
main+0022> mov    DWORD PTR [rbp-0x1c], 0x2d
   0x555555555329 <+++info symbol 0x555555555329
main+0029> mov    DWORD PTR [rbp-0x18], 0x59
   0x555555555330 <+++info symbol 0x555555555330
main+0030> mov    DWORD PTR [rbp-0x14], 0x1b
   0x555555555337 <+++info symbol 0x555555555337
main+0037> mov    DWORD PTR [rbp-0x10], 0x13d
   0x55555555533e <+++info symbol 0x55555555533e
main+003e> mov    DWORD PTR [rbp-0xc], 0x11
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+43 ────
     38	   }
     39	   return 0;
     40	 }
     41	 
     42	 int main() {
           // list=0x00007fffffffdbf0  →  [...]  →  0x000034365f363878 ("x86_64"?)
 →   43	   int list[] = { 100, 45, 89, 27, 317, 17 };
     44	 
     45	   // print the sorted list
     46	   printf("unsorted list: \n");
     47	   printf("\t [ ");
     48	   for(int i = 0; i < 6; i++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555531b in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555531b → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffa  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$rdi   : 0x1               
$rip   : 0x000055555555531b  →  <++++info symbol 0x55555555531b
main+001b> mov DWORD PTR [rbp-0x20], 0x64
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x00000000178bfbff
0x00007fffffffdbf0│+0x0010: 0x00007fffffffdfb9  →  0x000034365f363878 ("x86_64"?)
0x00007fffffffdbf8│+0x0018: 0x0000000000000064 ("d"?)
0x00007fffffffdc00│+0x0020: 0x0000000000001000
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555530c <+++info symbol 0x55555555530c
main+000c> mov    rax, QWORD PTR fs:0x28
   0x555555555315 <+++info symbol 0x555555555315
main+0015> mov    QWORD PTR [rbp-0x8], rax
   0x555555555319 <+++info symbol 0x555555555319
main+0019> xor    eax, eax
 → 0x55555555531b <++++info symbol 0x55555555531b
main+001b> mov    DWORD PTR [rbp-0x20], 0x64
   0x555555555322 <+++info symbol 0x555555555322
main+0022> mov    DWORD PTR [rbp-0x1c], 0x2d
   0x555555555329 <+++info symbol 0x555555555329
main+0029> mov    DWORD PTR [rbp-0x18], 0x59
   0x555555555330 <+++info symbol 0x555555555330
main+0030> mov    DWORD PTR [rbp-0x14], 0x1b
   0x555555555337 <+++info symbol 0x555555555337
main+0037> mov    DWORD PTR [rbp-0x10], 0x13d
   0x55555555533e <+++info symbol 0x55555555533e
main+003e> mov    DWORD PTR [rbp-0xc], 0x11
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+43 ────
     38	   }
     39	   return 0;
     40	 }
     41	 
     42	 int main() {
           // list=0x00007fffffffdbf0  →  [...]  →  0x000034365f363878 ("x86_64"?)
 →   43	   int list[] = { 100, 45, 89, 27, 317, 17 };
     44	 
     45	   // print the sorted list
     46	   printf("unsorted list: \n");
     47	   printf("\t [ ");
     48	   for(int i = 0; i < 6; i++) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555531b in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555531b → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
46	  printf("unsorted list: \n");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffa  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555345  →  <++++info symbol 0x555555555345
main+0045> lea rax, [rip+0xcb8]        # 0x555555556004
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x00000000178bfbff
0x00007fffffffdbf0│+0x0010: 0x0000002d00000064 ("d"?)
0x00007fffffffdbf8│+0x0018: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0020: 0x000000110000013d
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555330 <+++info symbol 0x555555555330
main+0030> mov    DWORD PTR [rbp-0x14], 0x1b
   0x555555555337 <+++info symbol 0x555555555337
main+0037> mov    DWORD PTR [rbp-0x10], 0x13d
   0x55555555533e <+++info symbol 0x55555555533e
main+003e> mov    DWORD PTR [rbp-0xc], 0x11
 → 0x555555555345 <++++info symbol 0x555555555345
main+0045> lea    rax, [rip+0xcb8]        # 0x555555556004
   0x55555555534c <+++info symbol 0x55555555534c
main+004c> mov    rdi, rax
   0x55555555534f <+++info symbol 0x55555555534f
main+004f> call   0x555555555070 <puts@plt>
   0x555555555354 <+++info symbol 0x555555555354
main+0054> lea    rax, [rip+0xcb9]        # 0x555555556014
   0x55555555535b <+++info symbol 0x55555555535b
main+005b> mov    rdi, rax
   0x55555555535e <+++info symbol 0x55555555535e
main+005e> mov    eax, 0x0
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+46 ────
     41	 
     42	 int main() {
     43	   int list[] = { 100, 45, 89, 27, 317, 17 };
     44	 
     45	   // print the sorted list
           // list=0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
 →   46	   printf("unsorted list: \n");
     47	   printf("\t [ ");
     48	   for(int i = 0; i < 6; i++) {
     49	     printf("%4d ", list[i]);
     50	   }
     51	   printf("]\n");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555345 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555345 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffa  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$rdi   : 0x1               
$rip   : 0x0000555555555345  →  <++++info symbol 0x555555555345
main+0045> lea rax, [rip+0xcb8]        # 0x555555556004
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x00000000178bfbff
0x00007fffffffdbf0│+0x0010: 0x0000002d00000064 ("d"?)
0x00007fffffffdbf8│+0x0018: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0020: 0x000000110000013d
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555330 <+++info symbol 0x555555555330
main+0030> mov    DWORD PTR [rbp-0x14], 0x1b
   0x555555555337 <+++info symbol 0x555555555337
main+0037> mov    DWORD PTR [rbp-0x10], 0x13d
   0x55555555533e <+++info symbol 0x55555555533e
main+003e> mov    DWORD PTR [rbp-0xc], 0x11
 → 0x555555555345 <++++info symbol 0x555555555345
main+0045> lea    rax, [rip+0xcb8]        # 0x555555556004
   0x55555555534c <+++info symbol 0x55555555534c
main+004c> mov    rdi, rax
   0x55555555534f <+++info symbol 0x55555555534f
main+004f> call   0x555555555070 <puts@plt>
   0x555555555354 <+++info symbol 0x555555555354
main+0054> lea    rax, [rip+0xcb9]        # 0x555555556014
   0x55555555535b <+++info symbol 0x55555555535b
main+005b> mov    rdi, rax
   0x55555555535e <+++info symbol 0x55555555535e
main+005e> mov    eax, 0x0
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+46 ────
     41	 
     42	 int main() {
     43	   int list[] = { 100, 45, 89, 27, 317, 17 };
     44	 
     45	   // print the sorted list
           // list=0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
 →   46	   printf("unsorted list: \n");
     47	   printf("\t [ ");
     48	   for(int i = 0; i < 6; i++) {
     49	     printf("%4d ", list[i]);
     50	   }
     51	   printf("]\n");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555345 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555345 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
47	  printf("\t [ ");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x10              
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x0000555555555354  →  <++++info symbol 0x555555555354
main+0054> lea rax, [rip+0xcb9]        # 0x555555556014
$r8    : 0x0               
$r9    : 0x00005555555592a0  →  "unsorted list: \n"
$r10   : 0x77              
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x00000000178bfbff
0x00007fffffffdbf0│+0x0010: 0x0000002d00000064 ("d"?)
0x00007fffffffdbf8│+0x0018: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0020: 0x000000110000013d
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555345 <+++info symbol 0x555555555345
main+0045> lea    rax, [rip+0xcb8]        # 0x555555556004
   0x55555555534c <+++info symbol 0x55555555534c
main+004c> mov    rdi, rax
   0x55555555534f <+++info symbol 0x55555555534f
main+004f> call   0x555555555070 <puts@plt>
 → 0x555555555354 <++++info symbol 0x555555555354
main+0054> lea    rax, [rip+0xcb9]        # 0x555555556014
   0x55555555535b <+++info symbol 0x55555555535b
main+005b> mov    rdi, rax
   0x55555555535e <+++info symbol 0x55555555535e
main+005e> mov    eax, 0x0
   0x555555555363 <+++info symbol 0x555555555363
main+0063> call   0x555555555090 <printf@plt>
   0x555555555368 <+++info symbol 0x555555555368
main+0068> mov    DWORD PTR [rbp-0x28], 0x0
   0x55555555536f <+++info symbol 0x55555555536f
main+006f> jmp    0x555555555394 <main+148>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+47 ────
     42	 int main() {
     43	   int list[] = { 100, 45, 89, 27, 317, 17 };
     44	 
     45	   // print the sorted list
     46	   printf("unsorted list: \n");
 →   47	   printf("\t [ ");
     48	   for(int i = 0; i < 6; i++) {
     49	     printf("%4d ", list[i]);
     50	   }
     51	   printf("]\n");
     52	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555354 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555354 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x10              
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x0000555555555354  →  <++++info symbol 0x555555555354
main+0054> lea rax, [rip+0xcb9]        # 0x555555556014
$r8    : 0x0               
$r9    : 0x00005555555592a0  →  "unsorted list: \n"
$r10   : 0x77              
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x00000000178bfbff
0x00007fffffffdbf0│+0x0010: 0x0000002d00000064 ("d"?)
0x00007fffffffdbf8│+0x0018: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0020: 0x000000110000013d
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555345 <+++info symbol 0x555555555345
main+0045> lea    rax, [rip+0xcb8]        # 0x555555556004
   0x55555555534c <+++info symbol 0x55555555534c
main+004c> mov    rdi, rax
   0x55555555534f <+++info symbol 0x55555555534f
main+004f> call   0x555555555070 <puts@plt>
 → 0x555555555354 <++++info symbol 0x555555555354
main+0054> lea    rax, [rip+0xcb9]        # 0x555555556014
   0x55555555535b <+++info symbol 0x55555555535b
main+005b> mov    rdi, rax
   0x55555555535e <+++info symbol 0x55555555535e
main+005e> mov    eax, 0x0
   0x555555555363 <+++info symbol 0x555555555363
main+0063> call   0x555555555090 <printf@plt>
   0x555555555368 <+++info symbol 0x555555555368
main+0068> mov    DWORD PTR [rbp-0x28], 0x0
   0x55555555536f <+++info symbol 0x55555555536f
main+006f> jmp    0x555555555394 <main+148>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+47 ────
     42	 int main() {
     43	   int list[] = { 100, 45, 89, 27, 317, 17 };
     44	 
     45	   // print the sorted list
     46	   printf("unsorted list: \n");
 →   47	   printf("\t [ ");
     48	   for(int i = 0; i < 6; i++) {
     49	     printf("%4d ", list[i]);
     50	   }
     51	   printf("]\n");
     52	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555354 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555354 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+until 52
main () at selection.c:53
53	  selection_sort(list, 6);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x00005555555553a9  →  <++++info symbol 0x5555555553a9
main+00a9> lea rax, [rbp-0x20]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000000000006
0x00007fffffffdbf0│+0x0010: 0x0000002d00000064 ("d"?)
0x00007fffffffdbf8│+0x0018: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0020: 0x000000110000013d
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555539a <+++info symbol 0x55555555539a
main+009a> lea    rax, [rip+0xc7d]        # 0x55555555601e
   0x5555555553a1 <+++info symbol 0x5555555553a1
main+00a1> mov    rdi, rax
   0x5555555553a4 <+++info symbol 0x5555555553a4
main+00a4> call   0x555555555070 <puts@plt>
 → 0x5555555553a9 <++++info symbol 0x5555555553a9
main+00a9> lea    rax, [rbp-0x20]
   0x5555555553ad <+++info symbol 0x5555555553ad
main+00ad> mov    esi, 0x6
   0x5555555553b2 <+++info symbol 0x5555555553b2
main+00b2> mov    rdi, rax
   0x5555555553b5 <+++info symbol 0x5555555553b5
main+00b5> call   0x555555555189 <selection_sort>
   0x5555555553ba <+++info symbol 0x5555555553ba
main+00ba> lea    rax, [rip+0xc5f]        # 0x555555556020
   0x5555555553c1 <+++info symbol 0x5555555553c1
main+00c1> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+53 ────
     48	   for(int i = 0; i < 6; i++) {
     49	     printf("%4d ", list[i]);
     50	   }
     51	   printf("]\n");
     52	 
           // list=0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
 →   53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
     56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553a9 in main (), reason: TEMPORARY BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553a9 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x00005555555553a9  →  <++++info symbol 0x5555555553a9
main+00a9> lea rax, [rbp-0x20]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000000000006
0x00007fffffffdbf0│+0x0010: 0x0000002d00000064 ("d"?)
0x00007fffffffdbf8│+0x0018: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0020: 0x000000110000013d
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555539a <+++info symbol 0x55555555539a
main+009a> lea    rax, [rip+0xc7d]        # 0x55555555601e
   0x5555555553a1 <+++info symbol 0x5555555553a1
main+00a1> mov    rdi, rax
   0x5555555553a4 <+++info symbol 0x5555555553a4
main+00a4> call   0x555555555070 <puts@plt>
 → 0x5555555553a9 <++++info symbol 0x5555555553a9
main+00a9> lea    rax, [rbp-0x20]
   0x5555555553ad <+++info symbol 0x5555555553ad
main+00ad> mov    esi, 0x6
   0x5555555553b2 <+++info symbol 0x5555555553b2
main+00b2> mov    rdi, rax
   0x5555555553b5 <+++info symbol 0x5555555553b5
main+00b5> call   0x555555555189 <selection_sort>
   0x5555555553ba <+++info symbol 0x5555555553ba
main+00ba> lea    rax, [rip+0xc5f]        # 0x555555556020
   0x5555555553c1 <+++info symbol 0x5555555553c1
main+00c1> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+53 ────
     48	   for(int i = 0; i < 6; i++) {
     49	     printf("%4d ", list[i]);
     50	   }
     51	   printf("]\n");
     52	 
           // list=0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
 →   53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
     56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553a9 in main (), reason: TEMPORARY BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553a9 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
selection_sort (A=0x7fffffffdbf0, size=0x6) at selection.c:11
11	  for(i = size-1; i > 0; i--) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x0000555555555198  →  <++++info symbol 0x555555555198
selection_sort+000f> mov eax, DWORD PTR [rbp-0x1c]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rax, $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555518e <+++info symbol 0x55555555518e
selection_sort+0005> mov    rbp, rsp
   0x555555555191 <+++info symbol 0x555555555191
selection_sort+0008> mov    QWORD PTR [rbp-0x18], rdi
   0x555555555195 <+++info symbol 0x555555555195
selection_sort+000c> mov    DWORD PTR [rbp-0x1c], esi
 → 0x555555555198 <++++info symbol 0x555555555198
selection_sort+000f> mov    eax, DWORD PTR [rbp-0x1c]
   0x55555555519b <+++info symbol 0x55555555519b
selection_sort+0012> sub    eax, 0x1
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+11 ────
      6	 #include <stdio.h>
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
           // size=0x6, i=-0x22d8
 →   11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555198 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555198 → selection_sort(A=0x7fffffffdbf0, size=0x6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x0000555555555198  →  <++++info symbol 0x555555555198
selection_sort+000f> mov eax, DWORD PTR [rbp-0x1c]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rax, $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555518e <+++info symbol 0x55555555518e
selection_sort+0005> mov    rbp, rsp
   0x555555555191 <+++info symbol 0x555555555191
selection_sort+0008> mov    QWORD PTR [rbp-0x18], rdi
   0x555555555195 <+++info symbol 0x555555555195
selection_sort+000c> mov    DWORD PTR [rbp-0x1c], esi
 → 0x555555555198 <++++info symbol 0x555555555198
selection_sort+000f> mov    eax, DWORD PTR [rbp-0x1c]
   0x55555555519b <+++info symbol 0x55555555519b
selection_sort+0012> sub    eax, 0x1
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+11 ────
      6	 #include <stdio.h>
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
           // size=0x6, i=-0x22d8
 →   11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555198 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555198 → selection_sort(A=0x7fffffffdbf0, size=0x6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+info local
i = 0xffffdd28
j = 0x7fff
max = 0x55555300
temp = 0x5555
+set output-radix 10
Output radix now set to decimal 10, hex a, octal 12.
+info local
i = -8920
j = 32767
max = 1431655168
temp = 21845
+n
12	    max = 0;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551a6  →  <++++info symbol 0x5555555551a6
selection_sort+001d> mov DWORD PTR [rbp-0x8], 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555519b <+++info symbol 0x55555555519b
selection_sort+0012> sub    eax, 0x1
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
 → 0x5555555551a6 <++++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
   0x5555555551b6 <+++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+12 ────
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
             // max=0x55555300
 →   12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551a6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551a6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551a6  →  <++++info symbol 0x5555555551a6
selection_sort+001d> mov DWORD PTR [rbp-0x8], 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555519b <+++info symbol 0x55555555519b
selection_sort+0012> sub    eax, 0x1
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
 → 0x5555555551a6 <++++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
   0x5555555551b6 <+++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+12 ────
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
             // max=0x55555300
 →   12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551a6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551a6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+info local
i = 5
j = 32767
max = 1431655168
temp = 21845
+n
13	    for (j = 1; j <= i; j++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ad  →  <++++info symbol 0x5555555551ad
selection_sort+0024> mov DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
 → 0x5555555551ad <++++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
   0x5555555551b6 <+++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x5, j=0x7fff
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ad in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ad → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ad  →  <++++info symbol 0x5555555551ad
selection_sort+0024> mov DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
 → 0x5555555551ad <++++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
   0x5555555551b6 <+++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x5, j=0x7fff
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ad in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ad → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
14	      if(A[j] > A[max])
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), j=0x1, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), j=0x1, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
13	    for (j = 1; j <= i; j++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x2d              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x5, j=0x1
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x2d              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x5, j=0x1
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+info local
i = 5
j = 1
max = 0
temp = 21845
+n
14	      if(A[j] > A[max])
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x2d              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), j=0x2, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x2d              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), j=0x2, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
13	    for (j = 1; j <= i; j++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x59              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x5, j=0x2
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x59              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x5, j=0x2
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
14	      if(A[j] > A[max])
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x3               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x59              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), j=0x3, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x3               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x59              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), j=0x3, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
13	    for (j = 1; j <= i; j++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x5, j=0x3
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x5, j=0x3
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
14	      if(A[j] > A[max])
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x4               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), j=0x4, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x4               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), j=0x4, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
15	        max = j;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x13d             
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551e6  →  <++++info symbol 0x5555555551e6
selection_sort+005d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e0 <+++info symbol 0x5555555551e0
selection_sort+0057> mov    eax, DWORD PTR [rax]
   0x5555555551e2 <+++info symbol 0x5555555551e2
selection_sort+0059> cmp    edx, eax
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
 → 0x5555555551e6 <++++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
   0x5555555551ec <+++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+15 ────
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
                 // j=0x4, max=0x0
 →   15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551e6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551e6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x13d             
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551e6  →  <++++info symbol 0x5555555551e6
selection_sort+005d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e0 <+++info symbol 0x5555555551e0
selection_sort+0057> mov    eax, DWORD PTR [rax]
   0x5555555551e2 <+++info symbol 0x5555555551e2
selection_sort+0059> cmp    edx, eax
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
 → 0x5555555551e6 <++++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
   0x5555555551ec <+++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+15 ────
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
                 // j=0x4, max=0x0
 →   15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551e6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551e6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
13	    for (j = 1; j <= i; j++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x4               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x13d             
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x5, j=0x4
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x4               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x13d             
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x5, j=0x4
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
14	      if(A[j] > A[max])
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x13d             
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), j=0x5, max=0x4
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x13d             
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), j=0x5, max=0x4
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
13	    for (j = 1; j <= i; j++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x13d             
$rbx   : 0x0               
$rcx   : 0x10              
$rdx   : 0x11              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x5, j=0x5
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x13d             
$rbx   : 0x0               
$rcx   : 0x10              
$rdx   : 0x11              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x5, j=0x5
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
17	    temp = A[max];
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x6               
$rbx   : 0x0               
$rcx   : 0x10              
$rdx   : 0x11              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551f8  →  <++++info symbol 0x5555555551f8
selection_sort+006f> mov eax, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
 → 0x5555555551f8 <++++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
   0x5555555551fd <+++info symbol 0x5555555551fd
selection_sort+0074> lea    rdx, [rax*4+0x0]
   0x555555555205 <+++info symbol 0x555555555205
selection_sort+007c> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555209 <+++info symbol 0x555555555209
selection_sort+0080> add    rax, rdx
   0x55555555520c <+++info symbol 0x55555555520c
selection_sort+0083> mov    eax, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+17 ────
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), max=0x4, temp=0x5555
 →   17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
     21	 }
     22	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551f8 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551f8 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x6               
$rbx   : 0x0               
$rcx   : 0x10              
$rdx   : 0x11              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551f8  →  <++++info symbol 0x5555555551f8
selection_sort+006f> mov eax, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
 → 0x5555555551f8 <++++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
   0x5555555551fd <+++info symbol 0x5555555551fd
selection_sort+0074> lea    rdx, [rax*4+0x0]
   0x555555555205 <+++info symbol 0x555555555205
selection_sort+007c> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555209 <+++info symbol 0x555555555209
selection_sort+0080> add    rax, rdx
   0x55555555520c <+++info symbol 0x55555555520c
selection_sort+0083> mov    eax, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+17 ────
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), max=0x4, temp=0x5555
 →   17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
     21	 }
     22	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551f8 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551f8 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
18	    A[max] = A[i];
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x13d             
$rbx   : 0x0               
$rcx   : 0x10              
$rdx   : 0x10              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x0000555555555211  →  <++++info symbol 0x555555555211
selection_sort+0088> mov eax, DWORD PTR [rbp-0x10]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555209 <+++info symbol 0x555555555209
selection_sort+0080> add    rax, rdx
   0x55555555520c <+++info symbol 0x55555555520c
selection_sort+0083> mov    eax, DWORD PTR [rax]
   0x55555555520e <+++info symbol 0x55555555520e
selection_sort+0085> mov    DWORD PTR [rbp-0x4], eax
 → 0x555555555211 <++++info symbol 0x555555555211
selection_sort+0088> mov    eax, DWORD PTR [rbp-0x10]
   0x555555555214 <+++info symbol 0x555555555214
selection_sort+008b> cdqe   
   0x555555555216 <+++info symbol 0x555555555216
selection_sort+008d> lea    rdx, [rax*4+0x0]
   0x55555555521e <+++info symbol 0x55555555521e
selection_sort+0095> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555222 <+++info symbol 0x555555555222
selection_sort+0099> add    rax, rdx
   0x555555555225 <+++info symbol 0x555555555225
selection_sort+009c> mov    edx, DWORD PTR [rbp-0x8]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+18 ────
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), i=0x5, max=0x4
 →   18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555211 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555211 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x13d             
$rbx   : 0x0               
$rcx   : 0x10              
$rdx   : 0x10              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x0000555555555211  →  <++++info symbol 0x555555555211
selection_sort+0088> mov eax, DWORD PTR [rbp-0x10]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x000000110000013d
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555209 <+++info symbol 0x555555555209
selection_sort+0080> add    rax, rdx
   0x55555555520c <+++info symbol 0x55555555520c
selection_sort+0083> mov    eax, DWORD PTR [rax]
   0x55555555520e <+++info symbol 0x55555555520e
selection_sort+0085> mov    DWORD PTR [rbp-0x4], eax
 → 0x555555555211 <++++info symbol 0x555555555211
selection_sort+0088> mov    eax, DWORD PTR [rbp-0x10]
   0x555555555214 <+++info symbol 0x555555555214
selection_sort+008b> cdqe   
   0x555555555216 <+++info symbol 0x555555555216
selection_sort+008d> lea    rdx, [rax*4+0x0]
   0x55555555521e <+++info symbol 0x55555555521e
selection_sort+0095> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555222 <+++info symbol 0x555555555222
selection_sort+0099> add    rax, rdx
   0x555555555225 <+++info symbol 0x555555555225
selection_sort+009c> mov    edx, DWORD PTR [rbp-0x8]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+18 ────
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), i=0x5, max=0x4
 →   18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555211 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555211 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
19	    A[i] = temp;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x11              
$rbx   : 0x0               
$rcx   : 0x10              
$rdx   : 0x00007fffffffdc00  →  0x0000001100000011
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x000055555555523e  →  <++++info symbol 0x55555555523e
selection_sort+00b5> mov eax, DWORD PTR [rbp-0x10]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000001100000011	 ← $rdx
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555237 <+++info symbol 0x555555555237
selection_sort+00ae> add    rdx, rcx
   0x55555555523a <+++info symbol 0x55555555523a
selection_sort+00b1> mov    eax, DWORD PTR [rax]
   0x55555555523c <+++info symbol 0x55555555523c
selection_sort+00b3> mov    DWORD PTR [rdx], eax
 → 0x55555555523e <++++info symbol 0x55555555523e
selection_sort+00b5> mov    eax, DWORD PTR [rbp-0x10]
   0x555555555241 <+++info symbol 0x555555555241
selection_sort+00b8> cdqe   
   0x555555555243 <+++info symbol 0x555555555243
selection_sort+00ba> lea    rdx, [rax*4+0x0]
   0x55555555524b <+++info symbol 0x55555555524b
selection_sort+00c2> mov    rax, QWORD PTR [rbp-0x18]
   0x55555555524f <+++info symbol 0x55555555524f
selection_sort+00c6> add    rdx, rax
   0x555555555252 <+++info symbol 0x555555555252
selection_sort+00c9> mov    eax, DWORD PTR [rbp-0x4]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+19 ────
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), i=0x5, temp=0x13d
 →   19	     A[i] = temp;
     20	   }
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555523e in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555523e → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x11              
$rbx   : 0x0               
$rcx   : 0x10              
$rdx   : 0x00007fffffffdc00  →  0x0000001100000011
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x000055555555523e  →  <++++info symbol 0x55555555523e
selection_sort+00b5> mov eax, DWORD PTR [rbp-0x10]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000001100000011	 ← $rdx
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555237 <+++info symbol 0x555555555237
selection_sort+00ae> add    rdx, rcx
   0x55555555523a <+++info symbol 0x55555555523a
selection_sort+00b1> mov    eax, DWORD PTR [rax]
   0x55555555523c <+++info symbol 0x55555555523c
selection_sort+00b3> mov    DWORD PTR [rdx], eax
 → 0x55555555523e <++++info symbol 0x55555555523e
selection_sort+00b5> mov    eax, DWORD PTR [rbp-0x10]
   0x555555555241 <+++info symbol 0x555555555241
selection_sort+00b8> cdqe   
   0x555555555243 <+++info symbol 0x555555555243
selection_sort+00ba> lea    rdx, [rax*4+0x0]
   0x55555555524b <+++info symbol 0x55555555524b
selection_sort+00c2> mov    rax, QWORD PTR [rbp-0x18]
   0x55555555524f <+++info symbol 0x55555555524f
selection_sort+00c6> add    rdx, rax
   0x555555555252 <+++info symbol 0x555555555252
selection_sort+00c9> mov    eax, DWORD PTR [rbp-0x4]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+19 ────
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), i=0x5, temp=0x13d
 →   19	     A[i] = temp;
     20	   }
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555523e in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555523e → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
11	  for(i = size-1; i > 0; i--) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x13d             
$rbx   : 0x0               
$rcx   : 0x10              
$rdx   : 0x00007fffffffdc04  →  0x48286a000000013d
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x0000555555555257  →  <++++info symbol 0x555555555257
selection_sort+00ce> sub DWORD PTR [rbp-0x10], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555524f <+++info symbol 0x55555555524f
selection_sort+00c6> add    rdx, rax
   0x555555555252 <+++info symbol 0x555555555252
selection_sort+00c9> mov    eax, DWORD PTR [rbp-0x4]
   0x555555555255 <+++info symbol 0x555555555255
selection_sort+00cc> mov    DWORD PTR [rdx], eax
 → 0x555555555257 <++++info symbol 0x555555555257
selection_sort+00ce> sub    DWORD PTR [rbp-0x10], 0x1
   0x55555555525b <+++info symbol 0x55555555525b
selection_sort+00d2> cmp    DWORD PTR [rbp-0x10], 0x0
   0x55555555525f <+++info symbol 0x55555555525f
selection_sort+00d6> jg     0x5555555551a6 <selection_sort+29>
   0x555555555265 <+++info symbol 0x555555555265
selection_sort+00dc> nop    
   0x555555555266 <+++info symbol 0x555555555266
selection_sort+00dd> nop    
   0x555555555267 <+++info symbol 0x555555555267
selection_sort+00de> pop    rbp
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+11 ────
      6	 #include <stdio.h>
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
           // size=0x6, i=0x5
 →   11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555257 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555257 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x13d             
$rbx   : 0x0               
$rcx   : 0x10              
$rdx   : 0x00007fffffffdc04  →  0x48286a000000013d
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x0000555555555257  →  <++++info symbol 0x555555555257
selection_sort+00ce> sub DWORD PTR [rbp-0x10], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555524f <+++info symbol 0x55555555524f
selection_sort+00c6> add    rdx, rax
   0x555555555252 <+++info symbol 0x555555555252
selection_sort+00c9> mov    eax, DWORD PTR [rbp-0x4]
   0x555555555255 <+++info symbol 0x555555555255
selection_sort+00cc> mov    DWORD PTR [rdx], eax
 → 0x555555555257 <++++info symbol 0x555555555257
selection_sort+00ce> sub    DWORD PTR [rbp-0x10], 0x1
   0x55555555525b <+++info symbol 0x55555555525b
selection_sort+00d2> cmp    DWORD PTR [rbp-0x10], 0x0
   0x55555555525f <+++info symbol 0x55555555525f
selection_sort+00d6> jg     0x5555555551a6 <selection_sort+29>
   0x555555555265 <+++info symbol 0x555555555265
selection_sort+00dc> nop    
   0x555555555266 <+++info symbol 0x555555555266
selection_sort+00dd> nop    
   0x555555555267 <+++info symbol 0x555555555267
selection_sort+00de> pop    rbp
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+11 ────
      6	 #include <stdio.h>
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
           // size=0x6, i=0x5
 →   11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555257 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555257 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
12	    max = 0;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x13d             
$rbx   : 0x0               
$rcx   : 0x10              
$rdx   : 0x00007fffffffdc04  →  0x48286a000000013d
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551a6  →  <++++info symbol 0x5555555551a6
selection_sort+001d> mov DWORD PTR [rbp-0x8], 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555519b <+++info symbol 0x55555555519b
selection_sort+0012> sub    eax, 0x1
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
 → 0x5555555551a6 <++++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
   0x5555555551b6 <+++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+12 ────
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
             // max=0x4
 →   12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551a6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551a6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x13d             
$rbx   : 0x0               
$rcx   : 0x10              
$rdx   : 0x00007fffffffdc04  →  0x48286a000000013d
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551a6  →  <++++info symbol 0x5555555551a6
selection_sort+001d> mov DWORD PTR [rbp-0x8], 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555519b <+++info symbol 0x55555555519b
selection_sort+0012> sub    eax, 0x1
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
 → 0x5555555551a6 <++++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
   0x5555555551b6 <+++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+12 ────
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
             // max=0x4
 →   12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551a6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551a6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
13	    for (j = 1; j <= i; j++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x13d             
$rbx   : 0x0               
$rcx   : 0x10              
$rdx   : 0x00007fffffffdc04  →  0x48286a000000013d
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ad  →  <++++info symbol 0x5555555551ad
selection_sort+0024> mov DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
 → 0x5555555551ad <++++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
   0x5555555551b6 <+++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x4, j=0x6
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ad in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ad → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x13d             
$rbx   : 0x0               
$rcx   : 0x10              
$rdx   : 0x00007fffffffdc04  →  0x48286a000000013d
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ad  →  <++++info symbol 0x5555555551ad
selection_sort+0024> mov DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
 → 0x5555555551ad <++++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
   0x5555555551b6 <+++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x4, j=0x6
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ad in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ad → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+f
#0  selection_sort (A=0x7fffffffdbf0, size=6) at selection.c:13
13	    for (j = 1; j <= i; j++) {
+n
14	      if(A[j] > A[max])
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x10              
$rdx   : 0x00007fffffffdc04  →  0x48286a000000013d
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), j=0x1, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x10              
$rdx   : 0x00007fffffffdc04  →  0x48286a000000013d
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), j=0x1, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
13	    for (j = 1; j <= i; j++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x2d              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x4, j=0x1
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x2d              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x4, j=0x1
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
14	      if(A[j] > A[max])
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x2d              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), j=0x2, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x2d              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), j=0x2, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
13	    for (j = 1; j <= i; j++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x59              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x4, j=0x2
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x59              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x4, j=0x2
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
14	      if(A[j] > A[max])
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x3               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x59              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), j=0x3, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x3               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x59              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), j=0x3, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
13	    for (j = 1; j <= i; j++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x4, j=0x3
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x4, j=0x3
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
14	      if(A[j] > A[max])
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x4               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), j=0x4, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x4               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), j=0x4, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
13	    for (j = 1; j <= i; j++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x11              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x4, j=0x4
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x11              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x4, j=0x4
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
17	    temp = A[max];
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x11              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551f8  →  <++++info symbol 0x5555555551f8
selection_sort+006f> mov eax, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
 → 0x5555555551f8 <++++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
   0x5555555551fd <+++info symbol 0x5555555551fd
selection_sort+0074> lea    rdx, [rax*4+0x0]
   0x555555555205 <+++info symbol 0x555555555205
selection_sort+007c> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555209 <+++info symbol 0x555555555209
selection_sort+0080> add    rax, rdx
   0x55555555520c <+++info symbol 0x55555555520c
selection_sort+0083> mov    eax, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+17 ────
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), max=0x0, temp=0x13d
 →   17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
     21	 }
     22	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551f8 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551f8 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x11              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x00005555555551f8  →  <++++info symbol 0x5555555551f8
selection_sort+006f> mov eax, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
 → 0x5555555551f8 <++++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
   0x5555555551fd <+++info symbol 0x5555555551fd
selection_sort+0074> lea    rdx, [rax*4+0x0]
   0x555555555205 <+++info symbol 0x555555555205
selection_sort+007c> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555209 <+++info symbol 0x555555555209
selection_sort+0080> add    rax, rdx
   0x55555555520c <+++info symbol 0x55555555520c
selection_sort+0083> mov    eax, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+17 ────
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), max=0x0, temp=0x13d
 →   17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
     21	 }
     22	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551f8 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551f8 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
18	    A[max] = A[i];
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x0000555555555211  →  <++++info symbol 0x555555555211
selection_sort+0088> mov eax, DWORD PTR [rbp-0x10]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555209 <+++info symbol 0x555555555209
selection_sort+0080> add    rax, rdx
   0x55555555520c <+++info symbol 0x55555555520c
selection_sort+0083> mov    eax, DWORD PTR [rax]
   0x55555555520e <+++info symbol 0x55555555520e
selection_sort+0085> mov    DWORD PTR [rbp-0x4], eax
 → 0x555555555211 <++++info symbol 0x555555555211
selection_sort+0088> mov    eax, DWORD PTR [rbp-0x10]
   0x555555555214 <+++info symbol 0x555555555214
selection_sort+008b> cdqe   
   0x555555555216 <+++info symbol 0x555555555216
selection_sort+008d> lea    rdx, [rax*4+0x0]
   0x55555555521e <+++info symbol 0x55555555521e
selection_sort+0095> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555222 <+++info symbol 0x555555555222
selection_sort+0099> add    rax, rdx
   0x555555555225 <+++info symbol 0x555555555225
selection_sort+009c> mov    edx, DWORD PTR [rbp-0x8]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+18 ────
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), i=0x4, max=0x0
 →   18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555211 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555211 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000064 ("d"?)
$rip   : 0x0000555555555211  →  <++++info symbol 0x555555555211
selection_sort+0088> mov eax, DWORD PTR [rbp-0x10]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000064 ("d"?)	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555209 <+++info symbol 0x555555555209
selection_sort+0080> add    rax, rdx
   0x55555555520c <+++info symbol 0x55555555520c
selection_sort+0083> mov    eax, DWORD PTR [rax]
   0x55555555520e <+++info symbol 0x55555555520e
selection_sort+0085> mov    DWORD PTR [rbp-0x4], eax
 → 0x555555555211 <++++info symbol 0x555555555211
selection_sort+0088> mov    eax, DWORD PTR [rbp-0x10]
   0x555555555214 <+++info symbol 0x555555555214
selection_sort+008b> cdqe   
   0x555555555216 <+++info symbol 0x555555555216
selection_sort+008d> lea    rdx, [rax*4+0x0]
   0x55555555521e <+++info symbol 0x55555555521e
selection_sort+0095> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555222 <+++info symbol 0x555555555222
selection_sort+0099> add    rax, rdx
   0x555555555225 <+++info symbol 0x555555555225
selection_sort+009c> mov    edx, DWORD PTR [rbp-0x8]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+18 ────
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000064 ("d"?), i=0x4, max=0x0
 →   18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555211 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555211 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
19	    A[i] = temp;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x11              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x000055555555523e  →  <++++info symbol 0x55555555523e
selection_sort+00b5> mov eax, DWORD PTR [rbp-0x10]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdx, $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555237 <+++info symbol 0x555555555237
selection_sort+00ae> add    rdx, rcx
   0x55555555523a <+++info symbol 0x55555555523a
selection_sort+00b1> mov    eax, DWORD PTR [rax]
   0x55555555523c <+++info symbol 0x55555555523c
selection_sort+00b3> mov    DWORD PTR [rdx], eax
 → 0x55555555523e <++++info symbol 0x55555555523e
selection_sort+00b5> mov    eax, DWORD PTR [rbp-0x10]
   0x555555555241 <+++info symbol 0x555555555241
selection_sort+00b8> cdqe   
   0x555555555243 <+++info symbol 0x555555555243
selection_sort+00ba> lea    rdx, [rax*4+0x0]
   0x55555555524b <+++info symbol 0x55555555524b
selection_sort+00c2> mov    rax, QWORD PTR [rbp-0x18]
   0x55555555524f <+++info symbol 0x55555555524f
selection_sort+00c6> add    rdx, rax
   0x555555555252 <+++info symbol 0x555555555252
selection_sort+00c9> mov    eax, DWORD PTR [rbp-0x4]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+19 ────
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, i=0x4, temp=0x64
 →   19	     A[i] = temp;
     20	   }
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555523e in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555523e → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x11              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x000055555555523e  →  <++++info symbol 0x55555555523e
selection_sort+00b5> mov eax, DWORD PTR [rbp-0x10]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdx, $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000011
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555237 <+++info symbol 0x555555555237
selection_sort+00ae> add    rdx, rcx
   0x55555555523a <+++info symbol 0x55555555523a
selection_sort+00b1> mov    eax, DWORD PTR [rax]
   0x55555555523c <+++info symbol 0x55555555523c
selection_sort+00b3> mov    DWORD PTR [rdx], eax
 → 0x55555555523e <++++info symbol 0x55555555523e
selection_sort+00b5> mov    eax, DWORD PTR [rbp-0x10]
   0x555555555241 <+++info symbol 0x555555555241
selection_sort+00b8> cdqe   
   0x555555555243 <+++info symbol 0x555555555243
selection_sort+00ba> lea    rdx, [rax*4+0x0]
   0x55555555524b <+++info symbol 0x55555555524b
selection_sort+00c2> mov    rax, QWORD PTR [rbp-0x18]
   0x55555555524f <+++info symbol 0x55555555524f
selection_sort+00c6> add    rdx, rax
   0x555555555252 <+++info symbol 0x555555555252
selection_sort+00c9> mov    eax, DWORD PTR [rbp-0x4]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+19 ────
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, i=0x4, temp=0x64
 →   19	     A[i] = temp;
     20	   }
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555523e in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555523e → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
11	  for(i = size-1; i > 0; i--) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007fffffffdc00  →  0x0000013d00000064 ("d"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x0000555555555257  →  <++++info symbol 0x555555555257
selection_sort+00ce> sub DWORD PTR [rbp-0x10], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)	 ← $rdx
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555524f <+++info symbol 0x55555555524f
selection_sort+00c6> add    rdx, rax
   0x555555555252 <+++info symbol 0x555555555252
selection_sort+00c9> mov    eax, DWORD PTR [rbp-0x4]
   0x555555555255 <+++info symbol 0x555555555255
selection_sort+00cc> mov    DWORD PTR [rdx], eax
 → 0x555555555257 <++++info symbol 0x555555555257
selection_sort+00ce> sub    DWORD PTR [rbp-0x10], 0x1
   0x55555555525b <+++info symbol 0x55555555525b
selection_sort+00d2> cmp    DWORD PTR [rbp-0x10], 0x0
   0x55555555525f <+++info symbol 0x55555555525f
selection_sort+00d6> jg     0x5555555551a6 <selection_sort+29>
   0x555555555265 <+++info symbol 0x555555555265
selection_sort+00dc> nop    
   0x555555555266 <+++info symbol 0x555555555266
selection_sort+00dd> nop    
   0x555555555267 <+++info symbol 0x555555555267
selection_sort+00de> pop    rbp
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+11 ────
      6	 #include <stdio.h>
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
           // size=0x6, i=0x4
 →   11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555257 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555257 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007fffffffdc00  →  0x0000013d00000064 ("d"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x0000555555555257  →  <++++info symbol 0x555555555257
selection_sort+00ce> sub DWORD PTR [rbp-0x10], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)	 ← $rdx
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555524f <+++info symbol 0x55555555524f
selection_sort+00c6> add    rdx, rax
   0x555555555252 <+++info symbol 0x555555555252
selection_sort+00c9> mov    eax, DWORD PTR [rbp-0x4]
   0x555555555255 <+++info symbol 0x555555555255
selection_sort+00cc> mov    DWORD PTR [rdx], eax
 → 0x555555555257 <++++info symbol 0x555555555257
selection_sort+00ce> sub    DWORD PTR [rbp-0x10], 0x1
   0x55555555525b <+++info symbol 0x55555555525b
selection_sort+00d2> cmp    DWORD PTR [rbp-0x10], 0x0
   0x55555555525f <+++info symbol 0x55555555525f
selection_sort+00d6> jg     0x5555555551a6 <selection_sort+29>
   0x555555555265 <+++info symbol 0x555555555265
selection_sort+00dc> nop    
   0x555555555266 <+++info symbol 0x555555555266
selection_sort+00dd> nop    
   0x555555555267 <+++info symbol 0x555555555267
selection_sort+00de> pop    rbp
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+11 ────
      6	 #include <stdio.h>
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
           // size=0x6, i=0x4
 →   11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555257 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555257 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
12	    max = 0;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007fffffffdc00  →  0x0000013d00000064 ("d"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551a6  →  <++++info symbol 0x5555555551a6
selection_sort+001d> mov DWORD PTR [rbp-0x8], 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)	 ← $rdx
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555519b <+++info symbol 0x55555555519b
selection_sort+0012> sub    eax, 0x1
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
 → 0x5555555551a6 <++++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
   0x5555555551b6 <+++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+12 ────
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
             // max=0x0
 →   12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551a6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551a6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007fffffffdc00  →  0x0000013d00000064 ("d"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551a6  →  <++++info symbol 0x5555555551a6
selection_sort+001d> mov DWORD PTR [rbp-0x8], 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)	 ← $rdx
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555519b <+++info symbol 0x55555555519b
selection_sort+0012> sub    eax, 0x1
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
 → 0x5555555551a6 <++++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
   0x5555555551b6 <+++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+12 ────
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
             // max=0x0
 →   12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551a6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551a6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
13	    for (j = 1; j <= i; j++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007fffffffdc00  →  0x0000013d00000064 ("d"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551ad  →  <++++info symbol 0x5555555551ad
selection_sort+0024> mov DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)	 ← $rdx
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
 → 0x5555555551ad <++++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
   0x5555555551b6 <+++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x3, j=0x5
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ad in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ad → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x64              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007fffffffdc00  →  0x0000013d00000064 ("d"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551ad  →  <++++info symbol 0x5555555551ad
selection_sort+0024> mov DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)	 ← $rdx
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
 → 0x5555555551ad <++++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
   0x5555555551b6 <+++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x3, j=0x5
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ad in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ad → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
14	      if(A[j] > A[max])
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007fffffffdc00  →  0x0000013d00000064 ("d"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)	 ← $rdx
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, j=0x1, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x00007fffffffdc00  →  0x0000013d00000064 ("d"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)	 ← $rdx
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, j=0x1, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
15	        max = j;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x11              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x2d              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551e6  →  <++++info symbol 0x5555555551e6
selection_sort+005d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e0 <+++info symbol 0x5555555551e0
selection_sort+0057> mov    eax, DWORD PTR [rax]
   0x5555555551e2 <+++info symbol 0x5555555551e2
selection_sort+0059> cmp    edx, eax
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
 → 0x5555555551e6 <++++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
   0x5555555551ec <+++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+15 ────
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
                 // j=0x1, max=0x0
 →   15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551e6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551e6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x11              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x2d              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551e6  →  <++++info symbol 0x5555555551e6
selection_sort+005d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e0 <+++info symbol 0x5555555551e0
selection_sort+0057> mov    eax, DWORD PTR [rax]
   0x5555555551e2 <+++info symbol 0x5555555551e2
selection_sort+0059> cmp    edx, eax
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
 → 0x5555555551e6 <++++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
   0x5555555551ec <+++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+15 ────
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
                 // j=0x1, max=0x0
 →   15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551e6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551e6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
13	    for (j = 1; j <= i; j++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x2d              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x3, j=0x1
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x2d              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x3, j=0x1
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
14	      if(A[j] > A[max])
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x2d              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, j=0x2, max=0x1
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x2d              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, j=0x2, max=0x1
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
15	        max = j;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2d              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x59              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551e6  →  <++++info symbol 0x5555555551e6
selection_sort+005d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity ADJUST sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e0 <+++info symbol 0x5555555551e0
selection_sort+0057> mov    eax, DWORD PTR [rax]
   0x5555555551e2 <+++info symbol 0x5555555551e2
selection_sort+0059> cmp    edx, eax
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
 → 0x5555555551e6 <++++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
   0x5555555551ec <+++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+15 ────
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
                 // j=0x2, max=0x1
 →   15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551e6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551e6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2d              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x59              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551e6  →  <++++info symbol 0x5555555551e6
selection_sort+005d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity ADJUST sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e0 <+++info symbol 0x5555555551e0
selection_sort+0057> mov    eax, DWORD PTR [rax]
   0x5555555551e2 <+++info symbol 0x5555555551e2
selection_sort+0059> cmp    edx, eax
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
 → 0x5555555551e6 <++++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
   0x5555555551ec <+++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+15 ────
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
                 // j=0x2, max=0x1
 →   15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551e6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551e6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
13	    for (j = 1; j <= i; j++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x59              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity ADJUST sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x3, j=0x2
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x59              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity ADJUST sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x3, j=0x2
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
14	      if(A[j] > A[max])
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x3               
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x59              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, j=0x3, max=0x2
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x3               
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x59              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, j=0x3, max=0x2
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
13	    for (j = 1; j <= i; j++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x59              
$rbx   : 0x0               
$rcx   : 0x8               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x3, j=0x3
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x59              
$rbx   : 0x0               
$rcx   : 0x8               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x3, j=0x3
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
17	    temp = A[max];
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x4               
$rbx   : 0x0               
$rcx   : 0x8               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551f8  →  <++++info symbol 0x5555555551f8
selection_sort+006f> mov eax, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
 → 0x5555555551f8 <++++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
   0x5555555551fd <+++info symbol 0x5555555551fd
selection_sort+0074> lea    rdx, [rax*4+0x0]
   0x555555555205 <+++info symbol 0x555555555205
selection_sort+007c> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555209 <+++info symbol 0x555555555209
selection_sort+0080> add    rax, rdx
   0x55555555520c <+++info symbol 0x55555555520c
selection_sort+0083> mov    eax, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+17 ────
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, max=0x2, temp=0x64
 →   17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
     21	 }
     22	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551f8 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551f8 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x4               
$rbx   : 0x0               
$rcx   : 0x8               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551f8  →  <++++info symbol 0x5555555551f8
selection_sort+006f> mov eax, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
 → 0x5555555551f8 <++++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
   0x5555555551fd <+++info symbol 0x5555555551fd
selection_sort+0074> lea    rdx, [rax*4+0x0]
   0x555555555205 <+++info symbol 0x555555555205
selection_sort+007c> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555209 <+++info symbol 0x555555555209
selection_sort+0080> add    rax, rdx
   0x55555555520c <+++info symbol 0x55555555520c
selection_sort+0083> mov    eax, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+17 ────
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, max=0x2, temp=0x64
 →   17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
     21	 }
     22	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551f8 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551f8 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
18	    A[max] = A[i];
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x59              
$rbx   : 0x0               
$rcx   : 0x8               
$rdx   : 0x8               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x0000555555555211  →  <++++info symbol 0x555555555211
selection_sort+0088> mov eax, DWORD PTR [rbp-0x10]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555209 <+++info symbol 0x555555555209
selection_sort+0080> add    rax, rdx
   0x55555555520c <+++info symbol 0x55555555520c
selection_sort+0083> mov    eax, DWORD PTR [rax]
   0x55555555520e <+++info symbol 0x55555555520e
selection_sort+0085> mov    DWORD PTR [rbp-0x4], eax
 → 0x555555555211 <++++info symbol 0x555555555211
selection_sort+0088> mov    eax, DWORD PTR [rbp-0x10]
   0x555555555214 <+++info symbol 0x555555555214
selection_sort+008b> cdqe   
   0x555555555216 <+++info symbol 0x555555555216
selection_sort+008d> lea    rdx, [rax*4+0x0]
   0x55555555521e <+++info symbol 0x55555555521e
selection_sort+0095> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555222 <+++info symbol 0x555555555222
selection_sort+0099> add    rax, rdx
   0x555555555225 <+++info symbol 0x555555555225
selection_sort+009c> mov    edx, DWORD PTR [rbp-0x8]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+18 ────
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, i=0x3, max=0x2
 →   18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555211 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555211 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x59              
$rbx   : 0x0               
$rcx   : 0x8               
$rdx   : 0x8               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x0000555555555211  →  <++++info symbol 0x555555555211
selection_sort+0088> mov eax, DWORD PTR [rbp-0x10]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b00000059 ("Y"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555209 <+++info symbol 0x555555555209
selection_sort+0080> add    rax, rdx
   0x55555555520c <+++info symbol 0x55555555520c
selection_sort+0083> mov    eax, DWORD PTR [rax]
   0x55555555520e <+++info symbol 0x55555555520e
selection_sort+0085> mov    DWORD PTR [rbp-0x4], eax
 → 0x555555555211 <++++info symbol 0x555555555211
selection_sort+0088> mov    eax, DWORD PTR [rbp-0x10]
   0x555555555214 <+++info symbol 0x555555555214
selection_sort+008b> cdqe   
   0x555555555216 <+++info symbol 0x555555555216
selection_sort+008d> lea    rdx, [rax*4+0x0]
   0x55555555521e <+++info symbol 0x55555555521e
selection_sort+0095> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555222 <+++info symbol 0x555555555222
selection_sort+0099> add    rax, rdx
   0x555555555225 <+++info symbol 0x555555555225
selection_sort+009c> mov    edx, DWORD PTR [rbp-0x8]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+18 ────
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, i=0x3, max=0x2
 →   18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555211 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555211 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
19	    A[i] = temp;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1b              
$rbx   : 0x0               
$rcx   : 0x8               
$rdx   : 0x00007fffffffdbf8  →  0x0000001b0000001b
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x000055555555523e  →  <++++info symbol 0x55555555523e
selection_sort+00b5> mov eax, DWORD PTR [rbp-0x10]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b0000001b	 ← $rdx
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555237 <+++info symbol 0x555555555237
selection_sort+00ae> add    rdx, rcx
   0x55555555523a <+++info symbol 0x55555555523a
selection_sort+00b1> mov    eax, DWORD PTR [rax]
   0x55555555523c <+++info symbol 0x55555555523c
selection_sort+00b3> mov    DWORD PTR [rdx], eax
 → 0x55555555523e <++++info symbol 0x55555555523e
selection_sort+00b5> mov    eax, DWORD PTR [rbp-0x10]
   0x555555555241 <+++info symbol 0x555555555241
selection_sort+00b8> cdqe   
   0x555555555243 <+++info symbol 0x555555555243
selection_sort+00ba> lea    rdx, [rax*4+0x0]
   0x55555555524b <+++info symbol 0x55555555524b
selection_sort+00c2> mov    rax, QWORD PTR [rbp-0x18]
   0x55555555524f <+++info symbol 0x55555555524f
selection_sort+00c6> add    rdx, rax
   0x555555555252 <+++info symbol 0x555555555252
selection_sort+00c9> mov    eax, DWORD PTR [rbp-0x4]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+19 ────
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, i=0x3, temp=0x59
 →   19	     A[i] = temp;
     20	   }
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555523e in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555523e → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1b              
$rbx   : 0x0               
$rcx   : 0x8               
$rdx   : 0x00007fffffffdbf8  →  0x0000001b0000001b
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x000055555555523e  →  <++++info symbol 0x55555555523e
selection_sort+00b5> mov eax, DWORD PTR [rbp-0x10]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x0000001b0000001b	 ← $rdx
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555237 <+++info symbol 0x555555555237
selection_sort+00ae> add    rdx, rcx
   0x55555555523a <+++info symbol 0x55555555523a
selection_sort+00b1> mov    eax, DWORD PTR [rax]
   0x55555555523c <+++info symbol 0x55555555523c
selection_sort+00b3> mov    DWORD PTR [rdx], eax
 → 0x55555555523e <++++info symbol 0x55555555523e
selection_sort+00b5> mov    eax, DWORD PTR [rbp-0x10]
   0x555555555241 <+++info symbol 0x555555555241
selection_sort+00b8> cdqe   
   0x555555555243 <+++info symbol 0x555555555243
selection_sort+00ba> lea    rdx, [rax*4+0x0]
   0x55555555524b <+++info symbol 0x55555555524b
selection_sort+00c2> mov    rax, QWORD PTR [rbp-0x18]
   0x55555555524f <+++info symbol 0x55555555524f
selection_sort+00c6> add    rdx, rax
   0x555555555252 <+++info symbol 0x555555555252
selection_sort+00c9> mov    eax, DWORD PTR [rbp-0x4]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+19 ────
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, i=0x3, temp=0x59
 →   19	     A[i] = temp;
     20	   }
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555523e in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555523e → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
11	  for(i = size-1; i > 0; i--) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x59              
$rbx   : 0x0               
$rcx   : 0x8               
$rdx   : 0x00007fffffffdbfc  →  0x0000006400000059 ("Y"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x0000555555555257  →  <++++info symbol 0x555555555257
selection_sort+00ce> sub DWORD PTR [rbp-0x10], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555524f <+++info symbol 0x55555555524f
selection_sort+00c6> add    rdx, rax
   0x555555555252 <+++info symbol 0x555555555252
selection_sort+00c9> mov    eax, DWORD PTR [rbp-0x4]
   0x555555555255 <+++info symbol 0x555555555255
selection_sort+00cc> mov    DWORD PTR [rdx], eax
 → 0x555555555257 <++++info symbol 0x555555555257
selection_sort+00ce> sub    DWORD PTR [rbp-0x10], 0x1
   0x55555555525b <+++info symbol 0x55555555525b
selection_sort+00d2> cmp    DWORD PTR [rbp-0x10], 0x0
   0x55555555525f <+++info symbol 0x55555555525f
selection_sort+00d6> jg     0x5555555551a6 <selection_sort+29>
   0x555555555265 <+++info symbol 0x555555555265
selection_sort+00dc> nop    
   0x555555555266 <+++info symbol 0x555555555266
selection_sort+00dd> nop    
   0x555555555267 <+++info symbol 0x555555555267
selection_sort+00de> pop    rbp
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+11 ────
      6	 #include <stdio.h>
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
           // size=0x6, i=0x3
 →   11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555257 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555257 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x59              
$rbx   : 0x0               
$rcx   : 0x8               
$rdx   : 0x00007fffffffdbfc  →  0x0000006400000059 ("Y"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x0000555555555257  →  <++++info symbol 0x555555555257
selection_sort+00ce> sub DWORD PTR [rbp-0x10], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555524f <+++info symbol 0x55555555524f
selection_sort+00c6> add    rdx, rax
   0x555555555252 <+++info symbol 0x555555555252
selection_sort+00c9> mov    eax, DWORD PTR [rbp-0x4]
   0x555555555255 <+++info symbol 0x555555555255
selection_sort+00cc> mov    DWORD PTR [rdx], eax
 → 0x555555555257 <++++info symbol 0x555555555257
selection_sort+00ce> sub    DWORD PTR [rbp-0x10], 0x1
   0x55555555525b <+++info symbol 0x55555555525b
selection_sort+00d2> cmp    DWORD PTR [rbp-0x10], 0x0
   0x55555555525f <+++info symbol 0x55555555525f
selection_sort+00d6> jg     0x5555555551a6 <selection_sort+29>
   0x555555555265 <+++info symbol 0x555555555265
selection_sort+00dc> nop    
   0x555555555266 <+++info symbol 0x555555555266
selection_sort+00dd> nop    
   0x555555555267 <+++info symbol 0x555555555267
selection_sort+00de> pop    rbp
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+11 ────
      6	 #include <stdio.h>
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
           // size=0x6, i=0x3
 →   11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555257 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555257 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
12	    max = 0;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x59              
$rbx   : 0x0               
$rcx   : 0x8               
$rdx   : 0x00007fffffffdbfc  →  0x0000006400000059 ("Y"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551a6  →  <++++info symbol 0x5555555551a6
selection_sort+001d> mov DWORD PTR [rbp-0x8], 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555519b <+++info symbol 0x55555555519b
selection_sort+0012> sub    eax, 0x1
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
 → 0x5555555551a6 <++++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
   0x5555555551b6 <+++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+12 ────
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
             // max=0x2
 →   12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551a6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551a6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x59              
$rbx   : 0x0               
$rcx   : 0x8               
$rdx   : 0x00007fffffffdbfc  →  0x0000006400000059 ("Y"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551a6  →  <++++info symbol 0x5555555551a6
selection_sort+001d> mov DWORD PTR [rbp-0x8], 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555519b <+++info symbol 0x55555555519b
selection_sort+0012> sub    eax, 0x1
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
 → 0x5555555551a6 <++++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
   0x5555555551b6 <+++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+12 ────
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
             // max=0x2
 →   12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551a6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551a6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
13	    for (j = 1; j <= i; j++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x59              
$rbx   : 0x0               
$rcx   : 0x8               
$rdx   : 0x00007fffffffdbfc  →  0x0000006400000059 ("Y"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551ad  →  <++++info symbol 0x5555555551ad
selection_sort+0024> mov DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
 → 0x5555555551ad <++++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
   0x5555555551b6 <+++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x2, j=0x4
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ad in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ad → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x59              
$rbx   : 0x0               
$rcx   : 0x8               
$rdx   : 0x00007fffffffdbfc  →  0x0000006400000059 ("Y"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551ad  →  <++++info symbol 0x5555555551ad
selection_sort+0024> mov DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
 → 0x5555555551ad <++++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
   0x5555555551b6 <+++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x2, j=0x4
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ad in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ad → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
14	      if(A[j] > A[max])
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x8               
$rdx   : 0x00007fffffffdbfc  →  0x0000006400000059 ("Y"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, j=0x1, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x8               
$rdx   : 0x00007fffffffdbfc  →  0x0000006400000059 ("Y"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, j=0x1, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
15	        max = j;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x11              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x2d              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551e6  →  <++++info symbol 0x5555555551e6
selection_sort+005d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e0 <+++info symbol 0x5555555551e0
selection_sort+0057> mov    eax, DWORD PTR [rax]
   0x5555555551e2 <+++info symbol 0x5555555551e2
selection_sort+0059> cmp    edx, eax
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
 → 0x5555555551e6 <++++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
   0x5555555551ec <+++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+15 ────
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
                 // j=0x1, max=0x0
 →   15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551e6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551e6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x11              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x2d              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551e6  →  <++++info symbol 0x5555555551e6
selection_sort+005d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e0 <+++info symbol 0x5555555551e0
selection_sort+0057> mov    eax, DWORD PTR [rax]
   0x5555555551e2 <+++info symbol 0x5555555551e2
selection_sort+0059> cmp    edx, eax
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
 → 0x5555555551e6 <++++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
   0x5555555551ec <+++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+15 ────
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
                 // j=0x1, max=0x0
 →   15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551e6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551e6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
13	    for (j = 1; j <= i; j++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x2d              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x2, j=0x1
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x2d              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x2, j=0x1
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
14	      if(A[j] > A[max])
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x2d              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, j=0x2, max=0x1
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x2d              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, j=0x2, max=0x1
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
13	    for (j = 1; j <= i; j++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2d              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x2, j=0x2
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2d              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x2, j=0x2
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
17	    temp = A[max];
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x3               
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551f8  →  <++++info symbol 0x5555555551f8
selection_sort+006f> mov eax, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
 → 0x5555555551f8 <++++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
   0x5555555551fd <+++info symbol 0x5555555551fd
selection_sort+0074> lea    rdx, [rax*4+0x0]
   0x555555555205 <+++info symbol 0x555555555205
selection_sort+007c> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555209 <+++info symbol 0x555555555209
selection_sort+0080> add    rax, rdx
   0x55555555520c <+++info symbol 0x55555555520c
selection_sort+0083> mov    eax, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+17 ────
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, max=0x1, temp=0x59
 →   17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
     21	 }
     22	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551f8 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551f8 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x3               
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x00005555555551f8  →  <++++info symbol 0x5555555551f8
selection_sort+006f> mov eax, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
 → 0x5555555551f8 <++++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
   0x5555555551fd <+++info symbol 0x5555555551fd
selection_sort+0074> lea    rdx, [rax*4+0x0]
   0x555555555205 <+++info symbol 0x555555555205
selection_sort+007c> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555209 <+++info symbol 0x555555555209
selection_sort+0080> add    rax, rdx
   0x55555555520c <+++info symbol 0x55555555520c
selection_sort+0083> mov    eax, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+17 ────
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, max=0x1, temp=0x59
 →   17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
     21	 }
     22	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551f8 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551f8 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
18	    A[max] = A[i];
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2d              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x0000555555555211  →  <++++info symbol 0x555555555211
selection_sort+0088> mov eax, DWORD PTR [rbp-0x10]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555209 <+++info symbol 0x555555555209
selection_sort+0080> add    rax, rdx
   0x55555555520c <+++info symbol 0x55555555520c
selection_sort+0083> mov    eax, DWORD PTR [rax]
   0x55555555520e <+++info symbol 0x55555555520e
selection_sort+0085> mov    DWORD PTR [rbp-0x4], eax
 → 0x555555555211 <++++info symbol 0x555555555211
selection_sort+0088> mov    eax, DWORD PTR [rbp-0x10]
   0x555555555214 <+++info symbol 0x555555555214
selection_sort+008b> cdqe   
   0x555555555216 <+++info symbol 0x555555555216
selection_sort+008d> lea    rdx, [rax*4+0x0]
   0x55555555521e <+++info symbol 0x55555555521e
selection_sort+0095> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555222 <+++info symbol 0x555555555222
selection_sort+0099> add    rax, rdx
   0x555555555225 <+++info symbol 0x555555555225
selection_sort+009c> mov    edx, DWORD PTR [rbp-0x8]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+18 ────
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, i=0x2, max=0x1
 →   18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555211 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555211 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2d              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000002d00000011
$rip   : 0x0000555555555211  →  <++++info symbol 0x555555555211
selection_sort+0088> mov eax, DWORD PTR [rbp-0x10]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000002d00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555209 <+++info symbol 0x555555555209
selection_sort+0080> add    rax, rdx
   0x55555555520c <+++info symbol 0x55555555520c
selection_sort+0083> mov    eax, DWORD PTR [rax]
   0x55555555520e <+++info symbol 0x55555555520e
selection_sort+0085> mov    DWORD PTR [rbp-0x4], eax
 → 0x555555555211 <++++info symbol 0x555555555211
selection_sort+0088> mov    eax, DWORD PTR [rbp-0x10]
   0x555555555214 <+++info symbol 0x555555555214
selection_sort+008b> cdqe   
   0x555555555216 <+++info symbol 0x555555555216
selection_sort+008d> lea    rdx, [rax*4+0x0]
   0x55555555521e <+++info symbol 0x55555555521e
selection_sort+0095> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555222 <+++info symbol 0x555555555222
selection_sort+0099> add    rax, rdx
   0x555555555225 <+++info symbol 0x555555555225
selection_sort+009c> mov    edx, DWORD PTR [rbp-0x8]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+18 ────
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000002d00000011, i=0x2, max=0x1
 →   18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555211 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555211 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+nn
Undefined command: "nn".  Try "help".
+n
19	    A[i] = temp;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1b              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x00007fffffffdbf4  →  0x0000001b0000001b
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x000055555555523e  →  <++++info symbol 0x55555555523e
selection_sort+00b5> mov eax, DWORD PTR [rbp-0x10]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555237 <+++info symbol 0x555555555237
selection_sort+00ae> add    rdx, rcx
   0x55555555523a <+++info symbol 0x55555555523a
selection_sort+00b1> mov    eax, DWORD PTR [rax]
   0x55555555523c <+++info symbol 0x55555555523c
selection_sort+00b3> mov    DWORD PTR [rdx], eax
 → 0x55555555523e <++++info symbol 0x55555555523e
selection_sort+00b5> mov    eax, DWORD PTR [rbp-0x10]
   0x555555555241 <+++info symbol 0x555555555241
selection_sort+00b8> cdqe   
   0x555555555243 <+++info symbol 0x555555555243
selection_sort+00ba> lea    rdx, [rax*4+0x0]
   0x55555555524b <+++info symbol 0x55555555524b
selection_sort+00c2> mov    rax, QWORD PTR [rbp-0x18]
   0x55555555524f <+++info symbol 0x55555555524f
selection_sort+00c6> add    rdx, rax
   0x555555555252 <+++info symbol 0x555555555252
selection_sort+00c9> mov    eax, DWORD PTR [rbp-0x4]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+19 ────
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000001b00000011, i=0x2, temp=0x2d
 →   19	     A[i] = temp;
     20	   }
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555523e in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555523e → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1b              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x00007fffffffdbf4  →  0x0000001b0000001b
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x000055555555523e  →  <++++info symbol 0x55555555523e
selection_sort+00b5> mov eax, DWORD PTR [rbp-0x10]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000001b
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555237 <+++info symbol 0x555555555237
selection_sort+00ae> add    rdx, rcx
   0x55555555523a <+++info symbol 0x55555555523a
selection_sort+00b1> mov    eax, DWORD PTR [rax]
   0x55555555523c <+++info symbol 0x55555555523c
selection_sort+00b3> mov    DWORD PTR [rdx], eax
 → 0x55555555523e <++++info symbol 0x55555555523e
selection_sort+00b5> mov    eax, DWORD PTR [rbp-0x10]
   0x555555555241 <+++info symbol 0x555555555241
selection_sort+00b8> cdqe   
   0x555555555243 <+++info symbol 0x555555555243
selection_sort+00ba> lea    rdx, [rax*4+0x0]
   0x55555555524b <+++info symbol 0x55555555524b
selection_sort+00c2> mov    rax, QWORD PTR [rbp-0x18]
   0x55555555524f <+++info symbol 0x55555555524f
selection_sort+00c6> add    rdx, rax
   0x555555555252 <+++info symbol 0x555555555252
selection_sort+00c9> mov    eax, DWORD PTR [rbp-0x4]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+19 ────
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000001b00000011, i=0x2, temp=0x2d
 →   19	     A[i] = temp;
     20	   }
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555523e in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555523e → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
11	  for(i = size-1; i > 0; i--) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2d              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x00007fffffffdbf8  →  0x000000590000002d ("-"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x0000555555555257  →  <++++info symbol 0x555555555257
selection_sort+00ce> sub DWORD PTR [rbp-0x10], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)	 ← $rdx
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555524f <+++info symbol 0x55555555524f
selection_sort+00c6> add    rdx, rax
   0x555555555252 <+++info symbol 0x555555555252
selection_sort+00c9> mov    eax, DWORD PTR [rbp-0x4]
   0x555555555255 <+++info symbol 0x555555555255
selection_sort+00cc> mov    DWORD PTR [rdx], eax
 → 0x555555555257 <++++info symbol 0x555555555257
selection_sort+00ce> sub    DWORD PTR [rbp-0x10], 0x1
   0x55555555525b <+++info symbol 0x55555555525b
selection_sort+00d2> cmp    DWORD PTR [rbp-0x10], 0x0
   0x55555555525f <+++info symbol 0x55555555525f
selection_sort+00d6> jg     0x5555555551a6 <selection_sort+29>
   0x555555555265 <+++info symbol 0x555555555265
selection_sort+00dc> nop    
   0x555555555266 <+++info symbol 0x555555555266
selection_sort+00dd> nop    
   0x555555555267 <+++info symbol 0x555555555267
selection_sort+00de> pop    rbp
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+11 ────
      6	 #include <stdio.h>
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
           // size=0x6, i=0x2
 →   11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555257 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555257 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2d              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x00007fffffffdbf8  →  0x000000590000002d ("-"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x0000555555555257  →  <++++info symbol 0x555555555257
selection_sort+00ce> sub DWORD PTR [rbp-0x10], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)	 ← $rdx
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555524f <+++info symbol 0x55555555524f
selection_sort+00c6> add    rdx, rax
   0x555555555252 <+++info symbol 0x555555555252
selection_sort+00c9> mov    eax, DWORD PTR [rbp-0x4]
   0x555555555255 <+++info symbol 0x555555555255
selection_sort+00cc> mov    DWORD PTR [rdx], eax
 → 0x555555555257 <++++info symbol 0x555555555257
selection_sort+00ce> sub    DWORD PTR [rbp-0x10], 0x1
   0x55555555525b <+++info symbol 0x55555555525b
selection_sort+00d2> cmp    DWORD PTR [rbp-0x10], 0x0
   0x55555555525f <+++info symbol 0x55555555525f
selection_sort+00d6> jg     0x5555555551a6 <selection_sort+29>
   0x555555555265 <+++info symbol 0x555555555265
selection_sort+00dc> nop    
   0x555555555266 <+++info symbol 0x555555555266
selection_sort+00dd> nop    
   0x555555555267 <+++info symbol 0x555555555267
selection_sort+00de> pop    rbp
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+11 ────
      6	 #include <stdio.h>
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
           // size=0x6, i=0x2
 →   11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555257 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555257 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
12	    max = 0;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2d              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x00007fffffffdbf8  →  0x000000590000002d ("-"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x00005555555551a6  →  <++++info symbol 0x5555555551a6
selection_sort+001d> mov DWORD PTR [rbp-0x8], 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)	 ← $rdx
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555519b <+++info symbol 0x55555555519b
selection_sort+0012> sub    eax, 0x1
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
 → 0x5555555551a6 <++++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
   0x5555555551b6 <+++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+12 ────
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
             // max=0x1
 →   12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551a6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551a6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2d              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x00007fffffffdbf8  →  0x000000590000002d ("-"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x00005555555551a6  →  <++++info symbol 0x5555555551a6
selection_sort+001d> mov DWORD PTR [rbp-0x8], 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)	 ← $rdx
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555519b <+++info symbol 0x55555555519b
selection_sort+0012> sub    eax, 0x1
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
 → 0x5555555551a6 <++++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
   0x5555555551b6 <+++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+12 ────
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
             // max=0x1
 →   12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551a6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551a6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
13	    for (j = 1; j <= i; j++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2d              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x00007fffffffdbf8  →  0x000000590000002d ("-"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x00005555555551ad  →  <++++info symbol 0x5555555551ad
selection_sort+0024> mov DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)	 ← $rdx
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
 → 0x5555555551ad <++++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
   0x5555555551b6 <+++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x1, j=0x3
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ad in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ad → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2d              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x00007fffffffdbf8  →  0x000000590000002d ("-"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x00005555555551ad  →  <++++info symbol 0x5555555551ad
selection_sort+0024> mov DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)	 ← $rdx
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555519e <+++info symbol 0x55555555519e
selection_sort+0015> mov    DWORD PTR [rbp-0x10], eax
   0x5555555551a1 <+++info symbol 0x5555555551a1
selection_sort+0018> jmp    0x55555555525b <selection_sort+210>
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
 → 0x5555555551ad <++++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
   0x5555555551b6 <+++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x1, j=0x3
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ad in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ad → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
14	      if(A[j] > A[max])
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x00007fffffffdbf8  →  0x000000590000002d ("-"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)	 ← $rdx
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000001b00000011, j=0x1, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x00007fffffffdbf8  →  0x000000590000002d ("-"?)
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x00005555555551b6  →  <++++info symbol 0x5555555551b6
selection_sort+002d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)	 ← $rdx
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551a6 <+++info symbol 0x5555555551a6
selection_sort+001d> mov    DWORD PTR [rbp-0x8], 0x0
   0x5555555551ad <+++info symbol 0x5555555551ad
selection_sort+0024> mov    DWORD PTR [rbp-0xc], 0x1
   0x5555555551b4 <+++info symbol 0x5555555551b4
selection_sort+002b> jmp    0x5555555551f0 <selection_sort+103>
 → 0x5555555551b6 <++++info symbol 0x5555555551b6
selection_sort+002d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551b9 <+++info symbol 0x5555555551b9
selection_sort+0030> cdqe   
   0x5555555551bb <+++info symbol 0x5555555551bb
selection_sort+0032> lea    rdx, [rax*4+0x0]
   0x5555555551c3 <+++info symbol 0x5555555551c3
selection_sort+003a> mov    rax, QWORD PTR [rbp-0x18]
   0x5555555551c7 <+++info symbol 0x5555555551c7
selection_sort+003e> add    rax, rdx
   0x5555555551ca <+++info symbol 0x5555555551ca
selection_sort+0041> mov    edx, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+14 ────
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
               // A=0x00007fffffffdbb8  →  [...]  →  0x0000001b00000011, j=0x1, max=0x0
 →   14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551b6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551b6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
15	        max = j;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x11              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x00005555555551e6  →  <++++info symbol 0x5555555551e6
selection_sort+005d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e0 <+++info symbol 0x5555555551e0
selection_sort+0057> mov    eax, DWORD PTR [rax]
   0x5555555551e2 <+++info symbol 0x5555555551e2
selection_sort+0059> cmp    edx, eax
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
 → 0x5555555551e6 <++++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
   0x5555555551ec <+++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+15 ────
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
                 // j=0x1, max=0x0
 →   15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551e6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551e6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x11              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x00005555555551e6  →  <++++info symbol 0x5555555551e6
selection_sort+005d> mov eax, DWORD PTR [rbp-0xc]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e0 <+++info symbol 0x5555555551e0
selection_sort+0057> mov    eax, DWORD PTR [rax]
   0x5555555551e2 <+++info symbol 0x5555555551e2
selection_sort+0059> cmp    edx, eax
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
 → 0x5555555551e6 <++++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
   0x5555555551ec <+++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+15 ────
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
                 // j=0x1, max=0x0
 →   15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551e6 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551e6 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
13	    for (j = 1; j <= i; j++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x1, j=0x1
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x00005555555551ec  →  <++++info symbol 0x5555555551ec
selection_sort+0063> add DWORD PTR [rbp-0xc], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551e4 <+++info symbol 0x5555555551e4
selection_sort+005b> jle    0x5555555551ec <selection_sort+99>
   0x5555555551e6 <+++info symbol 0x5555555551e6
selection_sort+005d> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551e9 <+++info symbol 0x5555555551e9
selection_sort+0060> mov    DWORD PTR [rbp-0x8], eax
 → 0x5555555551ec <++++info symbol 0x5555555551ec
selection_sort+0063> add    DWORD PTR [rbp-0xc], 0x1
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
   0x5555555551f8 <+++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+13 ────
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
     11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
             // i=0x1, j=0x1
 →   13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551ec in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551ec → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
17	    temp = A[max];
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x00005555555551f8  →  <++++info symbol 0x5555555551f8
selection_sort+006f> mov eax, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
 → 0x5555555551f8 <++++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
   0x5555555551fd <+++info symbol 0x5555555551fd
selection_sort+0074> lea    rdx, [rax*4+0x0]
   0x555555555205 <+++info symbol 0x555555555205
selection_sort+007c> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555209 <+++info symbol 0x555555555209
selection_sort+0080> add    rax, rdx
   0x55555555520c <+++info symbol 0x55555555520c
selection_sort+0083> mov    eax, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+17 ────
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000001b00000011, max=0x1, temp=0x2d
 →   17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
     21	 }
     22	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551f8 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551f8 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x1b              
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x00005555555551f8  →  <++++info symbol 0x5555555551f8
selection_sort+006f> mov eax, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555551f0 <+++info symbol 0x5555555551f0
selection_sort+0067> mov    eax, DWORD PTR [rbp-0xc]
   0x5555555551f3 <+++info symbol 0x5555555551f3
selection_sort+006a> cmp    eax, DWORD PTR [rbp-0x10]
   0x5555555551f6 <+++info symbol 0x5555555551f6
selection_sort+006d> jle    0x5555555551b6 <selection_sort+45>
 → 0x5555555551f8 <++++info symbol 0x5555555551f8
selection_sort+006f> mov    eax, DWORD PTR [rbp-0x8]
   0x5555555551fb <+++info symbol 0x5555555551fb
selection_sort+0072> cdqe   
   0x5555555551fd <+++info symbol 0x5555555551fd
selection_sort+0074> lea    rdx, [rax*4+0x0]
   0x555555555205 <+++info symbol 0x555555555205
selection_sort+007c> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555209 <+++info symbol 0x555555555209
selection_sort+0080> add    rax, rdx
   0x55555555520c <+++info symbol 0x55555555520c
selection_sort+0083> mov    eax, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+17 ────
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000001b00000011, max=0x1, temp=0x2d
 →   17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
     21	 }
     22	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555551f8 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555551f8 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
18	    A[max] = A[i];
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1b              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x0000555555555211  →  <++++info symbol 0x555555555211
selection_sort+0088> mov eax, DWORD PTR [rbp-0x10]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555209 <+++info symbol 0x555555555209
selection_sort+0080> add    rax, rdx
   0x55555555520c <+++info symbol 0x55555555520c
selection_sort+0083> mov    eax, DWORD PTR [rax]
   0x55555555520e <+++info symbol 0x55555555520e
selection_sort+0085> mov    DWORD PTR [rbp-0x4], eax
 → 0x555555555211 <++++info symbol 0x555555555211
selection_sort+0088> mov    eax, DWORD PTR [rbp-0x10]
   0x555555555214 <+++info symbol 0x555555555214
selection_sort+008b> cdqe   
   0x555555555216 <+++info symbol 0x555555555216
selection_sort+008d> lea    rdx, [rax*4+0x0]
   0x55555555521e <+++info symbol 0x55555555521e
selection_sort+0095> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555222 <+++info symbol 0x555555555222
selection_sort+0099> add    rax, rdx
   0x555555555225 <+++info symbol 0x555555555225
selection_sort+009c> mov    edx, DWORD PTR [rbp-0x8]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+18 ────
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000001b00000011, i=0x1, max=0x1
 →   18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555211 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555211 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1b              
$rbx   : 0x0               
$rcx   : 0x0               
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x0000555555555211  →  <++++info symbol 0x555555555211
selection_sort+0088> mov eax, DWORD PTR [rbp-0x10]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555209 <+++info symbol 0x555555555209
selection_sort+0080> add    rax, rdx
   0x55555555520c <+++info symbol 0x55555555520c
selection_sort+0083> mov    eax, DWORD PTR [rax]
   0x55555555520e <+++info symbol 0x55555555520e
selection_sort+0085> mov    DWORD PTR [rbp-0x4], eax
 → 0x555555555211 <++++info symbol 0x555555555211
selection_sort+0088> mov    eax, DWORD PTR [rbp-0x10]
   0x555555555214 <+++info symbol 0x555555555214
selection_sort+008b> cdqe   
   0x555555555216 <+++info symbol 0x555555555216
selection_sort+008d> lea    rdx, [rax*4+0x0]
   0x55555555521e <+++info symbol 0x55555555521e
selection_sort+0095> mov    rax, QWORD PTR [rbp-0x18]
   0x555555555222 <+++info symbol 0x555555555222
selection_sort+0099> add    rax, rdx
   0x555555555225 <+++info symbol 0x555555555225
selection_sort+009c> mov    edx, DWORD PTR [rbp-0x8]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+18 ────
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000001b00000011, i=0x1, max=0x1
 →   18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555211 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555211 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
19	    A[i] = temp;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1b              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x00007fffffffdbf4  →  0x0000002d0000001b
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x000055555555523e  →  <++++info symbol 0x55555555523e
selection_sort+00b5> mov eax, DWORD PTR [rbp-0x10]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555237 <+++info symbol 0x555555555237
selection_sort+00ae> add    rdx, rcx
   0x55555555523a <+++info symbol 0x55555555523a
selection_sort+00b1> mov    eax, DWORD PTR [rax]
   0x55555555523c <+++info symbol 0x55555555523c
selection_sort+00b3> mov    DWORD PTR [rdx], eax
 → 0x55555555523e <++++info symbol 0x55555555523e
selection_sort+00b5> mov    eax, DWORD PTR [rbp-0x10]
   0x555555555241 <+++info symbol 0x555555555241
selection_sort+00b8> cdqe   
   0x555555555243 <+++info symbol 0x555555555243
selection_sort+00ba> lea    rdx, [rax*4+0x0]
   0x55555555524b <+++info symbol 0x55555555524b
selection_sort+00c2> mov    rax, QWORD PTR [rbp-0x18]
   0x55555555524f <+++info symbol 0x55555555524f
selection_sort+00c6> add    rdx, rax
   0x555555555252 <+++info symbol 0x555555555252
selection_sort+00c9> mov    eax, DWORD PTR [rbp-0x4]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+19 ────
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000001b00000011, i=0x1, temp=0x1b
 →   19	     A[i] = temp;
     20	   }
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555523e in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555523e → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1b              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x00007fffffffdbf4  →  0x0000002d0000001b
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x000055555555523e  →  <++++info symbol 0x55555555523e
selection_sort+00b5> mov eax, DWORD PTR [rbp-0x10]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555237 <+++info symbol 0x555555555237
selection_sort+00ae> add    rdx, rcx
   0x55555555523a <+++info symbol 0x55555555523a
selection_sort+00b1> mov    eax, DWORD PTR [rax]
   0x55555555523c <+++info symbol 0x55555555523c
selection_sort+00b3> mov    DWORD PTR [rdx], eax
 → 0x55555555523e <++++info symbol 0x55555555523e
selection_sort+00b5> mov    eax, DWORD PTR [rbp-0x10]
   0x555555555241 <+++info symbol 0x555555555241
selection_sort+00b8> cdqe   
   0x555555555243 <+++info symbol 0x555555555243
selection_sort+00ba> lea    rdx, [rax*4+0x0]
   0x55555555524b <+++info symbol 0x55555555524b
selection_sort+00c2> mov    rax, QWORD PTR [rbp-0x18]
   0x55555555524f <+++info symbol 0x55555555524f
selection_sort+00c6> add    rdx, rax
   0x555555555252 <+++info symbol 0x555555555252
selection_sort+00c9> mov    eax, DWORD PTR [rbp-0x4]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+19 ────
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
             // A=0x00007fffffffdbb8  →  [...]  →  0x0000001b00000011, i=0x1, temp=0x1b
 →   19	     A[i] = temp;
     20	   }
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555523e in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555523e → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
11	  for(i = size-1; i > 0; i--) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1b              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x00007fffffffdbf4  →  0x0000002d0000001b
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x0000555555555257  →  <++++info symbol 0x555555555257
selection_sort+00ce> sub DWORD PTR [rbp-0x10], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555524f <+++info symbol 0x55555555524f
selection_sort+00c6> add    rdx, rax
   0x555555555252 <+++info symbol 0x555555555252
selection_sort+00c9> mov    eax, DWORD PTR [rbp-0x4]
   0x555555555255 <+++info symbol 0x555555555255
selection_sort+00cc> mov    DWORD PTR [rdx], eax
 → 0x555555555257 <++++info symbol 0x555555555257
selection_sort+00ce> sub    DWORD PTR [rbp-0x10], 0x1
   0x55555555525b <+++info symbol 0x55555555525b
selection_sort+00d2> cmp    DWORD PTR [rbp-0x10], 0x0
   0x55555555525f <+++info symbol 0x55555555525f
selection_sort+00d6> jg     0x5555555551a6 <selection_sort+29>
   0x555555555265 <+++info symbol 0x555555555265
selection_sort+00dc> nop    
   0x555555555266 <+++info symbol 0x555555555266
selection_sort+00dd> nop    
   0x555555555267 <+++info symbol 0x555555555267
selection_sort+00de> pop    rbp
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+11 ────
      6	 #include <stdio.h>
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
           // size=0x6, i=0x1
 →   11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555257 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555257 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1b              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x00007fffffffdbf4  →  0x0000002d0000001b
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x0000555555555257  →  <++++info symbol 0x555555555257
selection_sort+00ce> sub DWORD PTR [rbp-0x10], 0x1
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555524f <+++info symbol 0x55555555524f
selection_sort+00c6> add    rdx, rax
   0x555555555252 <+++info symbol 0x555555555252
selection_sort+00c9> mov    eax, DWORD PTR [rbp-0x4]
   0x555555555255 <+++info symbol 0x555555555255
selection_sort+00cc> mov    DWORD PTR [rdx], eax
 → 0x555555555257 <++++info symbol 0x555555555257
selection_sort+00ce> sub    DWORD PTR [rbp-0x10], 0x1
   0x55555555525b <+++info symbol 0x55555555525b
selection_sort+00d2> cmp    DWORD PTR [rbp-0x10], 0x0
   0x55555555525f <+++info symbol 0x55555555525f
selection_sort+00d6> jg     0x5555555551a6 <selection_sort+29>
   0x555555555265 <+++info symbol 0x555555555265
selection_sort+00dc> nop    
   0x555555555266 <+++info symbol 0x555555555266
selection_sort+00dd> nop    
   0x555555555267 <+++info symbol 0x555555555267
selection_sort+00de> pop    rbp
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+11 ────
      6	 #include <stdio.h>
      7	 
      8	 void selection_sort(int *A, int size) {
      9	   int i, j, max, temp;
     10	 
           // size=0x6, i=0x1
 →   11	   for(i = size-1; i > 0; i--) {
     12	     max = 0;
     13	     for (j = 1; j <= i; j++) {
     14	       if(A[j] > A[max])
     15	         max = j;
     16	     }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555257 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555257 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
21	}
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1b              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x00007fffffffdbf4  →  0x0000002d0000001b
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x0000555555555265  →  <++++info symbol 0x555555555265
selection_sort+00dc> nop 
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555257 <+++info symbol 0x555555555257
selection_sort+00ce> sub    DWORD PTR [rbp-0x10], 0x1
   0x55555555525b <+++info symbol 0x55555555525b
selection_sort+00d2> cmp    DWORD PTR [rbp-0x10], 0x0
   0x55555555525f <+++info symbol 0x55555555525f
selection_sort+00d6> jg     0x5555555551a6 <selection_sort+29>
 → 0x555555555265 <++++info symbol 0x555555555265
selection_sort+00dc> nop    
   0x555555555266 <+++info symbol 0x555555555266
selection_sort+00dd> nop    
   0x555555555267 <+++info symbol 0x555555555267
selection_sort+00de> pop    rbp
   0x555555555268 <+++info symbol 0x555555555268
selection_sort+00df> ret    
   0x555555555269 <+++info symbol 0x555555555269
binary_search+0000> endbr64 
   0x55555555526d <+++info symbol 0x55555555526d
binary_search+0004> push   rbp
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+21 ────
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
 →   21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
     25	   // returns 1 if item is found, 0 if not
     26	   int lo = 0;  // left end of possible range for item
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555265 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555265 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1b              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x00007fffffffdbf4  →  0x0000002d0000001b
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x0000555555555265  →  <++++info symbol 0x555555555265
selection_sort+00dc> nop 
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000000000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555257 <+++info symbol 0x555555555257
selection_sort+00ce> sub    DWORD PTR [rbp-0x10], 0x1
   0x55555555525b <+++info symbol 0x55555555525b
selection_sort+00d2> cmp    DWORD PTR [rbp-0x10], 0x0
   0x55555555525f <+++info symbol 0x55555555525f
selection_sort+00d6> jg     0x5555555551a6 <selection_sort+29>
 → 0x555555555265 <++++info symbol 0x555555555265
selection_sort+00dc> nop    
   0x555555555266 <+++info symbol 0x555555555266
selection_sort+00dd> nop    
   0x555555555267 <+++info symbol 0x555555555267
selection_sort+00de> pop    rbp
   0x555555555268 <+++info symbol 0x555555555268
selection_sort+00df> ret    
   0x555555555269 <+++info symbol 0x555555555269
binary_search+0000> endbr64 
   0x55555555526d <+++info symbol 0x55555555526d
binary_search+0004> push   rbp
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+21 ────
     16	     }
     17	     temp = A[max];
     18	     A[max] = A[i];
     19	     A[i] = temp;
     20	   }
 →   21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
     25	   // returns 1 if item is found, 0 if not
     26	   int lo = 0;  // left end of possible range for item
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555265 in selection_sort (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555265 → selection_sort(A=0x7fffffffdbf0, size=6)
[#1] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
main () at selection.c:54
54	  printf("list in order: \n");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1b              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x00007fffffffdbf4  →  0x0000002d0000001b
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000000000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553ad <+++info symbol 0x5555555553ad
main+00ad> mov    esi, 0x6
   0x5555555553b2 <+++info symbol 0x5555555553b2
main+00b2> mov    rdi, rax
   0x5555555553b5 <+++info symbol 0x5555555553b5
main+00b5> call   0x555555555189 <selection_sort>
 → 0x5555555553ba <++++info symbol 0x5555555553ba
main+00ba> lea    rax, [rip+0xc5f]        # 0x555555556020
   0x5555555553c1 <+++info symbol 0x5555555553c1
main+00c1> mov    rdi, rax
   0x5555555553c4 <+++info symbol 0x5555555553c4
main+00c4> call   0x555555555070 <puts@plt>
   0x5555555553c9 <+++info symbol 0x5555555553c9
main+00c9> lea    rax, [rip+0xc44]        # 0x555555556014
   0x5555555553d0 <+++info symbol 0x5555555553d0
main+00d0> mov    rdi, rax
   0x5555555553d3 <+++info symbol 0x5555555553d3
main+00d3> mov    eax, 0x0
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+54 ────
     49	     printf("%4d ", list[i]);
     50	   }
     51	   printf("]\n");
     52	 
     53	   selection_sort(list, 6);
           // list=0x00007fffffffdbf0  →  0x0000001b00000011
 →   54	   printf("list in order: \n");
     55	   printf("\t [ ");
     56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553ba in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1b              
$rbx   : 0x0               
$rcx   : 0x4               
$rdx   : 0x00007fffffffdbf4  →  0x0000002d0000001b
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x6               
$rdi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rip   : 0x00005555555553ba  →  <++++info symbol 0x5555555553ba
main+00ba> lea rax, [rip+0xc5f]        # 0x555555556020
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000000000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011	 ← $rdi
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553ad <+++info symbol 0x5555555553ad
main+00ad> mov    esi, 0x6
   0x5555555553b2 <+++info symbol 0x5555555553b2
main+00b2> mov    rdi, rax
   0x5555555553b5 <+++info symbol 0x5555555553b5
main+00b5> call   0x555555555189 <selection_sort>
 → 0x5555555553ba <++++info symbol 0x5555555553ba
main+00ba> lea    rax, [rip+0xc5f]        # 0x555555556020
   0x5555555553c1 <+++info symbol 0x5555555553c1
main+00c1> mov    rdi, rax
   0x5555555553c4 <+++info symbol 0x5555555553c4
main+00c4> call   0x555555555070 <puts@plt>
   0x5555555553c9 <+++info symbol 0x5555555553c9
main+00c9> lea    rax, [rip+0xc44]        # 0x555555556014
   0x5555555553d0 <+++info symbol 0x5555555553d0
main+00d0> mov    rdi, rax
   0x5555555553d3 <+++info symbol 0x5555555553d3
main+00d3> mov    eax, 0x0
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+54 ────
     49	     printf("%4d ", list[i]);
     50	   }
     51	   printf("]\n");
     52	 
     53	   selection_sort(list, 6);
           // list=0x00007fffffffdbf0  →  0x0000001b00000011
 →   54	   printf("list in order: \n");
     55	   printf("\t [ ");
     56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553ba in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553ba → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+info local
list = {17, 27, 45, 89, 100, 317}
+n
55	  printf("\t [ ");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x10              
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x00005555555553c9  →  <++++info symbol 0x5555555553c9
main+00c9> lea rax, [rip+0xc44]        # 0x555555556014
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000000000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553ba <+++info symbol 0x5555555553ba
main+00ba> lea    rax, [rip+0xc5f]        # 0x555555556020
   0x5555555553c1 <+++info symbol 0x5555555553c1
main+00c1> mov    rdi, rax
   0x5555555553c4 <+++info symbol 0x5555555553c4
main+00c4> call   0x555555555070 <puts@plt>
 → 0x5555555553c9 <++++info symbol 0x5555555553c9
main+00c9> lea    rax, [rip+0xc44]        # 0x555555556014
   0x5555555553d0 <+++info symbol 0x5555555553d0
main+00d0> mov    rdi, rax
   0x5555555553d3 <+++info symbol 0x5555555553d3
main+00d3> mov    eax, 0x0
   0x5555555553d8 <+++info symbol 0x5555555553d8
main+00d8> call   0x555555555090 <printf@plt>
   0x5555555553dd <+++info symbol 0x5555555553dd
main+00dd> mov    DWORD PTR [rbp-0x24], 0x0
   0x5555555553e4 <+++info symbol 0x5555555553e4
main+00e4> jmp    0x555555555409 <main+265>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+55 ────
     50	   }
     51	   printf("]\n");
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
 →   55	   printf("\t [ ");
     56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553c9 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553c9 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x10              
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x00005555555553c9  →  <++++info symbol 0x5555555553c9
main+00c9> lea rax, [rip+0xc44]        # 0x555555556014
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000000000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553ba <+++info symbol 0x5555555553ba
main+00ba> lea    rax, [rip+0xc5f]        # 0x555555556020
   0x5555555553c1 <+++info symbol 0x5555555553c1
main+00c1> mov    rdi, rax
   0x5555555553c4 <+++info symbol 0x5555555553c4
main+00c4> call   0x555555555070 <puts@plt>
 → 0x5555555553c9 <++++info symbol 0x5555555553c9
main+00c9> lea    rax, [rip+0xc44]        # 0x555555556014
   0x5555555553d0 <+++info symbol 0x5555555553d0
main+00d0> mov    rdi, rax
   0x5555555553d3 <+++info symbol 0x5555555553d3
main+00d3> mov    eax, 0x0
   0x5555555553d8 <+++info symbol 0x5555555553d8
main+00d8> call   0x555555555090 <printf@plt>
   0x5555555553dd <+++info symbol 0x5555555553dd
main+00dd> mov    DWORD PTR [rbp-0x24], 0x0
   0x5555555553e4 <+++info symbol 0x5555555553e4
main+00e4> jmp    0x555555555409 <main+265>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+55 ────
     50	   }
     51	   printf("]\n");
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
 →   55	   printf("\t [ ");
     56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553c9 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553c9 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
56	  for(int i = 0; i < 6; i++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x4               
$rbx   : 0x0               
$rcx   : 0x205b2009        
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x205b2009        
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x00005555555553dd  →  <++++info symbol 0x5555555553dd
main+00dd> mov DWORD PTR [rbp-0x24], 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0000555555556014  →  0x64342500205b2009 ("\t [ "?)
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000000000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553d0 <+++info symbol 0x5555555553d0
main+00d0> mov    rdi, rax
   0x5555555553d3 <+++info symbol 0x5555555553d3
main+00d3> mov    eax, 0x0
   0x5555555553d8 <+++info symbol 0x5555555553d8
main+00d8> call   0x555555555090 <printf@plt>
 → 0x5555555553dd <++++info symbol 0x5555555553dd
main+00dd> mov    DWORD PTR [rbp-0x24], 0x0
   0x5555555553e4 <+++info symbol 0x5555555553e4
main+00e4> jmp    0x555555555409 <main+265>
   0x5555555553e6 <+++info symbol 0x5555555553e6
main+00e6> mov    eax, DWORD PTR [rbp-0x24]
   0x5555555553e9 <+++info symbol 0x5555555553e9
main+00e9> cdqe   
   0x5555555553eb <+++info symbol 0x5555555553eb
main+00eb> mov    eax, DWORD PTR [rbp+rax*4-0x20]
   0x5555555553ef <+++info symbol 0x5555555553ef
main+00ef> mov    esi, eax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+56 ────
     51	   printf("]\n");
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
           // i=0x0
 →   56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553dd in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553dd → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x4               
$rbx   : 0x0               
$rcx   : 0x205b2009        
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x205b2009        
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x00005555555553dd  →  <++++info symbol 0x5555555553dd
main+00dd> mov DWORD PTR [rbp-0x24], 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0000555555556014  →  0x64342500205b2009 ("\t [ "?)
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000000000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553d0 <+++info symbol 0x5555555553d0
main+00d0> mov    rdi, rax
   0x5555555553d3 <+++info symbol 0x5555555553d3
main+00d3> mov    eax, 0x0
   0x5555555553d8 <+++info symbol 0x5555555553d8
main+00d8> call   0x555555555090 <printf@plt>
 → 0x5555555553dd <++++info symbol 0x5555555553dd
main+00dd> mov    DWORD PTR [rbp-0x24], 0x0
   0x5555555553e4 <+++info symbol 0x5555555553e4
main+00e4> jmp    0x555555555409 <main+265>
   0x5555555553e6 <+++info symbol 0x5555555553e6
main+00e6> mov    eax, DWORD PTR [rbp-0x24]
   0x5555555553e9 <+++info symbol 0x5555555553e9
main+00e9> cdqe   
   0x5555555553eb <+++info symbol 0x5555555553eb
main+00eb> mov    eax, DWORD PTR [rbp+rax*4-0x20]
   0x5555555553ef <+++info symbol 0x5555555553ef
main+00ef> mov    esi, eax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+56 ────
     51	   printf("]\n");
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
           // i=0x0
 →   56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553dd in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553dd → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
57	    printf("%4d ", list[i]);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x4               
$rbx   : 0x0               
$rcx   : 0x205b2009        
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x205b2009        
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x00005555555553e6  →  <++++info symbol 0x5555555553e6
main+00e6> mov eax, DWORD PTR [rbp-0x24]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0000555555556014  →  0x64342500205b2009 ("\t [ "?)
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000000000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553d8 <+++info symbol 0x5555555553d8
main+00d8> call   0x555555555090 <printf@plt>
   0x5555555553dd <+++info symbol 0x5555555553dd
main+00dd> mov    DWORD PTR [rbp-0x24], 0x0
   0x5555555553e4 <+++info symbol 0x5555555553e4
main+00e4> jmp    0x555555555409 <main+265>
 → 0x5555555553e6 <++++info symbol 0x5555555553e6
main+00e6> mov    eax, DWORD PTR [rbp-0x24]
   0x5555555553e9 <+++info symbol 0x5555555553e9
main+00e9> cdqe   
   0x5555555553eb <+++info symbol 0x5555555553eb
main+00eb> mov    eax, DWORD PTR [rbp+rax*4-0x20]
   0x5555555553ef <+++info symbol 0x5555555553ef
main+00ef> mov    esi, eax
   0x5555555553f1 <+++info symbol 0x5555555553f1
main+00f1> lea    rax, [rip+0xc21]        # 0x555555556019
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+57 ────
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
     56	   for(int i = 0; i < 6; i++) {
             // i=0x0, list=0x00007fffffffdbf0  →  0x0000001b00000011
 →   57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553e6 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553e6 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x4               
$rbx   : 0x0               
$rcx   : 0x205b2009        
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x205b2009        
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x00005555555553e6  →  <++++info symbol 0x5555555553e6
main+00e6> mov eax, DWORD PTR [rbp-0x24]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0000555555556014  →  0x64342500205b2009 ("\t [ "?)
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000000000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553d8 <+++info symbol 0x5555555553d8
main+00d8> call   0x555555555090 <printf@plt>
   0x5555555553dd <+++info symbol 0x5555555553dd
main+00dd> mov    DWORD PTR [rbp-0x24], 0x0
   0x5555555553e4 <+++info symbol 0x5555555553e4
main+00e4> jmp    0x555555555409 <main+265>
 → 0x5555555553e6 <++++info symbol 0x5555555553e6
main+00e6> mov    eax, DWORD PTR [rbp-0x24]
   0x5555555553e9 <+++info symbol 0x5555555553e9
main+00e9> cdqe   
   0x5555555553eb <+++info symbol 0x5555555553eb
main+00eb> mov    eax, DWORD PTR [rbp+rax*4-0x20]
   0x5555555553ef <+++info symbol 0x5555555553ef
main+00ef> mov    esi, eax
   0x5555555553f1 <+++info symbol 0x5555555553f1
main+00f1> lea    rax, [rip+0xc21]        # 0x555555556019
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+57 ────
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
     56	   for(int i = 0; i < 6; i++) {
             // i=0x0, list=0x00007fffffffdbf0  →  0x0000001b00000011
 →   57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553e6 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553e6 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
56	  for(int i = 0; i < 6; i++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x0000555555555405  →  <++++info symbol 0x555555555405
main+0105> add DWORD PTR [rbp-0x24], 0x1
$r8    : 0x0               
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x11              
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000000000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
   0x5555555553fb <+++info symbol 0x5555555553fb
main+00fb> mov    eax, 0x0
   0x555555555400 <+++info symbol 0x555555555400
main+0100> call   0x555555555090 <printf@plt>
 → 0x555555555405 <++++info symbol 0x555555555405
main+0105> add    DWORD PTR [rbp-0x24], 0x1
   0x555555555409 <+++info symbol 0x555555555409
main+0109> cmp    DWORD PTR [rbp-0x24], 0x5
   0x55555555540d <+++info symbol 0x55555555540d
main+010d> jle    0x5555555553e6 <main+230>
   0x55555555540f <+++info symbol 0x55555555540f
main+010f> lea    rax, [rip+0xc08]        # 0x55555555601e
   0x555555555416 <+++info symbol 0x555555555416
main+0116> mov    rdi, rax
   0x555555555419 <+++info symbol 0x555555555419
main+0119> call   0x555555555070 <puts@plt>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+56 ────
     51	   printf("]\n");
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
           // i=0x0
 →   56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555405 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555405 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x0000555555555405  →  <++++info symbol 0x555555555405
main+0105> add DWORD PTR [rbp-0x24], 0x1
$r8    : 0x0               
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x11              
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000000000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
   0x5555555553fb <+++info symbol 0x5555555553fb
main+00fb> mov    eax, 0x0
   0x555555555400 <+++info symbol 0x555555555400
main+0100> call   0x555555555090 <printf@plt>
 → 0x555555555405 <++++info symbol 0x555555555405
main+0105> add    DWORD PTR [rbp-0x24], 0x1
   0x555555555409 <+++info symbol 0x555555555409
main+0109> cmp    DWORD PTR [rbp-0x24], 0x5
   0x55555555540d <+++info symbol 0x55555555540d
main+010d> jle    0x5555555553e6 <main+230>
   0x55555555540f <+++info symbol 0x55555555540f
main+010f> lea    rax, [rip+0xc08]        # 0x55555555601e
   0x555555555416 <+++info symbol 0x555555555416
main+0116> mov    rdi, rax
   0x555555555419 <+++info symbol 0x555555555419
main+0119> call   0x555555555070 <puts@plt>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+56 ────
     51	   printf("]\n");
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
           // i=0x0
 →   56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555405 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555405 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
57	    printf("%4d ", list[i]);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x00005555555553e6  →  <++++info symbol 0x5555555553e6
main+00e6> mov eax, DWORD PTR [rbp-0x24]
$r8    : 0x0               
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x11              
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000100000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553d8 <+++info symbol 0x5555555553d8
main+00d8> call   0x555555555090 <printf@plt>
   0x5555555553dd <+++info symbol 0x5555555553dd
main+00dd> mov    DWORD PTR [rbp-0x24], 0x0
   0x5555555553e4 <+++info symbol 0x5555555553e4
main+00e4> jmp    0x555555555409 <main+265>
 → 0x5555555553e6 <++++info symbol 0x5555555553e6
main+00e6> mov    eax, DWORD PTR [rbp-0x24]
   0x5555555553e9 <+++info symbol 0x5555555553e9
main+00e9> cdqe   
   0x5555555553eb <+++info symbol 0x5555555553eb
main+00eb> mov    eax, DWORD PTR [rbp+rax*4-0x20]
   0x5555555553ef <+++info symbol 0x5555555553ef
main+00ef> mov    esi, eax
   0x5555555553f1 <+++info symbol 0x5555555553f1
main+00f1> lea    rax, [rip+0xc21]        # 0x555555556019
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+57 ────
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
     56	   for(int i = 0; i < 6; i++) {
             // i=0x1, list=0x00007fffffffdbf0  →  0x0000001b00000011
 →   57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553e6 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553e6 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x00005555555553e6  →  <++++info symbol 0x5555555553e6
main+00e6> mov eax, DWORD PTR [rbp-0x24]
$r8    : 0x0               
$r9    : 0x00007fffffffdab6  →  0x411d48286a003731 ("17"?)
$r10   : 0x0               
$r11   : 0x11              
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000100000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553d8 <+++info symbol 0x5555555553d8
main+00d8> call   0x555555555090 <printf@plt>
   0x5555555553dd <+++info symbol 0x5555555553dd
main+00dd> mov    DWORD PTR [rbp-0x24], 0x0
   0x5555555553e4 <+++info symbol 0x5555555553e4
main+00e4> jmp    0x555555555409 <main+265>
 → 0x5555555553e6 <++++info symbol 0x5555555553e6
main+00e6> mov    eax, DWORD PTR [rbp-0x24]
   0x5555555553e9 <+++info symbol 0x5555555553e9
main+00e9> cdqe   
   0x5555555553eb <+++info symbol 0x5555555553eb
main+00eb> mov    eax, DWORD PTR [rbp+rax*4-0x20]
   0x5555555553ef <+++info symbol 0x5555555553ef
main+00ef> mov    esi, eax
   0x5555555553f1 <+++info symbol 0x5555555553f1
main+00f1> lea    rax, [rip+0xc21]        # 0x555555556019
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+57 ────
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
     56	   for(int i = 0; i < 6; i++) {
             // i=0x1, list=0x00007fffffffdbf0  →  0x0000001b00000011
 →   57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553e6 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553e6 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
56	  for(int i = 0; i < 6; i++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x0000555555555405  →  <++++info symbol 0x555555555405
main+0105> add DWORD PTR [rbp-0x24], 0x1
$r8    : 0x0               
$r9    : 0x00007fffffffdab6  →  0x411d48286a003732 ("27"?)
$r10   : 0x0               
$r11   : 0x1b              
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000100000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
   0x5555555553fb <+++info symbol 0x5555555553fb
main+00fb> mov    eax, 0x0
   0x555555555400 <+++info symbol 0x555555555400
main+0100> call   0x555555555090 <printf@plt>
 → 0x555555555405 <++++info symbol 0x555555555405
main+0105> add    DWORD PTR [rbp-0x24], 0x1
   0x555555555409 <+++info symbol 0x555555555409
main+0109> cmp    DWORD PTR [rbp-0x24], 0x5
   0x55555555540d <+++info symbol 0x55555555540d
main+010d> jle    0x5555555553e6 <main+230>
   0x55555555540f <+++info symbol 0x55555555540f
main+010f> lea    rax, [rip+0xc08]        # 0x55555555601e
   0x555555555416 <+++info symbol 0x555555555416
main+0116> mov    rdi, rax
   0x555555555419 <+++info symbol 0x555555555419
main+0119> call   0x555555555070 <puts@plt>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+56 ────
     51	   printf("]\n");
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
           // i=0x1
 →   56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555405 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555405 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x0000555555555405  →  <++++info symbol 0x555555555405
main+0105> add DWORD PTR [rbp-0x24], 0x1
$r8    : 0x0               
$r9    : 0x00007fffffffdab6  →  0x411d48286a003732 ("27"?)
$r10   : 0x0               
$r11   : 0x1b              
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000100000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
   0x5555555553fb <+++info symbol 0x5555555553fb
main+00fb> mov    eax, 0x0
   0x555555555400 <+++info symbol 0x555555555400
main+0100> call   0x555555555090 <printf@plt>
 → 0x555555555405 <++++info symbol 0x555555555405
main+0105> add    DWORD PTR [rbp-0x24], 0x1
   0x555555555409 <+++info symbol 0x555555555409
main+0109> cmp    DWORD PTR [rbp-0x24], 0x5
   0x55555555540d <+++info symbol 0x55555555540d
main+010d> jle    0x5555555553e6 <main+230>
   0x55555555540f <+++info symbol 0x55555555540f
main+010f> lea    rax, [rip+0xc08]        # 0x55555555601e
   0x555555555416 <+++info symbol 0x555555555416
main+0116> mov    rdi, rax
   0x555555555419 <+++info symbol 0x555555555419
main+0119> call   0x555555555070 <puts@plt>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+56 ────
     51	   printf("]\n");
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
           // i=0x1
 →   56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555405 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555405 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
57	    printf("%4d ", list[i]);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x00005555555553e6  →  <++++info symbol 0x5555555553e6
main+00e6> mov eax, DWORD PTR [rbp-0x24]
$r8    : 0x0               
$r9    : 0x00007fffffffdab6  →  0x411d48286a003732 ("27"?)
$r10   : 0x0               
$r11   : 0x1b              
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000200000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553d8 <+++info symbol 0x5555555553d8
main+00d8> call   0x555555555090 <printf@plt>
   0x5555555553dd <+++info symbol 0x5555555553dd
main+00dd> mov    DWORD PTR [rbp-0x24], 0x0
   0x5555555553e4 <+++info symbol 0x5555555553e4
main+00e4> jmp    0x555555555409 <main+265>
 → 0x5555555553e6 <++++info symbol 0x5555555553e6
main+00e6> mov    eax, DWORD PTR [rbp-0x24]
   0x5555555553e9 <+++info symbol 0x5555555553e9
main+00e9> cdqe   
   0x5555555553eb <+++info symbol 0x5555555553eb
main+00eb> mov    eax, DWORD PTR [rbp+rax*4-0x20]
   0x5555555553ef <+++info symbol 0x5555555553ef
main+00ef> mov    esi, eax
   0x5555555553f1 <+++info symbol 0x5555555553f1
main+00f1> lea    rax, [rip+0xc21]        # 0x555555556019
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+57 ────
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
     56	   for(int i = 0; i < 6; i++) {
             // i=0x2, list=0x00007fffffffdbf0  →  0x0000001b00000011
 →   57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553e6 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553e6 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x00005555555553e6  →  <++++info symbol 0x5555555553e6
main+00e6> mov eax, DWORD PTR [rbp-0x24]
$r8    : 0x0               
$r9    : 0x00007fffffffdab6  →  0x411d48286a003732 ("27"?)
$r10   : 0x0               
$r11   : 0x1b              
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000200000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553d8 <+++info symbol 0x5555555553d8
main+00d8> call   0x555555555090 <printf@plt>
   0x5555555553dd <+++info symbol 0x5555555553dd
main+00dd> mov    DWORD PTR [rbp-0x24], 0x0
   0x5555555553e4 <+++info symbol 0x5555555553e4
main+00e4> jmp    0x555555555409 <main+265>
 → 0x5555555553e6 <++++info symbol 0x5555555553e6
main+00e6> mov    eax, DWORD PTR [rbp-0x24]
   0x5555555553e9 <+++info symbol 0x5555555553e9
main+00e9> cdqe   
   0x5555555553eb <+++info symbol 0x5555555553eb
main+00eb> mov    eax, DWORD PTR [rbp+rax*4-0x20]
   0x5555555553ef <+++info symbol 0x5555555553ef
main+00ef> mov    esi, eax
   0x5555555553f1 <+++info symbol 0x5555555553f1
main+00f1> lea    rax, [rip+0xc21]        # 0x555555556019
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+57 ────
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
     56	   for(int i = 0; i < 6; i++) {
             // i=0x2, list=0x00007fffffffdbf0  →  0x0000001b00000011
 →   57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553e6 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553e6 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
56	  for(int i = 0; i < 6; i++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x0000555555555405  →  <++++info symbol 0x555555555405
main+0105> add DWORD PTR [rbp-0x24], 0x1
$r8    : 0x0               
$r9    : 0x00007fffffffdab6  →  0x411d48286a003534 ("45"?)
$r10   : 0x0               
$r11   : 0x2d              
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000200000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
   0x5555555553fb <+++info symbol 0x5555555553fb
main+00fb> mov    eax, 0x0
   0x555555555400 <+++info symbol 0x555555555400
main+0100> call   0x555555555090 <printf@plt>
 → 0x555555555405 <++++info symbol 0x555555555405
main+0105> add    DWORD PTR [rbp-0x24], 0x1
   0x555555555409 <+++info symbol 0x555555555409
main+0109> cmp    DWORD PTR [rbp-0x24], 0x5
   0x55555555540d <+++info symbol 0x55555555540d
main+010d> jle    0x5555555553e6 <main+230>
   0x55555555540f <+++info symbol 0x55555555540f
main+010f> lea    rax, [rip+0xc08]        # 0x55555555601e
   0x555555555416 <+++info symbol 0x555555555416
main+0116> mov    rdi, rax
   0x555555555419 <+++info symbol 0x555555555419
main+0119> call   0x555555555070 <puts@plt>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+56 ────
     51	   printf("]\n");
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
           // i=0x2
 →   56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555405 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555405 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x0000555555555405  →  <++++info symbol 0x555555555405
main+0105> add DWORD PTR [rbp-0x24], 0x1
$r8    : 0x0               
$r9    : 0x00007fffffffdab6  →  0x411d48286a003534 ("45"?)
$r10   : 0x0               
$r11   : 0x2d              
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000200000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
   0x5555555553fb <+++info symbol 0x5555555553fb
main+00fb> mov    eax, 0x0
   0x555555555400 <+++info symbol 0x555555555400
main+0100> call   0x555555555090 <printf@plt>
 → 0x555555555405 <++++info symbol 0x555555555405
main+0105> add    DWORD PTR [rbp-0x24], 0x1
   0x555555555409 <+++info symbol 0x555555555409
main+0109> cmp    DWORD PTR [rbp-0x24], 0x5
   0x55555555540d <+++info symbol 0x55555555540d
main+010d> jle    0x5555555553e6 <main+230>
   0x55555555540f <+++info symbol 0x55555555540f
main+010f> lea    rax, [rip+0xc08]        # 0x55555555601e
   0x555555555416 <+++info symbol 0x555555555416
main+0116> mov    rdi, rax
   0x555555555419 <+++info symbol 0x555555555419
main+0119> call   0x555555555070 <puts@plt>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+56 ────
     51	   printf("]\n");
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
           // i=0x2
 →   56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555405 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555405 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
57	    printf("%4d ", list[i]);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x00005555555553e6  →  <++++info symbol 0x5555555553e6
main+00e6> mov eax, DWORD PTR [rbp-0x24]
$r8    : 0x0               
$r9    : 0x00007fffffffdab6  →  0x411d48286a003534 ("45"?)
$r10   : 0x0               
$r11   : 0x2d              
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000300000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553d8 <+++info symbol 0x5555555553d8
main+00d8> call   0x555555555090 <printf@plt>
   0x5555555553dd <+++info symbol 0x5555555553dd
main+00dd> mov    DWORD PTR [rbp-0x24], 0x0
   0x5555555553e4 <+++info symbol 0x5555555553e4
main+00e4> jmp    0x555555555409 <main+265>
 → 0x5555555553e6 <++++info symbol 0x5555555553e6
main+00e6> mov    eax, DWORD PTR [rbp-0x24]
   0x5555555553e9 <+++info symbol 0x5555555553e9
main+00e9> cdqe   
   0x5555555553eb <+++info symbol 0x5555555553eb
main+00eb> mov    eax, DWORD PTR [rbp+rax*4-0x20]
   0x5555555553ef <+++info symbol 0x5555555553ef
main+00ef> mov    esi, eax
   0x5555555553f1 <+++info symbol 0x5555555553f1
main+00f1> lea    rax, [rip+0xc21]        # 0x555555556019
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+57 ────
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
     56	   for(int i = 0; i < 6; i++) {
             // i=0x3, list=0x00007fffffffdbf0  →  0x0000001b00000011
 →   57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553e6 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553e6 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x00005555555553e6  →  <++++info symbol 0x5555555553e6
main+00e6> mov eax, DWORD PTR [rbp-0x24]
$r8    : 0x0               
$r9    : 0x00007fffffffdab6  →  0x411d48286a003534 ("45"?)
$r10   : 0x0               
$r11   : 0x2d              
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY parity ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000300000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553d8 <+++info symbol 0x5555555553d8
main+00d8> call   0x555555555090 <printf@plt>
   0x5555555553dd <+++info symbol 0x5555555553dd
main+00dd> mov    DWORD PTR [rbp-0x24], 0x0
   0x5555555553e4 <+++info symbol 0x5555555553e4
main+00e4> jmp    0x555555555409 <main+265>
 → 0x5555555553e6 <++++info symbol 0x5555555553e6
main+00e6> mov    eax, DWORD PTR [rbp-0x24]
   0x5555555553e9 <+++info symbol 0x5555555553e9
main+00e9> cdqe   
   0x5555555553eb <+++info symbol 0x5555555553eb
main+00eb> mov    eax, DWORD PTR [rbp+rax*4-0x20]
   0x5555555553ef <+++info symbol 0x5555555553ef
main+00ef> mov    esi, eax
   0x5555555553f1 <+++info symbol 0x5555555553f1
main+00f1> lea    rax, [rip+0xc21]        # 0x555555556019
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+57 ────
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
     56	   for(int i = 0; i < 6; i++) {
             // i=0x3, list=0x00007fffffffdbf0  →  0x0000001b00000011
 →   57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553e6 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553e6 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
56	  for(int i = 0; i < 6; i++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x0000555555555405  →  <++++info symbol 0x555555555405
main+0105> add DWORD PTR [rbp-0x24], 0x1
$r8    : 0x0               
$r9    : 0x00007fffffffdab6  →  0x411d48286a003938 ("89"?)
$r10   : 0x0               
$r11   : 0x59              
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000300000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
   0x5555555553fb <+++info symbol 0x5555555553fb
main+00fb> mov    eax, 0x0
   0x555555555400 <+++info symbol 0x555555555400
main+0100> call   0x555555555090 <printf@plt>
 → 0x555555555405 <++++info symbol 0x555555555405
main+0105> add    DWORD PTR [rbp-0x24], 0x1
   0x555555555409 <+++info symbol 0x555555555409
main+0109> cmp    DWORD PTR [rbp-0x24], 0x5
   0x55555555540d <+++info symbol 0x55555555540d
main+010d> jle    0x5555555553e6 <main+230>
   0x55555555540f <+++info symbol 0x55555555540f
main+010f> lea    rax, [rip+0xc08]        # 0x55555555601e
   0x555555555416 <+++info symbol 0x555555555416
main+0116> mov    rdi, rax
   0x555555555419 <+++info symbol 0x555555555419
main+0119> call   0x555555555070 <puts@plt>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+56 ────
     51	   printf("]\n");
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
           // i=0x3
 →   56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555405 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555405 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x0000555555555405  →  <++++info symbol 0x555555555405
main+0105> add DWORD PTR [rbp-0x24], 0x1
$r8    : 0x0               
$r9    : 0x00007fffffffdab6  →  0x411d48286a003938 ("89"?)
$r10   : 0x0               
$r11   : 0x59              
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000300000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
   0x5555555553fb <+++info symbol 0x5555555553fb
main+00fb> mov    eax, 0x0
   0x555555555400 <+++info symbol 0x555555555400
main+0100> call   0x555555555090 <printf@plt>
 → 0x555555555405 <++++info symbol 0x555555555405
main+0105> add    DWORD PTR [rbp-0x24], 0x1
   0x555555555409 <+++info symbol 0x555555555409
main+0109> cmp    DWORD PTR [rbp-0x24], 0x5
   0x55555555540d <+++info symbol 0x55555555540d
main+010d> jle    0x5555555553e6 <main+230>
   0x55555555540f <+++info symbol 0x55555555540f
main+010f> lea    rax, [rip+0xc08]        # 0x55555555601e
   0x555555555416 <+++info symbol 0x555555555416
main+0116> mov    rdi, rax
   0x555555555419 <+++info symbol 0x555555555419
main+0119> call   0x555555555070 <puts@plt>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+56 ────
     51	   printf("]\n");
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
           // i=0x3
 →   56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555405 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555405 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
57	    printf("%4d ", list[i]);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x00005555555553e6  →  <++++info symbol 0x5555555553e6
main+00e6> mov eax, DWORD PTR [rbp-0x24]
$r8    : 0x0               
$r9    : 0x00007fffffffdab6  →  0x411d48286a003938 ("89"?)
$r10   : 0x0               
$r11   : 0x59              
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000400000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553d8 <+++info symbol 0x5555555553d8
main+00d8> call   0x555555555090 <printf@plt>
   0x5555555553dd <+++info symbol 0x5555555553dd
main+00dd> mov    DWORD PTR [rbp-0x24], 0x0
   0x5555555553e4 <+++info symbol 0x5555555553e4
main+00e4> jmp    0x555555555409 <main+265>
 → 0x5555555553e6 <++++info symbol 0x5555555553e6
main+00e6> mov    eax, DWORD PTR [rbp-0x24]
   0x5555555553e9 <+++info symbol 0x5555555553e9
main+00e9> cdqe   
   0x5555555553eb <+++info symbol 0x5555555553eb
main+00eb> mov    eax, DWORD PTR [rbp+rax*4-0x20]
   0x5555555553ef <+++info symbol 0x5555555553ef
main+00ef> mov    esi, eax
   0x5555555553f1 <+++info symbol 0x5555555553f1
main+00f1> lea    rax, [rip+0xc21]        # 0x555555556019
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+57 ────
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
     56	   for(int i = 0; i < 6; i++) {
             // i=0x4, list=0x00007fffffffdbf0  →  0x0000001b00000011
 →   57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553e6 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553e6 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x00005555555553e6  →  <++++info symbol 0x5555555553e6
main+00e6> mov eax, DWORD PTR [rbp-0x24]
$r8    : 0x0               
$r9    : 0x00007fffffffdab6  →  0x411d48286a003938 ("89"?)
$r10   : 0x0               
$r11   : 0x59              
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY ADJUST SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000400000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553d8 <+++info symbol 0x5555555553d8
main+00d8> call   0x555555555090 <printf@plt>
   0x5555555553dd <+++info symbol 0x5555555553dd
main+00dd> mov    DWORD PTR [rbp-0x24], 0x0
   0x5555555553e4 <+++info symbol 0x5555555553e4
main+00e4> jmp    0x555555555409 <main+265>
 → 0x5555555553e6 <++++info symbol 0x5555555553e6
main+00e6> mov    eax, DWORD PTR [rbp-0x24]
   0x5555555553e9 <+++info symbol 0x5555555553e9
main+00e9> cdqe   
   0x5555555553eb <+++info symbol 0x5555555553eb
main+00eb> mov    eax, DWORD PTR [rbp+rax*4-0x20]
   0x5555555553ef <+++info symbol 0x5555555553ef
main+00ef> mov    esi, eax
   0x5555555553f1 <+++info symbol 0x5555555553f1
main+00f1> lea    rax, [rip+0xc21]        # 0x555555556019
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+57 ────
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
     56	   for(int i = 0; i < 6; i++) {
             // i=0x4, list=0x00007fffffffdbf0  →  0x0000001b00000011
 →   57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553e6 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553e6 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
56	  for(int i = 0; i < 6; i++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x0000555555555405  →  <++++info symbol 0x555555555405
main+0105> add DWORD PTR [rbp-0x24], 0x1
$r8    : 0x0               
$r9    : 0x00007fffffffdab5  →  0x1d48286a00303031 ("100"?)
$r10   : 0x0               
$r11   : 0x64              
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000400000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
   0x5555555553fb <+++info symbol 0x5555555553fb
main+00fb> mov    eax, 0x0
   0x555555555400 <+++info symbol 0x555555555400
main+0100> call   0x555555555090 <printf@plt>
 → 0x555555555405 <++++info symbol 0x555555555405
main+0105> add    DWORD PTR [rbp-0x24], 0x1
   0x555555555409 <+++info symbol 0x555555555409
main+0109> cmp    DWORD PTR [rbp-0x24], 0x5
   0x55555555540d <+++info symbol 0x55555555540d
main+010d> jle    0x5555555553e6 <main+230>
   0x55555555540f <+++info symbol 0x55555555540f
main+010f> lea    rax, [rip+0xc08]        # 0x55555555601e
   0x555555555416 <+++info symbol 0x555555555416
main+0116> mov    rdi, rax
   0x555555555419 <+++info symbol 0x555555555419
main+0119> call   0x555555555070 <puts@plt>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+56 ────
     51	   printf("]\n");
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
           // i=0x4
 →   56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555405 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555405 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x0000555555555405  →  <++++info symbol 0x555555555405
main+0105> add DWORD PTR [rbp-0x24], 0x1
$r8    : 0x0               
$r9    : 0x00007fffffffdab5  →  0x1d48286a00303031 ("100"?)
$r10   : 0x0               
$r11   : 0x64              
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000400000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
   0x5555555553fb <+++info symbol 0x5555555553fb
main+00fb> mov    eax, 0x0
   0x555555555400 <+++info symbol 0x555555555400
main+0100> call   0x555555555090 <printf@plt>
 → 0x555555555405 <++++info symbol 0x555555555405
main+0105> add    DWORD PTR [rbp-0x24], 0x1
   0x555555555409 <+++info symbol 0x555555555409
main+0109> cmp    DWORD PTR [rbp-0x24], 0x5
   0x55555555540d <+++info symbol 0x55555555540d
main+010d> jle    0x5555555553e6 <main+230>
   0x55555555540f <+++info symbol 0x55555555540f
main+010f> lea    rax, [rip+0xc08]        # 0x55555555601e
   0x555555555416 <+++info symbol 0x555555555416
main+0116> mov    rdi, rax
   0x555555555419 <+++info symbol 0x555555555419
main+0119> call   0x555555555070 <puts@plt>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+56 ────
     51	   printf("]\n");
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
           // i=0x4
 →   56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555405 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555405 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
57	    printf("%4d ", list[i]);
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x00005555555553e6  →  <++++info symbol 0x5555555553e6
main+00e6> mov eax, DWORD PTR [rbp-0x24]
$r8    : 0x0               
$r9    : 0x00007fffffffdab5  →  0x1d48286a00303031 ("100"?)
$r10   : 0x0               
$r11   : 0x64              
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000500000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553d8 <+++info symbol 0x5555555553d8
main+00d8> call   0x555555555090 <printf@plt>
   0x5555555553dd <+++info symbol 0x5555555553dd
main+00dd> mov    DWORD PTR [rbp-0x24], 0x0
   0x5555555553e4 <+++info symbol 0x5555555553e4
main+00e4> jmp    0x555555555409 <main+265>
 → 0x5555555553e6 <++++info symbol 0x5555555553e6
main+00e6> mov    eax, DWORD PTR [rbp-0x24]
   0x5555555553e9 <+++info symbol 0x5555555553e9
main+00e9> cdqe   
   0x5555555553eb <+++info symbol 0x5555555553eb
main+00eb> mov    eax, DWORD PTR [rbp+rax*4-0x20]
   0x5555555553ef <+++info symbol 0x5555555553ef
main+00ef> mov    esi, eax
   0x5555555553f1 <+++info symbol 0x5555555553f1
main+00f1> lea    rax, [rip+0xc21]        # 0x555555556019
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+57 ────
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
     56	   for(int i = 0; i < 6; i++) {
             // i=0x5, list=0x00007fffffffdbf0  →  0x0000001b00000011
 →   57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553e6 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553e6 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x00005555555553e6  →  <++++info symbol 0x5555555553e6
main+00e6> mov eax, DWORD PTR [rbp-0x24]
$r8    : 0x0               
$r9    : 0x00007fffffffdab5  →  0x1d48286a00303031 ("100"?)
$r10   : 0x0               
$r11   : 0x64              
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000500000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553d8 <+++info symbol 0x5555555553d8
main+00d8> call   0x555555555090 <printf@plt>
   0x5555555553dd <+++info symbol 0x5555555553dd
main+00dd> mov    DWORD PTR [rbp-0x24], 0x0
   0x5555555553e4 <+++info symbol 0x5555555553e4
main+00e4> jmp    0x555555555409 <main+265>
 → 0x5555555553e6 <++++info symbol 0x5555555553e6
main+00e6> mov    eax, DWORD PTR [rbp-0x24]
   0x5555555553e9 <+++info symbol 0x5555555553e9
main+00e9> cdqe   
   0x5555555553eb <+++info symbol 0x5555555553eb
main+00eb> mov    eax, DWORD PTR [rbp+rax*4-0x20]
   0x5555555553ef <+++info symbol 0x5555555553ef
main+00ef> mov    esi, eax
   0x5555555553f1 <+++info symbol 0x5555555553f1
main+00f1> lea    rax, [rip+0xc21]        # 0x555555556019
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+57 ────
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
     56	   for(int i = 0; i < 6; i++) {
             // i=0x5, list=0x00007fffffffdbf0  →  0x0000001b00000011
 →   57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553e6 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553e6 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
56	  for(int i = 0; i < 6; i++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x0000555555555405  →  <++++info symbol 0x555555555405
main+0105> add DWORD PTR [rbp-0x24], 0x1
$r8    : 0x0               
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x13d             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000500000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
   0x5555555553fb <+++info symbol 0x5555555553fb
main+00fb> mov    eax, 0x0
   0x555555555400 <+++info symbol 0x555555555400
main+0100> call   0x555555555090 <printf@plt>
 → 0x555555555405 <++++info symbol 0x555555555405
main+0105> add    DWORD PTR [rbp-0x24], 0x1
   0x555555555409 <+++info symbol 0x555555555409
main+0109> cmp    DWORD PTR [rbp-0x24], 0x5
   0x55555555540d <+++info symbol 0x55555555540d
main+010d> jle    0x5555555553e6 <main+230>
   0x55555555540f <+++info symbol 0x55555555540f
main+010f> lea    rax, [rip+0xc08]        # 0x55555555601e
   0x555555555416 <+++info symbol 0x555555555416
main+0116> mov    rdi, rax
   0x555555555419 <+++info symbol 0x555555555419
main+0119> call   0x555555555070 <puts@plt>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+56 ────
     51	   printf("]\n");
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
           // i=0x5
 →   56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555405 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555405 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x0000555555555405  →  <++++info symbol 0x555555555405
main+0105> add DWORD PTR [rbp-0x24], 0x1
$r8    : 0x0               
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x13d             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000500000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553f8 <+++info symbol 0x5555555553f8
main+00f8> mov    rdi, rax
   0x5555555553fb <+++info symbol 0x5555555553fb
main+00fb> mov    eax, 0x0
   0x555555555400 <+++info symbol 0x555555555400
main+0100> call   0x555555555090 <printf@plt>
 → 0x555555555405 <++++info symbol 0x555555555405
main+0105> add    DWORD PTR [rbp-0x24], 0x1
   0x555555555409 <+++info symbol 0x555555555409
main+0109> cmp    DWORD PTR [rbp-0x24], 0x5
   0x55555555540d <+++info symbol 0x55555555540d
main+010d> jle    0x5555555553e6 <main+230>
   0x55555555540f <+++info symbol 0x55555555540f
main+010f> lea    rax, [rip+0xc08]        # 0x55555555601e
   0x555555555416 <+++info symbol 0x555555555416
main+0116> mov    rdi, rax
   0x555555555419 <+++info symbol 0x555555555419
main+0119> call   0x555555555070 <puts@plt>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+56 ────
     51	   printf("]\n");
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
           // i=0x5
 →   56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555405 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555405 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
59	  printf("]\n");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x000055555555540f  →  <++++info symbol 0x55555555540f
main+010f> lea rax, [rip+0xc08]        # 0x55555555601e
$r8    : 0x0               
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x13d             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000600000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555405 <+++info symbol 0x555555555405
main+0105> add    DWORD PTR [rbp-0x24], 0x1
   0x555555555409 <+++info symbol 0x555555555409
main+0109> cmp    DWORD PTR [rbp-0x24], 0x5
   0x55555555540d <+++info symbol 0x55555555540d
main+010d> jle    0x5555555553e6 <main+230>
 → 0x55555555540f <++++info symbol 0x55555555540f
main+010f> lea    rax, [rip+0xc08]        # 0x55555555601e
   0x555555555416 <+++info symbol 0x555555555416
main+0116> mov    rdi, rax
   0x555555555419 <+++info symbol 0x555555555419
main+0119> call   0x555555555070 <puts@plt>
   0x55555555541e <+++info symbol 0x55555555541e
main+011e> lea    rax, [rip+0xc0b]        # 0x555555556030
   0x555555555425 <+++info symbol 0x555555555425
main+0125> mov    rdi, rax
   0x555555555428 <+++info symbol 0x555555555428
main+0128> call   0x555555555070 <puts@plt>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+59 ────
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
     56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
 →   59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
     63	     printf("\tYES\n");
     64	   else
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555540f in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555540f → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x5               
$rbx   : 0x0               
$rcx   : 0x1               
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x000055555555601c  →  0x7473696c005d0020 (" "?)
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x000055555555540f  →  <++++info symbol 0x55555555540f
main+010f> lea rax, [rip+0xc08]        # 0x55555555601e
$r8    : 0x0               
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x13d             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000600000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555405 <+++info symbol 0x555555555405
main+0105> add    DWORD PTR [rbp-0x24], 0x1
   0x555555555409 <+++info symbol 0x555555555409
main+0109> cmp    DWORD PTR [rbp-0x24], 0x5
   0x55555555540d <+++info symbol 0x55555555540d
main+010d> jle    0x5555555553e6 <main+230>
 → 0x55555555540f <++++info symbol 0x55555555540f
main+010f> lea    rax, [rip+0xc08]        # 0x55555555601e
   0x555555555416 <+++info symbol 0x555555555416
main+0116> mov    rdi, rax
   0x555555555419 <+++info symbol 0x555555555419
main+0119> call   0x555555555070 <puts@plt>
   0x55555555541e <+++info symbol 0x55555555541e
main+011e> lea    rax, [rip+0xc0b]        # 0x555555556030
   0x555555555425 <+++info symbol 0x555555555425
main+0125> mov    rdi, rax
   0x555555555428 <+++info symbol 0x555555555428
main+0128> call   0x555555555070 <puts@plt>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+59 ────
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
     56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
 →   59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
     63	     printf("\tYES\n");
     64	   else
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555540f in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555540f → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
61	  printf("test if 42 is in the array...\n");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x000055555555541e  →  <++++info symbol 0x55555555541e
main+011e> lea rax, [rip+0xc0b]        # 0x555555556030
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000600000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555540f <+++info symbol 0x55555555540f
main+010f> lea    rax, [rip+0xc08]        # 0x55555555601e
   0x555555555416 <+++info symbol 0x555555555416
main+0116> mov    rdi, rax
   0x555555555419 <+++info symbol 0x555555555419
main+0119> call   0x555555555070 <puts@plt>
 → 0x55555555541e <++++info symbol 0x55555555541e
main+011e> lea    rax, [rip+0xc0b]        # 0x555555556030
   0x555555555425 <+++info symbol 0x555555555425
main+0125> mov    rdi, rax
   0x555555555428 <+++info symbol 0x555555555428
main+0128> call   0x555555555070 <puts@plt>
   0x55555555542d <+++info symbol 0x55555555542d
main+012d> lea    rax, [rbp-0x20]
   0x555555555431 <+++info symbol 0x555555555431
main+0131> mov    edx, 0x6
   0x555555555436 <+++info symbol 0x555555555436
main+0136> mov    rsi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+61 ────
     56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
 →   61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
     63	     printf("\tYES\n");
     64	   else
     65	     printf("\tNO\n");
     66	 }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555541e in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555541e → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x000055555555541e  →  <++++info symbol 0x55555555541e
main+011e> lea rax, [rip+0xc0b]        # 0x555555556030
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000600000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555540f <+++info symbol 0x55555555540f
main+010f> lea    rax, [rip+0xc08]        # 0x55555555601e
   0x555555555416 <+++info symbol 0x555555555416
main+0116> mov    rdi, rax
   0x555555555419 <+++info symbol 0x555555555419
main+0119> call   0x555555555070 <puts@plt>
 → 0x55555555541e <++++info symbol 0x55555555541e
main+011e> lea    rax, [rip+0xc0b]        # 0x555555556030
   0x555555555425 <+++info symbol 0x555555555425
main+0125> mov    rdi, rax
   0x555555555428 <+++info symbol 0x555555555428
main+0128> call   0x555555555070 <puts@plt>
   0x55555555542d <+++info symbol 0x55555555542d
main+012d> lea    rax, [rbp-0x20]
   0x555555555431 <+++info symbol 0x555555555431
main+0131> mov    edx, 0x6
   0x555555555436 <+++info symbol 0x555555555436
main+0136> mov    rsi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+61 ────
     56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
 →   61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
     63	     printf("\tYES\n");
     64	   else
     65	     printf("\tNO\n");
     66	 }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555541e in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555541e → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
62	  if (binary_search( 42, list, 6 ))
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1e              
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x000055555555542d  →  <++++info symbol 0x55555555542d
main+012d> lea rax, [rbp-0x20]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000600000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555541e <+++info symbol 0x55555555541e
main+011e> lea    rax, [rip+0xc0b]        # 0x555555556030
   0x555555555425 <+++info symbol 0x555555555425
main+0125> mov    rdi, rax
   0x555555555428 <+++info symbol 0x555555555428
main+0128> call   0x555555555070 <puts@plt>
 → 0x55555555542d <++++info symbol 0x55555555542d
main+012d> lea    rax, [rbp-0x20]
   0x555555555431 <+++info symbol 0x555555555431
main+0131> mov    edx, 0x6
   0x555555555436 <+++info symbol 0x555555555436
main+0136> mov    rsi, rax
   0x555555555439 <+++info symbol 0x555555555439
main+0139> mov    edi, 0x2a
   0x55555555543e <+++info symbol 0x55555555543e
main+013e> call   0x555555555269 <binary_search>
   0x555555555443 <+++info symbol 0x555555555443
main+0143> test   eax, eax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+62 ────
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
           // list=0x00007fffffffdbf0  →  0x0000001b00000011
 →   62	   if (binary_search( 42, list, 6 ))
     63	     printf("\tYES\n");
     64	   else
     65	     printf("\tNO\n");
     66	 }
     67	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555542d in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555542d → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1e              
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x000055555555542d  →  <++++info symbol 0x55555555542d
main+012d> lea rax, [rbp-0x20]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000600000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555541e <+++info symbol 0x55555555541e
main+011e> lea    rax, [rip+0xc0b]        # 0x555555556030
   0x555555555425 <+++info symbol 0x555555555425
main+0125> mov    rdi, rax
   0x555555555428 <+++info symbol 0x555555555428
main+0128> call   0x555555555070 <puts@plt>
 → 0x55555555542d <++++info symbol 0x55555555542d
main+012d> lea    rax, [rbp-0x20]
   0x555555555431 <+++info symbol 0x555555555431
main+0131> mov    edx, 0x6
   0x555555555436 <+++info symbol 0x555555555436
main+0136> mov    rsi, rax
   0x555555555439 <+++info symbol 0x555555555439
main+0139> mov    edi, 0x2a
   0x55555555543e <+++info symbol 0x55555555543e
main+013e> call   0x555555555269 <binary_search>
   0x555555555443 <+++info symbol 0x555555555443
main+0143> test   eax, eax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+62 ────
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
           // list=0x00007fffffffdbf0  →  0x0000001b00000011
 →   62	   if (binary_search( 42, list, 6 ))
     63	     printf("\tYES\n");
     64	   else
     65	     printf("\tNO\n");
     66	 }
     67	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555542d in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555542d → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
binary_search (item=42, A=0x7fffffffdbf0, size=6) at selection.c:26
26	  int lo = 0;  // left end of possible range for item
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x6               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x000055555555527b  →  <++++info symbol 0x55555555527b
binary_search+0012> mov DWORD PTR [rbp-0xc], 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rax, $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555271 <+++info symbol 0x555555555271
binary_search+0008> mov    DWORD PTR [rbp-0x14], edi
   0x555555555274 <+++info symbol 0x555555555274
binary_search+000b> mov    QWORD PTR [rbp-0x20], rsi
   0x555555555278 <+++info symbol 0x555555555278
binary_search+000f> mov    DWORD PTR [rbp-0x18], edx
 → 0x55555555527b <++++info symbol 0x55555555527b
binary_search+0012> mov    DWORD PTR [rbp-0xc], 0x0
   0x555555555282 <+++info symbol 0x555555555282
binary_search+0019> mov    eax, DWORD PTR [rbp-0x18]
   0x555555555285 <+++info symbol 0x555555555285
binary_search+001c> mov    DWORD PTR [rbp-0x8], eax
   0x555555555288 <+++info symbol 0x555555555288
binary_search+001f> mov    eax, DWORD PTR [rbp-0x8]
   0x55555555528b <+++info symbol 0x55555555528b
binary_search+0022> cmp    eax, DWORD PTR [rbp-0xc]
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+26 ────
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
     25	   // returns 1 if item is found, 0 if not
           // lo=0x7fff
 →   26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555527b in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555527b → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x6               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x000055555555527b  →  <++++info symbol 0x55555555527b
binary_search+0012> mov DWORD PTR [rbp-0xc], 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rax, $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555271 <+++info symbol 0x555555555271
binary_search+0008> mov    DWORD PTR [rbp-0x14], edi
   0x555555555274 <+++info symbol 0x555555555274
binary_search+000b> mov    QWORD PTR [rbp-0x20], rsi
   0x555555555278 <+++info symbol 0x555555555278
binary_search+000f> mov    DWORD PTR [rbp-0x18], edx
 → 0x55555555527b <++++info symbol 0x55555555527b
binary_search+0012> mov    DWORD PTR [rbp-0xc], 0x0
   0x555555555282 <+++info symbol 0x555555555282
binary_search+0019> mov    eax, DWORD PTR [rbp-0x18]
   0x555555555285 <+++info symbol 0x555555555285
binary_search+001c> mov    DWORD PTR [rbp-0x8], eax
   0x555555555288 <+++info symbol 0x555555555288
binary_search+001f> mov    eax, DWORD PTR [rbp-0x8]
   0x55555555528b <+++info symbol 0x55555555528b
binary_search+0022> cmp    eax, DWORD PTR [rbp-0xc]
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+26 ────
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
     25	   // returns 1 if item is found, 0 if not
           // lo=0x7fff
 →   26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555527b in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555527b → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
27	  int hi = size;  // right end of possible range for item
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x6               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555282  →  <++++info symbol 0x555555555282
binary_search+0019> mov eax, DWORD PTR [rbp-0x18]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rax, $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555274 <+++info symbol 0x555555555274
binary_search+000b> mov    QWORD PTR [rbp-0x20], rsi
   0x555555555278 <+++info symbol 0x555555555278
binary_search+000f> mov    DWORD PTR [rbp-0x18], edx
   0x55555555527b <+++info symbol 0x55555555527b
binary_search+0012> mov    DWORD PTR [rbp-0xc], 0x0
 → 0x555555555282 <++++info symbol 0x555555555282
binary_search+0019> mov    eax, DWORD PTR [rbp-0x18]
   0x555555555285 <+++info symbol 0x555555555285
binary_search+001c> mov    DWORD PTR [rbp-0x8], eax
   0x555555555288 <+++info symbol 0x555555555288
binary_search+001f> mov    eax, DWORD PTR [rbp-0x8]
   0x55555555528b <+++info symbol 0x55555555528b
binary_search+0022> cmp    eax, DWORD PTR [rbp-0xc]
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
   0x555555555290 <+++info symbol 0x555555555290
binary_search+0027> mov    eax, 0x0
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+27 ────
     22	 
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
     25	   // returns 1 if item is found, 0 if not
     26	   int lo = 0;  // left end of possible range for item
           // size=0x6, hi=0x55555300
 →   27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555282 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555282 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x6               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555282  →  <++++info symbol 0x555555555282
binary_search+0019> mov eax, DWORD PTR [rbp-0x18]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rax, $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555274 <+++info symbol 0x555555555274
binary_search+000b> mov    QWORD PTR [rbp-0x20], rsi
   0x555555555278 <+++info symbol 0x555555555278
binary_search+000f> mov    DWORD PTR [rbp-0x18], edx
   0x55555555527b <+++info symbol 0x55555555527b
binary_search+0012> mov    DWORD PTR [rbp-0xc], 0x0
 → 0x555555555282 <++++info symbol 0x555555555282
binary_search+0019> mov    eax, DWORD PTR [rbp-0x18]
   0x555555555285 <+++info symbol 0x555555555285
binary_search+001c> mov    DWORD PTR [rbp-0x8], eax
   0x555555555288 <+++info symbol 0x555555555288
binary_search+001f> mov    eax, DWORD PTR [rbp-0x8]
   0x55555555528b <+++info symbol 0x55555555528b
binary_search+0022> cmp    eax, DWORD PTR [rbp-0xc]
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
   0x555555555290 <+++info symbol 0x555555555290
binary_search+0027> mov    eax, 0x0
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+27 ────
     22	 
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
     25	   // returns 1 if item is found, 0 if not
     26	   int lo = 0;  // left end of possible range for item
           // size=0x6, hi=0x55555300
 →   27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555282 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555282 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
29	    if(hi <= lo)
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x6               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x6               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555288  →  <++++info symbol 0x555555555288
binary_search+001f> mov eax, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555527b <+++info symbol 0x55555555527b
binary_search+0012> mov    DWORD PTR [rbp-0xc], 0x0
   0x555555555282 <+++info symbol 0x555555555282
binary_search+0019> mov    eax, DWORD PTR [rbp-0x18]
   0x555555555285 <+++info symbol 0x555555555285
binary_search+001c> mov    DWORD PTR [rbp-0x8], eax
 → 0x555555555288 <++++info symbol 0x555555555288
binary_search+001f> mov    eax, DWORD PTR [rbp-0x8]
   0x55555555528b <+++info symbol 0x55555555528b
binary_search+0022> cmp    eax, DWORD PTR [rbp-0xc]
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
   0x555555555290 <+++info symbol 0x555555555290
binary_search+0027> mov    eax, 0x0
   0x555555555295 <+++info symbol 0x555555555295
binary_search+002c> jmp    0x5555555552fe <binary_search+149>
   0x555555555297 <+++info symbol 0x555555555297
binary_search+002e> mov    edx, DWORD PTR [rbp-0x8]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+29 ────
     24	   // searches for item in A[0], A[1], ..., A[size-1]
     25	   // returns 1 if item is found, 0 if not
     26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
             // lo=0x0, hi=0x6
 →   29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555288 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555288 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x6               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x6               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555288  →  <++++info symbol 0x555555555288
binary_search+001f> mov eax, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555527b <+++info symbol 0x55555555527b
binary_search+0012> mov    DWORD PTR [rbp-0xc], 0x0
   0x555555555282 <+++info symbol 0x555555555282
binary_search+0019> mov    eax, DWORD PTR [rbp-0x18]
   0x555555555285 <+++info symbol 0x555555555285
binary_search+001c> mov    DWORD PTR [rbp-0x8], eax
 → 0x555555555288 <++++info symbol 0x555555555288
binary_search+001f> mov    eax, DWORD PTR [rbp-0x8]
   0x55555555528b <+++info symbol 0x55555555528b
binary_search+0022> cmp    eax, DWORD PTR [rbp-0xc]
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
   0x555555555290 <+++info symbol 0x555555555290
binary_search+0027> mov    eax, 0x0
   0x555555555295 <+++info symbol 0x555555555295
binary_search+002c> jmp    0x5555555552fe <binary_search+149>
   0x555555555297 <+++info symbol 0x555555555297
binary_search+002e> mov    edx, DWORD PTR [rbp-0x8]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+29 ────
     24	   // searches for item in A[0], A[1], ..., A[size-1]
     25	   // returns 1 if item is found, 0 if not
     26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
             // lo=0x0, hi=0x6
 →   29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555288 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555288 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
31	    int mid = (hi + lo) / 2;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x6               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x6               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555297  →  <++++info symbol 0x555555555297
binary_search+002e> mov edx, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
   0x555555555290 <+++info symbol 0x555555555290
binary_search+0027> mov    eax, 0x0
   0x555555555295 <+++info symbol 0x555555555295
binary_search+002c> jmp    0x5555555552fe <binary_search+149>
 → 0x555555555297 <++++info symbol 0x555555555297
binary_search+002e> mov    edx, DWORD PTR [rbp-0x8]
   0x55555555529a <+++info symbol 0x55555555529a
binary_search+0031> mov    eax, DWORD PTR [rbp-0xc]
   0x55555555529d <+++info symbol 0x55555555529d
binary_search+0034> add    eax, edx
   0x55555555529f <+++info symbol 0x55555555529f
binary_search+0036> mov    edx, eax
   0x5555555552a1 <+++info symbol 0x5555555552a1
binary_search+0038> shr    edx, 0x1f
   0x5555555552a4 <+++info symbol 0x5555555552a4
binary_search+003b> add    eax, edx
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+31 ────
     26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
             // mid=0x5555, lo=0x0, hi=0x6
 →   31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555297 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555297 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x6               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x6               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555297  →  <++++info symbol 0x555555555297
binary_search+002e> mov edx, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
   0x555555555290 <+++info symbol 0x555555555290
binary_search+0027> mov    eax, 0x0
   0x555555555295 <+++info symbol 0x555555555295
binary_search+002c> jmp    0x5555555552fe <binary_search+149>
 → 0x555555555297 <++++info symbol 0x555555555297
binary_search+002e> mov    edx, DWORD PTR [rbp-0x8]
   0x55555555529a <+++info symbol 0x55555555529a
binary_search+0031> mov    eax, DWORD PTR [rbp-0xc]
   0x55555555529d <+++info symbol 0x55555555529d
binary_search+0034> add    eax, edx
   0x55555555529f <+++info symbol 0x55555555529f
binary_search+0036> mov    edx, eax
   0x5555555552a1 <+++info symbol 0x5555555552a1
binary_search+0038> shr    edx, 0x1f
   0x5555555552a4 <+++info symbol 0x5555555552a4
binary_search+003b> add    eax, edx
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+31 ────
     26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
             // mid=0x5555, lo=0x0, hi=0x6
 →   31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555297 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555297 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+info local
mid = 21845
lo = 0
hi = 6
+n
32	    if(A[mid] == item)
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x3               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x00005555555552ab  →  <++++info symbol 0x5555555552ab
binary_search+0042> mov eax, DWORD PTR [rbp-0x4]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY ADJUST sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552a4 <+++info symbol 0x5555555552a4
binary_search+003b> add    eax, edx
   0x5555555552a6 <+++info symbol 0x5555555552a6
binary_search+003d> sar    eax, 1
   0x5555555552a8 <+++info symbol 0x5555555552a8
binary_search+003f> mov    DWORD PTR [rbp-0x4], eax
 → 0x5555555552ab <++++info symbol 0x5555555552ab
binary_search+0042> mov    eax, DWORD PTR [rbp-0x4]
   0x5555555552ae <+++info symbol 0x5555555552ae
binary_search+0045> cdqe   
   0x5555555552b0 <+++info symbol 0x5555555552b0
binary_search+0047> lea    rdx, [rax*4+0x0]
   0x5555555552b8 <+++info symbol 0x5555555552b8
binary_search+004f> mov    rax, QWORD PTR [rbp-0x20]
   0x5555555552bc <+++info symbol 0x5555555552bc
binary_search+0053> add    rax, rdx
   0x5555555552bf <+++info symbol 0x5555555552bf
binary_search+0056> mov    eax, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+32 ────
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
             // mid=0x3, item=0x2a, A=0x00007fffffffdbb0  →  [...]  →  0x0000001b00000011
 →   32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
     37	       lo = mid+1;  // move lo to eliminate 1st half of A
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555552ab in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552ab → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x3               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x00005555555552ab  →  <++++info symbol 0x5555555552ab
binary_search+0042> mov eax, DWORD PTR [rbp-0x4]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY ADJUST sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552a4 <+++info symbol 0x5555555552a4
binary_search+003b> add    eax, edx
   0x5555555552a6 <+++info symbol 0x5555555552a6
binary_search+003d> sar    eax, 1
   0x5555555552a8 <+++info symbol 0x5555555552a8
binary_search+003f> mov    DWORD PTR [rbp-0x4], eax
 → 0x5555555552ab <++++info symbol 0x5555555552ab
binary_search+0042> mov    eax, DWORD PTR [rbp-0x4]
   0x5555555552ae <+++info symbol 0x5555555552ae
binary_search+0045> cdqe   
   0x5555555552b0 <+++info symbol 0x5555555552b0
binary_search+0047> lea    rdx, [rax*4+0x0]
   0x5555555552b8 <+++info symbol 0x5555555552b8
binary_search+004f> mov    rax, QWORD PTR [rbp-0x20]
   0x5555555552bc <+++info symbol 0x5555555552bc
binary_search+0053> add    rax, rdx
   0x5555555552bf <+++info symbol 0x5555555552bf
binary_search+0056> mov    eax, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+32 ────
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
             // mid=0x3, item=0x2a, A=0x00007fffffffdbb0  →  [...]  →  0x0000001b00000011
 →   32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
     37	       lo = mid+1;  // move lo to eliminate 1st half of A
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555552ab in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552ab → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
34	    if(item < A[mid])
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x59              
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0xc               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x00005555555552cd  →  <++++info symbol 0x5555555552cd
binary_search+0064> mov eax, DWORD PTR [rbp-0x4]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552c4 <+++info symbol 0x5555555552c4
binary_search+005b> jne    0x5555555552cd <binary_search+100>
   0x5555555552c6 <+++info symbol 0x5555555552c6
binary_search+005d> mov    eax, 0x1
   0x5555555552cb <+++info symbol 0x5555555552cb
binary_search+0062> jmp    0x5555555552fe <binary_search+149>
 → 0x5555555552cd <++++info symbol 0x5555555552cd
binary_search+0064> mov    eax, DWORD PTR [rbp-0x4]
   0x5555555552d0 <+++info symbol 0x5555555552d0
binary_search+0067> cdqe   
   0x5555555552d2 <+++info symbol 0x5555555552d2
binary_search+0069> lea    rdx, [rax*4+0x0]
   0x5555555552da <+++info symbol 0x5555555552da
binary_search+0071> mov    rax, QWORD PTR [rbp-0x20]
   0x5555555552de <+++info symbol 0x5555555552de
binary_search+0075> add    rax, rdx
   0x5555555552e1 <+++info symbol 0x5555555552e1
binary_search+0078> mov    eax, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+34 ────
     29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
             // mid=0x3, item=0x2a, A=0x00007fffffffdbb0  →  [...]  →  0x0000001b00000011
 →   34	     if(item < A[mid])
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
     37	       lo = mid+1;  // move lo to eliminate 1st half of A
     38	   }
     39	   return 0;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555552cd in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552cd → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x59              
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0xc               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x00005555555552cd  →  <++++info symbol 0x5555555552cd
binary_search+0064> mov eax, DWORD PTR [rbp-0x4]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552c4 <+++info symbol 0x5555555552c4
binary_search+005b> jne    0x5555555552cd <binary_search+100>
   0x5555555552c6 <+++info symbol 0x5555555552c6
binary_search+005d> mov    eax, 0x1
   0x5555555552cb <+++info symbol 0x5555555552cb
binary_search+0062> jmp    0x5555555552fe <binary_search+149>
 → 0x5555555552cd <++++info symbol 0x5555555552cd
binary_search+0064> mov    eax, DWORD PTR [rbp-0x4]
   0x5555555552d0 <+++info symbol 0x5555555552d0
binary_search+0067> cdqe   
   0x5555555552d2 <+++info symbol 0x5555555552d2
binary_search+0069> lea    rdx, [rax*4+0x0]
   0x5555555552da <+++info symbol 0x5555555552da
binary_search+0071> mov    rax, QWORD PTR [rbp-0x20]
   0x5555555552de <+++info symbol 0x5555555552de
binary_search+0075> add    rax, rdx
   0x5555555552e1 <+++info symbol 0x5555555552e1
binary_search+0078> mov    eax, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+34 ────
     29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
             // mid=0x3, item=0x2a, A=0x00007fffffffdbb0  →  [...]  →  0x0000001b00000011
 →   34	     if(item < A[mid])
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
     37	       lo = mid+1;  // move lo to eliminate 1st half of A
     38	   }
     39	   return 0;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555552cd in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552cd → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
35	      hi = mid-1;  // move hi to eliminate 2nd half of A
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x59              
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0xc               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x00005555555552e8  →  <++++info symbol 0x5555555552e8
binary_search+007f> mov eax, DWORD PTR [rbp-0x4]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552e1 <+++info symbol 0x5555555552e1
binary_search+0078> mov    eax, DWORD PTR [rax]
   0x5555555552e3 <+++info symbol 0x5555555552e3
binary_search+007a> cmp    DWORD PTR [rbp-0x14], eax
   0x5555555552e6 <+++info symbol 0x5555555552e6
binary_search+007d> jge    0x5555555552f3 <binary_search+138>
 → 0x5555555552e8 <++++info symbol 0x5555555552e8
binary_search+007f> mov    eax, DWORD PTR [rbp-0x4]
   0x5555555552eb <+++info symbol 0x5555555552eb
binary_search+0082> sub    eax, 0x1
   0x5555555552ee <+++info symbol 0x5555555552ee
binary_search+0085> mov    DWORD PTR [rbp-0x8], eax
   0x5555555552f1 <+++info symbol 0x5555555552f1
binary_search+0088> jmp    0x555555555288 <binary_search+31>
   0x5555555552f3 <+++info symbol 0x5555555552f3
binary_search+008a> mov    eax, DWORD PTR [rbp-0x4]
   0x5555555552f6 <+++info symbol 0x5555555552f6
binary_search+008d> add    eax, 0x1
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+35 ────
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
               // mid=0x3, hi=0x6
 →   35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
     37	       lo = mid+1;  // move lo to eliminate 1st half of A
     38	   }
     39	   return 0;
     40	 }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555552e8 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552e8 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x59              
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0xc               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x00005555555552e8  →  <++++info symbol 0x5555555552e8
binary_search+007f> mov eax, DWORD PTR [rbp-0x4]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero CARRY PARITY adjust SIGN trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552e1 <+++info symbol 0x5555555552e1
binary_search+0078> mov    eax, DWORD PTR [rax]
   0x5555555552e3 <+++info symbol 0x5555555552e3
binary_search+007a> cmp    DWORD PTR [rbp-0x14], eax
   0x5555555552e6 <+++info symbol 0x5555555552e6
binary_search+007d> jge    0x5555555552f3 <binary_search+138>
 → 0x5555555552e8 <++++info symbol 0x5555555552e8
binary_search+007f> mov    eax, DWORD PTR [rbp-0x4]
   0x5555555552eb <+++info symbol 0x5555555552eb
binary_search+0082> sub    eax, 0x1
   0x5555555552ee <+++info symbol 0x5555555552ee
binary_search+0085> mov    DWORD PTR [rbp-0x8], eax
   0x5555555552f1 <+++info symbol 0x5555555552f1
binary_search+0088> jmp    0x555555555288 <binary_search+31>
   0x5555555552f3 <+++info symbol 0x5555555552f3
binary_search+008a> mov    eax, DWORD PTR [rbp-0x4]
   0x5555555552f6 <+++info symbol 0x5555555552f6
binary_search+008d> add    eax, 0x1
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+35 ────
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
               // mid=0x3, hi=0x6
 →   35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
     37	       lo = mid+1;  // move lo to eliminate 1st half of A
     38	   }
     39	   return 0;
     40	 }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555552e8 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552e8 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
29	    if(hi <= lo)
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0xc               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555288  →  <++++info symbol 0x555555555288
binary_search+001f> mov eax, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555527b <+++info symbol 0x55555555527b
binary_search+0012> mov    DWORD PTR [rbp-0xc], 0x0
   0x555555555282 <+++info symbol 0x555555555282
binary_search+0019> mov    eax, DWORD PTR [rbp-0x18]
   0x555555555285 <+++info symbol 0x555555555285
binary_search+001c> mov    DWORD PTR [rbp-0x8], eax
 → 0x555555555288 <++++info symbol 0x555555555288
binary_search+001f> mov    eax, DWORD PTR [rbp-0x8]
   0x55555555528b <+++info symbol 0x55555555528b
binary_search+0022> cmp    eax, DWORD PTR [rbp-0xc]
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
   0x555555555290 <+++info symbol 0x555555555290
binary_search+0027> mov    eax, 0x0
   0x555555555295 <+++info symbol 0x555555555295
binary_search+002c> jmp    0x5555555552fe <binary_search+149>
   0x555555555297 <+++info symbol 0x555555555297
binary_search+002e> mov    edx, DWORD PTR [rbp-0x8]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+29 ────
     24	   // searches for item in A[0], A[1], ..., A[size-1]
     25	   // returns 1 if item is found, 0 if not
     26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
             // lo=0x0, hi=0x2
 →   29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555288 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555288 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0xc               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555288  →  <++++info symbol 0x555555555288
binary_search+001f> mov eax, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555527b <+++info symbol 0x55555555527b
binary_search+0012> mov    DWORD PTR [rbp-0xc], 0x0
   0x555555555282 <+++info symbol 0x555555555282
binary_search+0019> mov    eax, DWORD PTR [rbp-0x18]
   0x555555555285 <+++info symbol 0x555555555285
binary_search+001c> mov    DWORD PTR [rbp-0x8], eax
 → 0x555555555288 <++++info symbol 0x555555555288
binary_search+001f> mov    eax, DWORD PTR [rbp-0x8]
   0x55555555528b <+++info symbol 0x55555555528b
binary_search+0022> cmp    eax, DWORD PTR [rbp-0xc]
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
   0x555555555290 <+++info symbol 0x555555555290
binary_search+0027> mov    eax, 0x0
   0x555555555295 <+++info symbol 0x555555555295
binary_search+002c> jmp    0x5555555552fe <binary_search+149>
   0x555555555297 <+++info symbol 0x555555555297
binary_search+002e> mov    edx, DWORD PTR [rbp-0x8]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+29 ────
     24	   // searches for item in A[0], A[1], ..., A[size-1]
     25	   // returns 1 if item is found, 0 if not
     26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
             // lo=0x0, hi=0x2
 →   29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555288 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555288 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
31	    int mid = (hi + lo) / 2;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0xc               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555297  →  <++++info symbol 0x555555555297
binary_search+002e> mov edx, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
   0x555555555290 <+++info symbol 0x555555555290
binary_search+0027> mov    eax, 0x0
   0x555555555295 <+++info symbol 0x555555555295
binary_search+002c> jmp    0x5555555552fe <binary_search+149>
 → 0x555555555297 <++++info symbol 0x555555555297
binary_search+002e> mov    edx, DWORD PTR [rbp-0x8]
   0x55555555529a <+++info symbol 0x55555555529a
binary_search+0031> mov    eax, DWORD PTR [rbp-0xc]
   0x55555555529d <+++info symbol 0x55555555529d
binary_search+0034> add    eax, edx
   0x55555555529f <+++info symbol 0x55555555529f
binary_search+0036> mov    edx, eax
   0x5555555552a1 <+++info symbol 0x5555555552a1
binary_search+0038> shr    edx, 0x1f
   0x5555555552a4 <+++info symbol 0x5555555552a4
binary_search+003b> add    eax, edx
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+31 ────
     26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
             // mid=0x3, lo=0x0, hi=0x2
 →   31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555297 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555297 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0xc               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555297  →  <++++info symbol 0x555555555297
binary_search+002e> mov edx, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
   0x555555555290 <+++info symbol 0x555555555290
binary_search+0027> mov    eax, 0x0
   0x555555555295 <+++info symbol 0x555555555295
binary_search+002c> jmp    0x5555555552fe <binary_search+149>
 → 0x555555555297 <++++info symbol 0x555555555297
binary_search+002e> mov    edx, DWORD PTR [rbp-0x8]
   0x55555555529a <+++info symbol 0x55555555529a
binary_search+0031> mov    eax, DWORD PTR [rbp-0xc]
   0x55555555529d <+++info symbol 0x55555555529d
binary_search+0034> add    eax, edx
   0x55555555529f <+++info symbol 0x55555555529f
binary_search+0036> mov    edx, eax
   0x5555555552a1 <+++info symbol 0x5555555552a1
binary_search+0038> shr    edx, 0x1f
   0x5555555552a4 <+++info symbol 0x5555555552a4
binary_search+003b> add    eax, edx
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+31 ────
     26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
             // mid=0x3, lo=0x0, hi=0x2
 →   31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555297 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555297 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
32	    if(A[mid] == item)
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x00005555555552ab  →  <++++info symbol 0x5555555552ab
binary_search+0042> mov eax, DWORD PTR [rbp-0x4]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity ADJUST sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552a4 <+++info symbol 0x5555555552a4
binary_search+003b> add    eax, edx
   0x5555555552a6 <+++info symbol 0x5555555552a6
binary_search+003d> sar    eax, 1
   0x5555555552a8 <+++info symbol 0x5555555552a8
binary_search+003f> mov    DWORD PTR [rbp-0x4], eax
 → 0x5555555552ab <++++info symbol 0x5555555552ab
binary_search+0042> mov    eax, DWORD PTR [rbp-0x4]
   0x5555555552ae <+++info symbol 0x5555555552ae
binary_search+0045> cdqe   
   0x5555555552b0 <+++info symbol 0x5555555552b0
binary_search+0047> lea    rdx, [rax*4+0x0]
   0x5555555552b8 <+++info symbol 0x5555555552b8
binary_search+004f> mov    rax, QWORD PTR [rbp-0x20]
   0x5555555552bc <+++info symbol 0x5555555552bc
binary_search+0053> add    rax, rdx
   0x5555555552bf <+++info symbol 0x5555555552bf
binary_search+0056> mov    eax, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+32 ────
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
             // mid=0x1, item=0x2a, A=0x00007fffffffdbb0  →  [...]  →  0x0000001b00000011
 →   32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
     37	       lo = mid+1;  // move lo to eliminate 1st half of A
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555552ab in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552ab → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x00005555555552ab  →  <++++info symbol 0x5555555552ab
binary_search+0042> mov eax, DWORD PTR [rbp-0x4]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity ADJUST sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552a4 <+++info symbol 0x5555555552a4
binary_search+003b> add    eax, edx
   0x5555555552a6 <+++info symbol 0x5555555552a6
binary_search+003d> sar    eax, 1
   0x5555555552a8 <+++info symbol 0x5555555552a8
binary_search+003f> mov    DWORD PTR [rbp-0x4], eax
 → 0x5555555552ab <++++info symbol 0x5555555552ab
binary_search+0042> mov    eax, DWORD PTR [rbp-0x4]
   0x5555555552ae <+++info symbol 0x5555555552ae
binary_search+0045> cdqe   
   0x5555555552b0 <+++info symbol 0x5555555552b0
binary_search+0047> lea    rdx, [rax*4+0x0]
   0x5555555552b8 <+++info symbol 0x5555555552b8
binary_search+004f> mov    rax, QWORD PTR [rbp-0x20]
   0x5555555552bc <+++info symbol 0x5555555552bc
binary_search+0053> add    rax, rdx
   0x5555555552bf <+++info symbol 0x5555555552bf
binary_search+0056> mov    eax, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+32 ────
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
             // mid=0x1, item=0x2a, A=0x00007fffffffdbb0  →  [...]  →  0x0000001b00000011
 →   32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
     37	       lo = mid+1;  // move lo to eliminate 1st half of A
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555552ab in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552ab → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
34	    if(item < A[mid])
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1b              
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x00005555555552cd  →  <++++info symbol 0x5555555552cd
binary_search+0064> mov eax, DWORD PTR [rbp-0x4]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY ADJUST sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552c4 <+++info symbol 0x5555555552c4
binary_search+005b> jne    0x5555555552cd <binary_search+100>
   0x5555555552c6 <+++info symbol 0x5555555552c6
binary_search+005d> mov    eax, 0x1
   0x5555555552cb <+++info symbol 0x5555555552cb
binary_search+0062> jmp    0x5555555552fe <binary_search+149>
 → 0x5555555552cd <++++info symbol 0x5555555552cd
binary_search+0064> mov    eax, DWORD PTR [rbp-0x4]
   0x5555555552d0 <+++info symbol 0x5555555552d0
binary_search+0067> cdqe   
   0x5555555552d2 <+++info symbol 0x5555555552d2
binary_search+0069> lea    rdx, [rax*4+0x0]
   0x5555555552da <+++info symbol 0x5555555552da
binary_search+0071> mov    rax, QWORD PTR [rbp-0x20]
   0x5555555552de <+++info symbol 0x5555555552de
binary_search+0075> add    rax, rdx
   0x5555555552e1 <+++info symbol 0x5555555552e1
binary_search+0078> mov    eax, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+34 ────
     29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
             // mid=0x1, item=0x2a, A=0x00007fffffffdbb0  →  [...]  →  0x0000001b00000011
 →   34	     if(item < A[mid])
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
     37	       lo = mid+1;  // move lo to eliminate 1st half of A
     38	   }
     39	   return 0;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555552cd in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552cd → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1b              
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x00005555555552cd  →  <++++info symbol 0x5555555552cd
binary_search+0064> mov eax, DWORD PTR [rbp-0x4]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY ADJUST sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552c4 <+++info symbol 0x5555555552c4
binary_search+005b> jne    0x5555555552cd <binary_search+100>
   0x5555555552c6 <+++info symbol 0x5555555552c6
binary_search+005d> mov    eax, 0x1
   0x5555555552cb <+++info symbol 0x5555555552cb
binary_search+0062> jmp    0x5555555552fe <binary_search+149>
 → 0x5555555552cd <++++info symbol 0x5555555552cd
binary_search+0064> mov    eax, DWORD PTR [rbp-0x4]
   0x5555555552d0 <+++info symbol 0x5555555552d0
binary_search+0067> cdqe   
   0x5555555552d2 <+++info symbol 0x5555555552d2
binary_search+0069> lea    rdx, [rax*4+0x0]
   0x5555555552da <+++info symbol 0x5555555552da
binary_search+0071> mov    rax, QWORD PTR [rbp-0x20]
   0x5555555552de <+++info symbol 0x5555555552de
binary_search+0075> add    rax, rdx
   0x5555555552e1 <+++info symbol 0x5555555552e1
binary_search+0078> mov    eax, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+34 ────
     29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
             // mid=0x1, item=0x2a, A=0x00007fffffffdbb0  →  [...]  →  0x0000001b00000011
 →   34	     if(item < A[mid])
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
     37	       lo = mid+1;  // move lo to eliminate 1st half of A
     38	   }
     39	   return 0;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555552cd in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552cd → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
37	      lo = mid+1;  // move lo to eliminate 1st half of A
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1b              
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x00005555555552f3  →  <++++info symbol 0x5555555552f3
binary_search+008a> mov eax, DWORD PTR [rbp-0x4]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY ADJUST sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552eb <+++info symbol 0x5555555552eb
binary_search+0082> sub    eax, 0x1
   0x5555555552ee <+++info symbol 0x5555555552ee
binary_search+0085> mov    DWORD PTR [rbp-0x8], eax
   0x5555555552f1 <+++info symbol 0x5555555552f1
binary_search+0088> jmp    0x555555555288 <binary_search+31>
 → 0x5555555552f3 <++++info symbol 0x5555555552f3
binary_search+008a> mov    eax, DWORD PTR [rbp-0x4]
   0x5555555552f6 <+++info symbol 0x5555555552f6
binary_search+008d> add    eax, 0x1
   0x5555555552f9 <+++info symbol 0x5555555552f9
binary_search+0090> mov    DWORD PTR [rbp-0xc], eax
   0x5555555552fc <+++info symbol 0x5555555552fc
binary_search+0093> jmp    0x555555555288 <binary_search+31>
   0x5555555552fe <+++info symbol 0x5555555552fe
binary_search+0095> pop    rbp
   0x5555555552ff <+++info symbol 0x5555555552ff
binary_search+0096> ret    
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+37 ────
     32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
               // mid=0x1, lo=0x0
 →   37	       lo = mid+1;  // move lo to eliminate 1st half of A
     38	   }
     39	   return 0;
     40	 }
     41	 
     42	 int main() {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555552f3 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552f3 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1b              
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x00005555555552f3  →  <++++info symbol 0x5555555552f3
binary_search+008a> mov eax, DWORD PTR [rbp-0x4]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY ADJUST sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552eb <+++info symbol 0x5555555552eb
binary_search+0082> sub    eax, 0x1
   0x5555555552ee <+++info symbol 0x5555555552ee
binary_search+0085> mov    DWORD PTR [rbp-0x8], eax
   0x5555555552f1 <+++info symbol 0x5555555552f1
binary_search+0088> jmp    0x555555555288 <binary_search+31>
 → 0x5555555552f3 <++++info symbol 0x5555555552f3
binary_search+008a> mov    eax, DWORD PTR [rbp-0x4]
   0x5555555552f6 <+++info symbol 0x5555555552f6
binary_search+008d> add    eax, 0x1
   0x5555555552f9 <+++info symbol 0x5555555552f9
binary_search+0090> mov    DWORD PTR [rbp-0xc], eax
   0x5555555552fc <+++info symbol 0x5555555552fc
binary_search+0093> jmp    0x555555555288 <binary_search+31>
   0x5555555552fe <+++info symbol 0x5555555552fe
binary_search+0095> pop    rbp
   0x5555555552ff <+++info symbol 0x5555555552ff
binary_search+0096> ret    
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+37 ────
     32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
               // mid=0x1, lo=0x0
 →   37	       lo = mid+1;  // move lo to eliminate 1st half of A
     38	   }
     39	   return 0;
     40	 }
     41	 
     42	 int main() {
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555552f3 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552f3 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
28	  while (1) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x00005555555552fc  →  <++++info symbol 0x5555555552fc
binary_search+0093> jmp 0x555555555288 <binary_search+31>
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552f3 <+++info symbol 0x5555555552f3
binary_search+008a> mov    eax, DWORD PTR [rbp-0x4]
   0x5555555552f6 <+++info symbol 0x5555555552f6
binary_search+008d> add    eax, 0x1
   0x5555555552f9 <+++info symbol 0x5555555552f9
binary_search+0090> mov    DWORD PTR [rbp-0xc], eax
 → 0x5555555552fc <++++info symbol 0x5555555552fc
binary_search+0093> jmp    0x555555555288 <binary_search+31>
   0x5555555552fe <+++info symbol 0x5555555552fe
binary_search+0095> pop    rbp
   0x5555555552ff <+++info symbol 0x5555555552ff
binary_search+0096> ret    
   0x555555555300 <++++info symbol 0x555555555300
main+0000> endbr64 
   0x555555555304 <+++info symbol 0x555555555304
main+0004> push   rbp
   0x555555555305 <+++info symbol 0x555555555305
main+0005> mov    rbp, rsp
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+28 ────
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
     25	   // returns 1 if item is found, 0 if not
     26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
 →   28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555552fc in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552fc → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x00005555555552fc  →  <++++info symbol 0x5555555552fc
binary_search+0093> jmp 0x555555555288 <binary_search+31>
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552f3 <+++info symbol 0x5555555552f3
binary_search+008a> mov    eax, DWORD PTR [rbp-0x4]
   0x5555555552f6 <+++info symbol 0x5555555552f6
binary_search+008d> add    eax, 0x1
   0x5555555552f9 <+++info symbol 0x5555555552f9
binary_search+0090> mov    DWORD PTR [rbp-0xc], eax
 → 0x5555555552fc <++++info symbol 0x5555555552fc
binary_search+0093> jmp    0x555555555288 <binary_search+31>
   0x5555555552fe <+++info symbol 0x5555555552fe
binary_search+0095> pop    rbp
   0x5555555552ff <+++info symbol 0x5555555552ff
binary_search+0096> ret    
   0x555555555300 <++++info symbol 0x555555555300
main+0000> endbr64 
   0x555555555304 <+++info symbol 0x555555555304
main+0004> push   rbp
   0x555555555305 <+++info symbol 0x555555555305
main+0005> mov    rbp, rsp
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+28 ────
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
     25	   // returns 1 if item is found, 0 if not
     26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
 →   28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555552fc in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552fc → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
29	    if(hi <= lo)
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555288  →  <++++info symbol 0x555555555288
binary_search+001f> mov eax, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555527b <+++info symbol 0x55555555527b
binary_search+0012> mov    DWORD PTR [rbp-0xc], 0x0
   0x555555555282 <+++info symbol 0x555555555282
binary_search+0019> mov    eax, DWORD PTR [rbp-0x18]
   0x555555555285 <+++info symbol 0x555555555285
binary_search+001c> mov    DWORD PTR [rbp-0x8], eax
 → 0x555555555288 <++++info symbol 0x555555555288
binary_search+001f> mov    eax, DWORD PTR [rbp-0x8]
   0x55555555528b <+++info symbol 0x55555555528b
binary_search+0022> cmp    eax, DWORD PTR [rbp-0xc]
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
   0x555555555290 <+++info symbol 0x555555555290
binary_search+0027> mov    eax, 0x0
   0x555555555295 <+++info symbol 0x555555555295
binary_search+002c> jmp    0x5555555552fe <binary_search+149>
   0x555555555297 <+++info symbol 0x555555555297
binary_search+002e> mov    edx, DWORD PTR [rbp-0x8]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+29 ────
     24	   // searches for item in A[0], A[1], ..., A[size-1]
     25	   // returns 1 if item is found, 0 if not
     26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
             // lo=0x2, hi=0x2
 →   29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555288 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555288 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555288  →  <++++info symbol 0x555555555288
binary_search+001f> mov eax, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555527b <+++info symbol 0x55555555527b
binary_search+0012> mov    DWORD PTR [rbp-0xc], 0x0
   0x555555555282 <+++info symbol 0x555555555282
binary_search+0019> mov    eax, DWORD PTR [rbp-0x18]
   0x555555555285 <+++info symbol 0x555555555285
binary_search+001c> mov    DWORD PTR [rbp-0x8], eax
 → 0x555555555288 <++++info symbol 0x555555555288
binary_search+001f> mov    eax, DWORD PTR [rbp-0x8]
   0x55555555528b <+++info symbol 0x55555555528b
binary_search+0022> cmp    eax, DWORD PTR [rbp-0xc]
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
   0x555555555290 <+++info symbol 0x555555555290
binary_search+0027> mov    eax, 0x0
   0x555555555295 <+++info symbol 0x555555555295
binary_search+002c> jmp    0x5555555552fe <binary_search+149>
   0x555555555297 <+++info symbol 0x555555555297
binary_search+002e> mov    edx, DWORD PTR [rbp-0x8]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+29 ────
     24	   // searches for item in A[0], A[1], ..., A[size-1]
     25	   // returns 1 if item is found, 0 if not
     26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
             // lo=0x2, hi=0x2
 →   29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555288 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555288 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
30	      return 0;  // not found
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555290  →  <++++info symbol 0x555555555290
binary_search+0027> mov eax, 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555288 <+++info symbol 0x555555555288
binary_search+001f> mov    eax, DWORD PTR [rbp-0x8]
   0x55555555528b <+++info symbol 0x55555555528b
binary_search+0022> cmp    eax, DWORD PTR [rbp-0xc]
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
 → 0x555555555290 <++++info symbol 0x555555555290
binary_search+0027> mov    eax, 0x0
   0x555555555295 <+++info symbol 0x555555555295
binary_search+002c> jmp    0x5555555552fe <binary_search+149>
   0x555555555297 <+++info symbol 0x555555555297
binary_search+002e> mov    edx, DWORD PTR [rbp-0x8]
   0x55555555529a <+++info symbol 0x55555555529a
binary_search+0031> mov    eax, DWORD PTR [rbp-0xc]
   0x55555555529d <+++info symbol 0x55555555529d
binary_search+0034> add    eax, edx
   0x55555555529f <+++info symbol 0x55555555529f
binary_search+0036> mov    edx, eax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+30 ────
     25	   // returns 1 if item is found, 0 if not
     26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
 →   30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555290 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555290 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555290  →  <++++info symbol 0x555555555290
binary_search+0027> mov eax, 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555288 <+++info symbol 0x555555555288
binary_search+001f> mov    eax, DWORD PTR [rbp-0x8]
   0x55555555528b <+++info symbol 0x55555555528b
binary_search+0022> cmp    eax, DWORD PTR [rbp-0xc]
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
 → 0x555555555290 <++++info symbol 0x555555555290
binary_search+0027> mov    eax, 0x0
   0x555555555295 <+++info symbol 0x555555555295
binary_search+002c> jmp    0x5555555552fe <binary_search+149>
   0x555555555297 <+++info symbol 0x555555555297
binary_search+002e> mov    edx, DWORD PTR [rbp-0x8]
   0x55555555529a <+++info symbol 0x55555555529a
binary_search+0031> mov    eax, DWORD PTR [rbp-0xc]
   0x55555555529d <+++info symbol 0x55555555529d
binary_search+0034> add    eax, edx
   0x55555555529f <+++info symbol 0x55555555529f
binary_search+0036> mov    edx, eax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+30 ────
     25	   // returns 1 if item is found, 0 if not
     26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
 →   30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555290 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555290 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
40	}
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x00005555555552fe  →  <++++info symbol 0x5555555552fe
binary_search+0095> pop rbp
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552f6 <+++info symbol 0x5555555552f6
binary_search+008d> add    eax, 0x1
   0x5555555552f9 <+++info symbol 0x5555555552f9
binary_search+0090> mov    DWORD PTR [rbp-0xc], eax
   0x5555555552fc <+++info symbol 0x5555555552fc
binary_search+0093> jmp    0x555555555288 <binary_search+31>
 → 0x5555555552fe <++++info symbol 0x5555555552fe
binary_search+0095> pop    rbp
   0x5555555552ff <+++info symbol 0x5555555552ff
binary_search+0096> ret    
   0x555555555300 <++++info symbol 0x555555555300
main+0000> endbr64 
   0x555555555304 <+++info symbol 0x555555555304
main+0004> push   rbp
   0x555555555305 <+++info symbol 0x555555555305
main+0005> mov    rbp, rsp
   0x555555555308 <+++info symbol 0x555555555308
main+0008> sub    rsp, 0x30
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+40 ────
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
     37	       lo = mid+1;  // move lo to eliminate 1st half of A
     38	   }
     39	   return 0;
 →   40	 }
     41	 
     42	 int main() {
     43	   int list[] = { 100, 45, 89, 27, 317, 17 };
     44	 
     45	   // print the sorted list
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555552fe in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552fe → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x00005555555552fe  →  <++++info symbol 0x5555555552fe
binary_search+0095> pop rbp
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x6fa8411d48286a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552f6 <+++info symbol 0x5555555552f6
binary_search+008d> add    eax, 0x1
   0x5555555552f9 <+++info symbol 0x5555555552f9
binary_search+0090> mov    DWORD PTR [rbp-0xc], eax
   0x5555555552fc <+++info symbol 0x5555555552fc
binary_search+0093> jmp    0x555555555288 <binary_search+31>
 → 0x5555555552fe <++++info symbol 0x5555555552fe
binary_search+0095> pop    rbp
   0x5555555552ff <+++info symbol 0x5555555552ff
binary_search+0096> ret    
   0x555555555300 <++++info symbol 0x555555555300
main+0000> endbr64 
   0x555555555304 <+++info symbol 0x555555555304
main+0004> push   rbp
   0x555555555305 <+++info symbol 0x555555555305
main+0005> mov    rbp, rsp
   0x555555555308 <+++info symbol 0x555555555308
main+0008> sub    rsp, 0x30
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+40 ────
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
     37	       lo = mid+1;  // move lo to eliminate 1st half of A
     38	   }
     39	   return 0;
 →   40	 }
     41	 
     42	 int main() {
     43	   int list[] = { 100, 45, 89, 27, 317, 17 };
     44	 
     45	   // print the sorted list
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555552fe in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552fe → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
main () at selection.c:62
62	  if (binary_search( 42, list, 6 ))
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000600000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555436 <+++info symbol 0x555555555436
main+0136> mov    rsi, rax
   0x555555555439 <+++info symbol 0x555555555439
main+0139> mov    edi, 0x2a
   0x55555555543e <+++info symbol 0x55555555543e
main+013e> call   0x555555555269 <binary_search>
 → 0x555555555443 <++++info symbol 0x555555555443
main+0143> test   eax, eax
   0x555555555445 <+++info symbol 0x555555555445
main+0145> je     0x555555555458 <main+344>
   0x555555555447 <+++info symbol 0x555555555447
main+0147> lea    rax, [rip+0xc00]        # 0x55555555604e
   0x55555555544e <+++info symbol 0x55555555544e
main+014e> mov    rdi, rax
   0x555555555451 <+++info symbol 0x555555555451
main+0151> call   0x555555555070 <puts@plt>
   0x555555555456 <+++info symbol 0x555555555456
main+0156> jmp    0x555555555467 <main+359>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+62 ────
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
           // list=0x00007fffffffdbf0  →  0x0000001b00000011
 →   62	   if (binary_search( 42, list, 6 ))
     63	     printf("\tYES\n");
     64	   else
     65	     printf("\tNO\n");
     66	 }
     67	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555443 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000600000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555436 <+++info symbol 0x555555555436
main+0136> mov    rsi, rax
   0x555555555439 <+++info symbol 0x555555555439
main+0139> mov    edi, 0x2a
   0x55555555543e <+++info symbol 0x55555555543e
main+013e> call   0x555555555269 <binary_search>
 → 0x555555555443 <++++info symbol 0x555555555443
main+0143> test   eax, eax
   0x555555555445 <+++info symbol 0x555555555445
main+0145> je     0x555555555458 <main+344>
   0x555555555447 <+++info symbol 0x555555555447
main+0147> lea    rax, [rip+0xc00]        # 0x55555555604e
   0x55555555544e <+++info symbol 0x55555555544e
main+014e> mov    rdi, rax
   0x555555555451 <+++info symbol 0x555555555451
main+0151> call   0x555555555070 <puts@plt>
   0x555555555456 <+++info symbol 0x555555555456
main+0156> jmp    0x555555555467 <main+359>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+62 ────
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
           // list=0x00007fffffffdbf0  →  0x0000001b00000011
 →   62	   if (binary_search( 42, list, 6 ))
     63	     printf("\tYES\n");
     64	   else
     65	     printf("\tNO\n");
     66	 }
     67	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555443 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
65	    printf("\tNO\n");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555458  →  <++++info symbol 0x555555555458
main+0158> lea rax, [rip+0xbf4]        # 0x555555556053
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000600000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555544e <+++info symbol 0x55555555544e
main+014e> mov    rdi, rax
   0x555555555451 <+++info symbol 0x555555555451
main+0151> call   0x555555555070 <puts@plt>
   0x555555555456 <+++info symbol 0x555555555456
main+0156> jmp    0x555555555467 <main+359>
 → 0x555555555458 <++++info symbol 0x555555555458
main+0158> lea    rax, [rip+0xbf4]        # 0x555555556053
   0x55555555545f <+++info symbol 0x55555555545f
main+015f> mov    rdi, rax
   0x555555555462 <+++info symbol 0x555555555462
main+0162> call   0x555555555070 <puts@plt>
   0x555555555467 <+++info symbol 0x555555555467
main+0167> mov    eax, 0x0
   0x55555555546c <+++info symbol 0x55555555546c
main+016c> mov    rdx, QWORD PTR [rbp-0x8]
   0x555555555470 <+++info symbol 0x555555555470
main+0170> sub    rdx, QWORD PTR fs:0x28
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+65 ────
     60	 
     61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
     63	     printf("\tYES\n");
     64	   else
 →   65	     printf("\tNO\n");
     66	 }
     67	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555458 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555458 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x4               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555458  →  <++++info symbol 0x555555555458
main+0158> lea rax, [rip+0xbf4]        # 0x555555556053
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000600000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555544e <+++info symbol 0x55555555544e
main+014e> mov    rdi, rax
   0x555555555451 <+++info symbol 0x555555555451
main+0151> call   0x555555555070 <puts@plt>
   0x555555555456 <+++info symbol 0x555555555456
main+0156> jmp    0x555555555467 <main+359>
 → 0x555555555458 <++++info symbol 0x555555555458
main+0158> lea    rax, [rip+0xbf4]        # 0x555555556053
   0x55555555545f <+++info symbol 0x55555555545f
main+015f> mov    rdi, rax
   0x555555555462 <+++info symbol 0x555555555462
main+0162> call   0x555555555070 <puts@plt>
   0x555555555467 <+++info symbol 0x555555555467
main+0167> mov    eax, 0x0
   0x55555555546c <+++info symbol 0x55555555546c
main+016c> mov    rdx, QWORD PTR [rbp-0x8]
   0x555555555470 <+++info symbol 0x555555555470
main+0170> sub    rdx, QWORD PTR fs:0x28
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+65 ────
     60	 
     61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
     63	     printf("\tYES\n");
     64	   else
 →   65	     printf("\tNO\n");
     66	 }
     67	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555458 in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555458 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
66	}
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x000055555555546c  →  <++++info symbol 0x55555555546c
main+016c> mov rdx, QWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000600000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555545f <+++info symbol 0x55555555545f
main+015f> mov    rdi, rax
   0x555555555462 <+++info symbol 0x555555555462
main+0162> call   0x555555555070 <puts@plt>
   0x555555555467 <+++info symbol 0x555555555467
main+0167> mov    eax, 0x0
 → 0x55555555546c <++++info symbol 0x55555555546c
main+016c> mov    rdx, QWORD PTR [rbp-0x8]
   0x555555555470 <+++info symbol 0x555555555470
main+0170> sub    rdx, QWORD PTR fs:0x28
   0x555555555479 <+++info symbol 0x555555555479
main+0179> je     0x555555555480 <main+384>
   0x55555555547b <+++info symbol 0x55555555547b
main+017b> call   0x555555555080 <__stack_chk_fail@plt>
   0x555555555480 <+++info symbol 0x555555555480
main+0180> leave  
   0x555555555481 <+++info symbol 0x555555555481
main+0181> ret    
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+66 ────
     61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
     63	     printf("\tYES\n");
     64	   else
     65	     printf("\tNO\n");
 →   66	 }
     67	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555546c in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555546c → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x000055555555546c  →  <++++info symbol 0x55555555546c
main+016c> mov rdx, QWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000600000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x6fa8411d48286a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555545f <+++info symbol 0x55555555545f
main+015f> mov    rdi, rax
   0x555555555462 <+++info symbol 0x555555555462
main+0162> call   0x555555555070 <puts@plt>
   0x555555555467 <+++info symbol 0x555555555467
main+0167> mov    eax, 0x0
 → 0x55555555546c <++++info symbol 0x55555555546c
main+016c> mov    rdx, QWORD PTR [rbp-0x8]
   0x555555555470 <+++info symbol 0x555555555470
main+0170> sub    rdx, QWORD PTR fs:0x28
   0x555555555479 <+++info symbol 0x555555555479
main+0179> je     0x555555555480 <main+384>
   0x55555555547b <+++info symbol 0x55555555547b
main+017b> call   0x555555555080 <__stack_chk_fail@plt>
   0x555555555480 <+++info symbol 0x555555555480
main+0180> leave  
   0x555555555481 <+++info symbol 0x555555555481
main+0181> ret    
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+66 ────
     61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
     63	     printf("\tYES\n");
     64	   else
     65	     printf("\tNO\n");
 →   66	 }
     67	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555546c in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555546c → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
__libc_start_call_main (main=main@entry=0x555555555300 <main>, argc=argc@entry=1, argv=argv@entry=0x7fffffffdd28) at ../sysdeps/nptl/libc_start_call_main.h:74
74	../sysdeps/nptl/libc_start_call_main.h: No such file or directory.
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc20
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x0               
$rsp   : 0x00007fffffffdc20  →  0x0000000000000000
$rbp   : 0x1               
$rsi   : 0x1               
$rdi   : 0x0               
$rip   : 0x00007ffff7c29d92  →  <++++info symbol 0x7ffff7c29d92
__libc_start_call_main+0082> call 0x7ffff7c455f0 <__GI_exit>
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc20│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdc28│+0x0008: 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
0x00007fffffffdc30│+0x0010: 0x00000001ffffdd10
0x00007fffffffdc38│+0x0018: 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
0x00007fffffffdc40│+0x0020: 0x0000000000000000
0x00007fffffffdc48│+0x0028: 0x2a4b1320952992cf
0x00007fffffffdc50│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
0x00007fffffffdc58│+0x0038: 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7c29d89 <+++info symbol 0x7ffff7c29d89
__libc_start_call_main+0079> mov    rax, QWORD PTR [rsp+0x8]
   0x7ffff7c29d8e <+++info symbol 0x7ffff7c29d8e
__libc_start_call_main+007e> call   rax
   0x7ffff7c29d90 <+++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov    edi, eax
 → 0x7ffff7c29d92 <++++info symbol 0x7ffff7c29d92
__libc_start_call_main+0082> call   0x7ffff7c455f0 <__GI_exit>
   ↳  0x7ffff7c455f0 <+++info symbol 0x7ffff7c455f0
exit+0000> endbr64 
      0x7ffff7c455f4 <+++info symbol 0x7ffff7c455f4
exit+0004> push   rax
      0x7ffff7c455f5 <+++info symbol 0x7ffff7c455f5
exit+0005> pop    rax
      0x7ffff7c455f6 <+++info symbol 0x7ffff7c455f6
exit+0006> mov    ecx, 0x1
      0x7ffff7c455fb <+++info symbol 0x7ffff7c455fb
exit+000b> mov    edx, 0x1
      0x7ffff7c45600 <+++info symbol 0x7ffff7c45600
exit+0010> lea    rsi, [rip+0x1d5231]        # 0x7ffff7e1a838 <__exit_funcs>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
__GI_exit (
   int var_0 = 0x0000000000000000
)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x7ffff7c29d92 in __libc_start_call_main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7c29d92 → __libc_start_call_main(main=0x555555555300 <main>, argc=1, argv=0x7fffffffdd28)
[#1] 0x7ffff7c29e40 → __libc_start_main_impl(main=0x555555555300 <main>, argc=1, argv=0x7fffffffdd28, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdd18)
[#2] 0x5555555550c5 → _start()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdc20
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x0               
$rsp   : 0x00007fffffffdc20  →  0x0000000000000000
$rbp   : 0x1               
$rsi   : 0x1               
$rdi   : 0x0               
$rip   : 0x00007ffff7c29d92  →  <++++info symbol 0x7ffff7c29d92
__libc_start_call_main+0082> call 0x7ffff7c455f0 <__GI_exit>
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x1d48286a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdc20│+0x0000: 0x0000000000000000	 ← $rsp
0x00007fffffffdc28│+0x0008: 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
0x00007fffffffdc30│+0x0010: 0x00000001ffffdd10
0x00007fffffffdc38│+0x0018: 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
0x00007fffffffdc40│+0x0020: 0x0000000000000000
0x00007fffffffdc48│+0x0028: 0x2a4b1320952992cf
0x00007fffffffdc50│+0x0030: 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
0x00007fffffffdc58│+0x0038: 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x7ffff7c29d89 <+++info symbol 0x7ffff7c29d89
__libc_start_call_main+0079> mov    rax, QWORD PTR [rsp+0x8]
   0x7ffff7c29d8e <+++info symbol 0x7ffff7c29d8e
__libc_start_call_main+007e> call   rax
   0x7ffff7c29d90 <+++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov    edi, eax
 → 0x7ffff7c29d92 <++++info symbol 0x7ffff7c29d92
__libc_start_call_main+0082> call   0x7ffff7c455f0 <__GI_exit>
   ↳  0x7ffff7c455f0 <+++info symbol 0x7ffff7c455f0
exit+0000> endbr64 
      0x7ffff7c455f4 <+++info symbol 0x7ffff7c455f4
exit+0004> push   rax
      0x7ffff7c455f5 <+++info symbol 0x7ffff7c455f5
exit+0005> pop    rax
      0x7ffff7c455f6 <+++info symbol 0x7ffff7c455f6
exit+0006> mov    ecx, 0x1
      0x7ffff7c455fb <+++info symbol 0x7ffff7c455fb
exit+000b> mov    edx, 0x1
      0x7ffff7c45600 <+++info symbol 0x7ffff7c45600
exit+0010> lea    rsi, [rip+0x1d5231]        # 0x7ffff7e1a838 <__exit_funcs>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── arguments ────
__GI_exit (
   int var_0 = 0x0000000000000000
)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x7ffff7c29d92 in __libc_start_call_main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x7ffff7c29d92 → __libc_start_call_main(main=0x555555555300 <main>, argc=1, argv=0x7fffffffdd28)
[#1] 0x7ffff7c29e40 → __libc_start_main_impl(main=0x555555555300 <main>, argc=1, argv=0x7fffffffdd28, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdd18)
[#2] 0x5555555550c5 → _start()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+b main
Note: breakpoint 1 also set at pc 0x55555555530c.
Breakpoint 2 at 0x55555555530c: file selection.c, line 42.
+info b
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000055555555530c in main at selection.c:42
	breakpoint already hit 1 time
2       breakpoint     keep y   0x000055555555530c in main at selection.c:42
+delete 2
+run
Starting program: /home/liub5/CSSE332-lab-liub5/debug/selection.bin 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main () at selection.c:42
42	int main() {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffa  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$rdi   : 0x1               
$rip   : 0x000055555555530c  →  <++++info symbol 0x55555555530c
main+000c> mov rax, QWORD PTR fs:0x28
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x00000000178bfbff
0x00007fffffffdbf0│+0x0010: 0x00007fffffffdfb9  →  0x000034365f363878 ("x86_64"?)
0x00007fffffffdbf8│+0x0018: 0x0000000000000064 ("d"?)
0x00007fffffffdc00│+0x0020: 0x0000000000001000
0x00007fffffffdc08│+0x0028: 0x00005555555550a0  →  <++++info symbol 0x5555555550a0
_start+0000> endbr64 
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555304 <+++info symbol 0x555555555304
main+0004> push   rbp
   0x555555555305 <+++info symbol 0x555555555305
main+0005> mov    rbp, rsp
   0x555555555308 <+++info symbol 0x555555555308
main+0008> sub    rsp, 0x30
 → 0x55555555530c <++++info symbol 0x55555555530c
main+000c> mov    rax, QWORD PTR fs:0x28
   0x555555555315 <+++info symbol 0x555555555315
main+0015> mov    QWORD PTR [rbp-0x8], rax
   0x555555555319 <+++info symbol 0x555555555319
main+0019> xor    eax, eax
   0x55555555531b <+++info symbol 0x55555555531b
main+001b> mov    DWORD PTR [rbp-0x20], 0x64
   0x555555555322 <+++info symbol 0x555555555322
main+0022> mov    DWORD PTR [rbp-0x1c], 0x2d
   0x555555555329 <+++info symbol 0x555555555329
main+0029> mov    DWORD PTR [rbp-0x18], 0x59
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+42 ────
     37	       lo = mid+1;  // move lo to eliminate 1st half of A
     38	   }
     39	   return 0;
     40	 }
     41	 
 →   42	 int main() {
     43	   int list[] = { 100, 45, 89, 27, 317, 17 };
     44	 
     45	   // print the sorted list
     46	   printf("unsorted list: \n");
     47	   printf("\t [ ");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555530c in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555530c → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$rbx   : 0x0               
$rcx   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$rdx   : 0x00007fffffffdd38  →  0x00007fffffffdffa  →  "SHELL=/bin/bash"
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$rdi   : 0x1               
$rip   : 0x000055555555530c  →  <++++info symbol 0x55555555530c
main+000c> mov rax, QWORD PTR fs:0x28
$r8    : 0x00007ffff7e1bf10  →  0x0000000000000004
$r9    : 0x00007ffff7fc9040  →  <++++info symbol 0x7ffff7fc9040
_dl_fini+0000> endbr64 
$r10   : 0x00007ffff7fc3908  →  0x000d00120000000e
$r11   : 0x00007ffff7fde660  →  <++++info symbol 0x7ffff7fde660
_dl_audit_preinit+0000> endbr64 
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x00000000178bfbff
0x00007fffffffdbf0│+0x0010: 0x00007fffffffdfb9  →  0x000034365f363878 ("x86_64"?)
0x00007fffffffdbf8│+0x0018: 0x0000000000000064 ("d"?)
0x00007fffffffdc00│+0x0020: 0x0000000000001000
0x00007fffffffdc08│+0x0028: 0x00005555555550a0  →  <++++info symbol 0x5555555550a0
_start+0000> endbr64 
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555304 <+++info symbol 0x555555555304
main+0004> push   rbp
   0x555555555305 <+++info symbol 0x555555555305
main+0005> mov    rbp, rsp
   0x555555555308 <+++info symbol 0x555555555308
main+0008> sub    rsp, 0x30
 → 0x55555555530c <++++info symbol 0x55555555530c
main+000c> mov    rax, QWORD PTR fs:0x28
   0x555555555315 <+++info symbol 0x555555555315
main+0015> mov    QWORD PTR [rbp-0x8], rax
   0x555555555319 <+++info symbol 0x555555555319
main+0019> xor    eax, eax
   0x55555555531b <+++info symbol 0x55555555531b
main+001b> mov    DWORD PTR [rbp-0x20], 0x64
   0x555555555322 <+++info symbol 0x555555555322
main+0022> mov    DWORD PTR [rbp-0x1c], 0x2d
   0x555555555329 <+++info symbol 0x555555555329
main+0029> mov    DWORD PTR [rbp-0x18], 0x59
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+42 ────
     37	       lo = mid+1;  // move lo to eliminate 1st half of A
     38	   }
     39	   return 0;
     40	 }
     41	 
 →   42	 int main() {
     43	   int list[] = { 100, 45, 89, 27, 317, 17 };
     44	 
     45	   // print the sorted list
     46	   printf("unsorted list: \n");
     47	   printf("\t [ ");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555530c in main (), reason: BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555530c → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+until 56
main () at selection.c:56
56	  for(int i = 0; i < 6; i++) {
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x4               
$rbx   : 0x0               
$rcx   : 0x205b2009        
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x205b2009        
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x00005555555553dd  →  <++++info symbol 0x5555555553dd
main+00dd> mov DWORD PTR [rbp-0x24], 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x7116c6da9a003731 ("17"?)
$r10   : 0x0000555555556014  →  0x64342500205b2009 ("\t [ "?)
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000000000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x15a87116c6da9a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553d0 <+++info symbol 0x5555555553d0
main+00d0> mov    rdi, rax
   0x5555555553d3 <+++info symbol 0x5555555553d3
main+00d3> mov    eax, 0x0
   0x5555555553d8 <+++info symbol 0x5555555553d8
main+00d8> call   0x555555555090 <printf@plt>
 → 0x5555555553dd <++++info symbol 0x5555555553dd
main+00dd> mov    DWORD PTR [rbp-0x24], 0x0
   0x5555555553e4 <+++info symbol 0x5555555553e4
main+00e4> jmp    0x555555555409 <main+265>
   0x5555555553e6 <+++info symbol 0x5555555553e6
main+00e6> mov    eax, DWORD PTR [rbp-0x24]
   0x5555555553e9 <+++info symbol 0x5555555553e9
main+00e9> cdqe   
   0x5555555553eb <+++info symbol 0x5555555553eb
main+00eb> mov    eax, DWORD PTR [rbp+rax*4-0x20]
   0x5555555553ef <+++info symbol 0x5555555553ef
main+00ef> mov    esi, eax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+56 ────
     51	   printf("]\n");
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
           // i=0x0
 →   56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553dd in main (), reason: TEMPORARY BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553dd → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x4               
$rbx   : 0x0               
$rcx   : 0x205b2009        
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x205b2009        
$rdi   : 0x00007fffffffd680  →  0x00007ffff7c62050  →  <++++info symbol 0x7ffff7c62050
funlockfile+0000> endbr64 
$rip   : 0x00005555555553dd  →  <++++info symbol 0x5555555553dd
main+00dd> mov DWORD PTR [rbp-0x24], 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab6  →  0x7116c6da9a003731 ("17"?)
$r10   : 0x0000555555556014  →  0x64342500205b2009 ("\t [ "?)
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000000000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x15a87116c6da9a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555553d0 <+++info symbol 0x5555555553d0
main+00d0> mov    rdi, rax
   0x5555555553d3 <+++info symbol 0x5555555553d3
main+00d3> mov    eax, 0x0
   0x5555555553d8 <+++info symbol 0x5555555553d8
main+00d8> call   0x555555555090 <printf@plt>
 → 0x5555555553dd <++++info symbol 0x5555555553dd
main+00dd> mov    DWORD PTR [rbp-0x24], 0x0
   0x5555555553e4 <+++info symbol 0x5555555553e4
main+00e4> jmp    0x555555555409 <main+265>
   0x5555555553e6 <+++info symbol 0x5555555553e6
main+00e6> mov    eax, DWORD PTR [rbp-0x24]
   0x5555555553e9 <+++info symbol 0x5555555553e9
main+00e9> cdqe   
   0x5555555553eb <+++info symbol 0x5555555553eb
main+00eb> mov    eax, DWORD PTR [rbp+rax*4-0x20]
   0x5555555553ef <+++info symbol 0x5555555553ef
main+00ef> mov    esi, eax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+56 ────
     51	   printf("]\n");
     52	 
     53	   selection_sort(list, 6);
     54	   printf("list in order: \n");
     55	   printf("\t [ ");
           // i=0x0
 →   56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555553dd in main (), reason: TEMPORARY BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555553dd → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+until 61
main () at selection.c:61
61	  printf("test if 42 is in the array...\n");
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x000055555555541e  →  <++++info symbol 0x55555555541e
main+011e> lea rax, [rip+0xc0b]        # 0x555555556030
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x16c6da9a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000600000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x15a87116c6da9a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555540f <+++info symbol 0x55555555540f
main+010f> lea    rax, [rip+0xc08]        # 0x55555555601e
   0x555555555416 <+++info symbol 0x555555555416
main+0116> mov    rdi, rax
   0x555555555419 <+++info symbol 0x555555555419
main+0119> call   0x555555555070 <puts@plt>
 → 0x55555555541e <++++info symbol 0x55555555541e
main+011e> lea    rax, [rip+0xc0b]        # 0x555555556030
   0x555555555425 <+++info symbol 0x555555555425
main+0125> mov    rdi, rax
   0x555555555428 <+++info symbol 0x555555555428
main+0128> call   0x555555555070 <puts@plt>
   0x55555555542d <+++info symbol 0x55555555542d
main+012d> lea    rax, [rbp-0x20]
   0x555555555431 <+++info symbol 0x555555555431
main+0131> mov    edx, 0x6
   0x555555555436 <+++info symbol 0x555555555436
main+0136> mov    rsi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+61 ────
     56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
 →   61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
     63	     printf("\tYES\n");
     64	   else
     65	     printf("\tNO\n");
     66	 }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555541e in main (), reason: TEMPORARY BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555541e → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x2               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x000055555555541e  →  <++++info symbol 0x55555555541e
main+011e> lea rax, [rip+0xc0b]        # 0x555555556030
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x16c6da9a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000600000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x15a87116c6da9a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555540f <+++info symbol 0x55555555540f
main+010f> lea    rax, [rip+0xc08]        # 0x55555555601e
   0x555555555416 <+++info symbol 0x555555555416
main+0116> mov    rdi, rax
   0x555555555419 <+++info symbol 0x555555555419
main+0119> call   0x555555555070 <puts@plt>
 → 0x55555555541e <++++info symbol 0x55555555541e
main+011e> lea    rax, [rip+0xc0b]        # 0x555555556030
   0x555555555425 <+++info symbol 0x555555555425
main+0125> mov    rdi, rax
   0x555555555428 <+++info symbol 0x555555555428
main+0128> call   0x555555555070 <puts@plt>
   0x55555555542d <+++info symbol 0x55555555542d
main+012d> lea    rax, [rbp-0x20]
   0x555555555431 <+++info symbol 0x555555555431
main+0131> mov    edx, 0x6
   0x555555555436 <+++info symbol 0x555555555436
main+0136> mov    rsi, rax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+61 ────
     56	   for(int i = 0; i < 6; i++) {
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
 →   61	   printf("test if 42 is in the array...\n");
     62	   if (binary_search( 42, list, 6 ))
     63	     printf("\tYES\n");
     64	   else
     65	     printf("\tNO\n");
     66	 }
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555541e in main (), reason: TEMPORARY BREAKPOINT
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555541e → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
62	  if (binary_search( 42, list, 6 ))
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1e              
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x000055555555542d  →  <++++info symbol 0x55555555542d
main+012d> lea rax, [rbp-0x20]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x16c6da9a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000600000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x15a87116c6da9a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555541e <+++info symbol 0x55555555541e
main+011e> lea    rax, [rip+0xc0b]        # 0x555555556030
   0x555555555425 <+++info symbol 0x555555555425
main+0125> mov    rdi, rax
   0x555555555428 <+++info symbol 0x555555555428
main+0128> call   0x555555555070 <puts@plt>
 → 0x55555555542d <++++info symbol 0x55555555542d
main+012d> lea    rax, [rbp-0x20]
   0x555555555431 <+++info symbol 0x555555555431
main+0131> mov    edx, 0x6
   0x555555555436 <+++info symbol 0x555555555436
main+0136> mov    rsi, rax
   0x555555555439 <+++info symbol 0x555555555439
main+0139> mov    edi, 0x2a
   0x55555555543e <+++info symbol 0x55555555543e
main+013e> call   0x555555555269 <binary_search>
   0x555555555443 <+++info symbol 0x555555555443
main+0143> test   eax, eax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+62 ────
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
           // list=0x00007fffffffdbf0  →  0x0000001b00000011
 →   62	   if (binary_search( 42, list, 6 ))
     63	     printf("\tYES\n");
     64	   else
     65	     printf("\tNO\n");
     66	 }
     67	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555542d in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555542d → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbe0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x1e              
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x1               
$rsp   : 0x00007fffffffdbe0  →  0x0000000000000002
$rbp   : 0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x1               
$rdi   : 0x00007ffff7e1ca70  →  0x0000000000000000
$rip   : 0x000055555555542d  →  <++++info symbol 0x55555555542d
main+012d> lea rax, [rbp-0x20]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x16c6da9a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbe0│+0x0000: 0x0000000000000002	 ← $rsp
0x00007fffffffdbe8│+0x0008: 0x0000000600000006
0x00007fffffffdbf0│+0x0010: 0x0000001b00000011
0x00007fffffffdbf8│+0x0018: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0020: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0028: 0x15a87116c6da9a00
0x00007fffffffdc10│+0x0030: 0x0000000000000001	 ← $rbp
0x00007fffffffdc18│+0x0038: 0x00007ffff7c29d90  →  <++++info symbol 0x7ffff7c29d90
__libc_start_call_main+0080> mov edi, eax
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555541e <+++info symbol 0x55555555541e
main+011e> lea    rax, [rip+0xc0b]        # 0x555555556030
   0x555555555425 <+++info symbol 0x555555555425
main+0125> mov    rdi, rax
   0x555555555428 <+++info symbol 0x555555555428
main+0128> call   0x555555555070 <puts@plt>
 → 0x55555555542d <++++info symbol 0x55555555542d
main+012d> lea    rax, [rbp-0x20]
   0x555555555431 <+++info symbol 0x555555555431
main+0131> mov    edx, 0x6
   0x555555555436 <+++info symbol 0x555555555436
main+0136> mov    rsi, rax
   0x555555555439 <+++info symbol 0x555555555439
main+0139> mov    edi, 0x2a
   0x55555555543e <+++info symbol 0x55555555543e
main+013e> call   0x555555555269 <binary_search>
   0x555555555443 <+++info symbol 0x555555555443
main+0143> test   eax, eax
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+62 ────
     57	     printf("%4d ", list[i]);
     58	   }
     59	   printf("]\n");
     60	 
     61	   printf("test if 42 is in the array...\n");
           // list=0x00007fffffffdbf0  →  0x0000001b00000011
 →   62	   if (binary_search( 42, list, 6 ))
     63	     printf("\tYES\n");
     64	   else
     65	     printf("\tNO\n");
     66	 }
     67	 
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555542d in main (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555542d → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+s
binary_search (item=42, A=0x7fffffffdbf0, size=6) at selection.c:26
26	  int lo = 0;  // left end of possible range for item
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x6               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x000055555555527b  →  <++++info symbol 0x55555555527b
binary_search+0012> mov DWORD PTR [rbp-0xc], 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x16c6da9a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rax, $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x15a87116c6da9a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555271 <+++info symbol 0x555555555271
binary_search+0008> mov    DWORD PTR [rbp-0x14], edi
   0x555555555274 <+++info symbol 0x555555555274
binary_search+000b> mov    QWORD PTR [rbp-0x20], rsi
   0x555555555278 <+++info symbol 0x555555555278
binary_search+000f> mov    DWORD PTR [rbp-0x18], edx
 → 0x55555555527b <++++info symbol 0x55555555527b
binary_search+0012> mov    DWORD PTR [rbp-0xc], 0x0
   0x555555555282 <+++info symbol 0x555555555282
binary_search+0019> mov    eax, DWORD PTR [rbp-0x18]
   0x555555555285 <+++info symbol 0x555555555285
binary_search+001c> mov    DWORD PTR [rbp-0x8], eax
   0x555555555288 <+++info symbol 0x555555555288
binary_search+001f> mov    eax, DWORD PTR [rbp-0x8]
   0x55555555528b <+++info symbol 0x55555555528b
binary_search+0022> cmp    eax, DWORD PTR [rbp-0xc]
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+26 ────
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
     25	   // returns 1 if item is found, 0 if not
           // lo=0x7fff
 →   26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555527b in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555527b → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x6               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x000055555555527b  →  <++++info symbol 0x55555555527b
binary_search+0012> mov DWORD PTR [rbp-0xc], 0x0
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x16c6da9a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rax, $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x15a87116c6da9a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555271 <+++info symbol 0x555555555271
binary_search+0008> mov    DWORD PTR [rbp-0x14], edi
   0x555555555274 <+++info symbol 0x555555555274
binary_search+000b> mov    QWORD PTR [rbp-0x20], rsi
   0x555555555278 <+++info symbol 0x555555555278
binary_search+000f> mov    DWORD PTR [rbp-0x18], edx
 → 0x55555555527b <++++info symbol 0x55555555527b
binary_search+0012> mov    DWORD PTR [rbp-0xc], 0x0
   0x555555555282 <+++info symbol 0x555555555282
binary_search+0019> mov    eax, DWORD PTR [rbp-0x18]
   0x555555555285 <+++info symbol 0x555555555285
binary_search+001c> mov    DWORD PTR [rbp-0x8], eax
   0x555555555288 <+++info symbol 0x555555555288
binary_search+001f> mov    eax, DWORD PTR [rbp-0x8]
   0x55555555528b <+++info symbol 0x55555555528b
binary_search+0022> cmp    eax, DWORD PTR [rbp-0xc]
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+26 ────
     21	 }
     22	 
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
     25	   // returns 1 if item is found, 0 if not
           // lo=0x7fff
 →   26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x55555555527b in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x55555555527b → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
27	  int hi = size;  // right end of possible range for item
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x6               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555282  →  <++++info symbol 0x555555555282
binary_search+0019> mov eax, DWORD PTR [rbp-0x18]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x16c6da9a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rax, $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x15a87116c6da9a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555274 <+++info symbol 0x555555555274
binary_search+000b> mov    QWORD PTR [rbp-0x20], rsi
   0x555555555278 <+++info symbol 0x555555555278
binary_search+000f> mov    DWORD PTR [rbp-0x18], edx
   0x55555555527b <+++info symbol 0x55555555527b
binary_search+0012> mov    DWORD PTR [rbp-0xc], 0x0
 → 0x555555555282 <++++info symbol 0x555555555282
binary_search+0019> mov    eax, DWORD PTR [rbp-0x18]
   0x555555555285 <+++info symbol 0x555555555285
binary_search+001c> mov    DWORD PTR [rbp-0x8], eax
   0x555555555288 <+++info symbol 0x555555555288
binary_search+001f> mov    eax, DWORD PTR [rbp-0x8]
   0x55555555528b <+++info symbol 0x55555555528b
binary_search+0022> cmp    eax, DWORD PTR [rbp-0xc]
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
   0x555555555290 <+++info symbol 0x555555555290
binary_search+0027> mov    eax, 0x0
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+27 ────
     22	 
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
     25	   // returns 1 if item is found, 0 if not
     26	   int lo = 0;  // left end of possible range for item
           // size=0x6, hi=0x55555300
 →   27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555282 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555282 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x6               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555282  →  <++++info symbol 0x555555555282
binary_search+0019> mov eax, DWORD PTR [rbp-0x18]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x16c6da9a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rax, $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x15a87116c6da9a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x555555555274 <+++info symbol 0x555555555274
binary_search+000b> mov    QWORD PTR [rbp-0x20], rsi
   0x555555555278 <+++info symbol 0x555555555278
binary_search+000f> mov    DWORD PTR [rbp-0x18], edx
   0x55555555527b <+++info symbol 0x55555555527b
binary_search+0012> mov    DWORD PTR [rbp-0xc], 0x0
 → 0x555555555282 <++++info symbol 0x555555555282
binary_search+0019> mov    eax, DWORD PTR [rbp-0x18]
   0x555555555285 <+++info symbol 0x555555555285
binary_search+001c> mov    DWORD PTR [rbp-0x8], eax
   0x555555555288 <+++info symbol 0x555555555288
binary_search+001f> mov    eax, DWORD PTR [rbp-0x8]
   0x55555555528b <+++info symbol 0x55555555528b
binary_search+0022> cmp    eax, DWORD PTR [rbp-0xc]
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
   0x555555555290 <+++info symbol 0x555555555290
binary_search+0027> mov    eax, 0x0
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+27 ────
     22	 
     23	 int binary_search(int item, int *A, int size) {
     24	   // searches for item in A[0], A[1], ..., A[size-1]
     25	   // returns 1 if item is found, 0 if not
     26	   int lo = 0;  // left end of possible range for item
           // size=0x6, hi=0x55555300
 →   27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555282 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555282 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
29	    if(hi <= lo)
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x6               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x6               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555288  →  <++++info symbol 0x555555555288
binary_search+001f> mov eax, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x16c6da9a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x15a87116c6da9a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555527b <+++info symbol 0x55555555527b
binary_search+0012> mov    DWORD PTR [rbp-0xc], 0x0
   0x555555555282 <+++info symbol 0x555555555282
binary_search+0019> mov    eax, DWORD PTR [rbp-0x18]
   0x555555555285 <+++info symbol 0x555555555285
binary_search+001c> mov    DWORD PTR [rbp-0x8], eax
 → 0x555555555288 <++++info symbol 0x555555555288
binary_search+001f> mov    eax, DWORD PTR [rbp-0x8]
   0x55555555528b <+++info symbol 0x55555555528b
binary_search+0022> cmp    eax, DWORD PTR [rbp-0xc]
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
   0x555555555290 <+++info symbol 0x555555555290
binary_search+0027> mov    eax, 0x0
   0x555555555295 <+++info symbol 0x555555555295
binary_search+002c> jmp    0x5555555552fe <binary_search+149>
   0x555555555297 <+++info symbol 0x555555555297
binary_search+002e> mov    edx, DWORD PTR [rbp-0x8]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+29 ────
     24	   // searches for item in A[0], A[1], ..., A[size-1]
     25	   // returns 1 if item is found, 0 if not
     26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
             // lo=0x0, hi=0x6
 →   29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555288 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555288 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x6               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x6               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555288  →  <++++info symbol 0x555555555288
binary_search+001f> mov eax, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x16c6da9a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry parity adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x15a87116c6da9a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555527b <+++info symbol 0x55555555527b
binary_search+0012> mov    DWORD PTR [rbp-0xc], 0x0
   0x555555555282 <+++info symbol 0x555555555282
binary_search+0019> mov    eax, DWORD PTR [rbp-0x18]
   0x555555555285 <+++info symbol 0x555555555285
binary_search+001c> mov    DWORD PTR [rbp-0x8], eax
 → 0x555555555288 <++++info symbol 0x555555555288
binary_search+001f> mov    eax, DWORD PTR [rbp-0x8]
   0x55555555528b <+++info symbol 0x55555555528b
binary_search+0022> cmp    eax, DWORD PTR [rbp-0xc]
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
   0x555555555290 <+++info symbol 0x555555555290
binary_search+0027> mov    eax, 0x0
   0x555555555295 <+++info symbol 0x555555555295
binary_search+002c> jmp    0x5555555552fe <binary_search+149>
   0x555555555297 <+++info symbol 0x555555555297
binary_search+002e> mov    edx, DWORD PTR [rbp-0x8]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+29 ────
     24	   // searches for item in A[0], A[1], ..., A[size-1]
     25	   // returns 1 if item is found, 0 if not
     26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
             // lo=0x0, hi=0x6
 →   29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555288 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555288 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+n
31	    int mid = (hi + lo) / 2;
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x6               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x6               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555297  →  <++++info symbol 0x555555555297
binary_search+002e> mov edx, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x16c6da9a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x15a87116c6da9a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
   0x555555555290 <+++info symbol 0x555555555290
binary_search+0027> mov    eax, 0x0
   0x555555555295 <+++info symbol 0x555555555295
binary_search+002c> jmp    0x5555555552fe <binary_search+149>
 → 0x555555555297 <++++info symbol 0x555555555297
binary_search+002e> mov    edx, DWORD PTR [rbp-0x8]
   0x55555555529a <+++info symbol 0x55555555529a
binary_search+0031> mov    eax, DWORD PTR [rbp-0xc]
   0x55555555529d <+++info symbol 0x55555555529d
binary_search+0034> add    eax, edx
   0x55555555529f <+++info symbol 0x55555555529f
binary_search+0036> mov    edx, eax
   0x5555555552a1 <+++info symbol 0x5555555552a1
binary_search+0038> shr    edx, 0x1f
   0x5555555552a4 <+++info symbol 0x5555555552a4
binary_search+003b> add    eax, edx
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+31 ────
     26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
             // mid=0x5555, lo=0x0, hi=0x6
 →   31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555297 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555297 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x6               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x6               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x0000555555555297  →  <++++info symbol 0x555555555297
binary_search+002e> mov edx, DWORD PTR [rbp-0x8]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x16c6da9a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x15a87116c6da9a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x55555555528e <+++info symbol 0x55555555528e
binary_search+0025> jg     0x555555555297 <binary_search+46>
   0x555555555290 <+++info symbol 0x555555555290
binary_search+0027> mov    eax, 0x0
   0x555555555295 <+++info symbol 0x555555555295
binary_search+002c> jmp    0x5555555552fe <binary_search+149>
 → 0x555555555297 <++++info symbol 0x555555555297
binary_search+002e> mov    edx, DWORD PTR [rbp-0x8]
   0x55555555529a <+++info symbol 0x55555555529a
binary_search+0031> mov    eax, DWORD PTR [rbp-0xc]
   0x55555555529d <+++info symbol 0x55555555529d
binary_search+0034> add    eax, edx
   0x55555555529f <+++info symbol 0x55555555529f
binary_search+0036> mov    edx, eax
   0x5555555552a1 <+++info symbol 0x5555555552a1
binary_search+0038> shr    edx, 0x1f
   0x5555555552a4 <+++info symbol 0x5555555552a4
binary_search+003b> add    eax, edx
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+31 ────
     26	   int lo = 0;  // left end of possible range for item
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
             // mid=0x5555, lo=0x0, hi=0x6
 →   31	     int mid = (hi + lo) / 2;
     32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x555555555297 in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x555555555297 → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+info local
mid = 21845
lo = 0
hi = 6
+n
32	    if(A[mid] == item)
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x3               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x00005555555552ab  →  <++++info symbol 0x5555555552ab
binary_search+0042> mov eax, DWORD PTR [rbp-0x4]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x16c6da9a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY ADJUST sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x15a87116c6da9a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552a4 <+++info symbol 0x5555555552a4
binary_search+003b> add    eax, edx
   0x5555555552a6 <+++info symbol 0x5555555552a6
binary_search+003d> sar    eax, 1
   0x5555555552a8 <+++info symbol 0x5555555552a8
binary_search+003f> mov    DWORD PTR [rbp-0x4], eax
 → 0x5555555552ab <++++info symbol 0x5555555552ab
binary_search+0042> mov    eax, DWORD PTR [rbp-0x4]
   0x5555555552ae <+++info symbol 0x5555555552ae
binary_search+0045> cdqe   
   0x5555555552b0 <+++info symbol 0x5555555552b0
binary_search+0047> lea    rdx, [rax*4+0x0]
   0x5555555552b8 <+++info symbol 0x5555555552b8
binary_search+004f> mov    rax, QWORD PTR [rbp-0x20]
   0x5555555552bc <+++info symbol 0x5555555552bc
binary_search+0053> add    rax, rdx
   0x5555555552bf <+++info symbol 0x5555555552bf
binary_search+0056> mov    eax, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+32 ────
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
             // mid=0x3, item=0x2a, A=0x00007fffffffdbb0  →  [...]  →  0x0000001b00000011
 →   32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
     37	       lo = mid+1;  // move lo to eliminate 1st half of A
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555552ab in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552ab → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
++context
[H[J+++registers $rax $rbx $rcx $rdx $rsp $rbp $rsi $rdi $rip $r8 $r9 $r10 $r11 $r12 $r13 $r14 $r15 $eflags $cs $ss $ds $es $fs $gs
+++dereference -l 8 0x7fffffffdbd0
[ Legend: Modified register | Code | Heap | Stack | String ]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────
$rax   : 0x3               
$rbx   : 0x0               
$rcx   : 0x00007ffff7d14887  →  0x5177fffff0003d48 ("H="?)
$rdx   : 0x0               
$rsp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rbp   : 0x00007fffffffdbd0  →  0x00007fffffffdc10  →  0x0000000000000001
$rsi   : 0x00007fffffffdbf0  →  0x0000001b00000011
$rdi   : 0x2a              
$rip   : 0x00005555555552ab  →  <++++info symbol 0x5555555552ab
binary_search+0042> mov eax, DWORD PTR [rbp-0x4]
$r8    : 0x00007ffff7e1ca70  →  0x0000000000000000
$r9    : 0x00007fffffffdab5  →  0x16c6da9a00373133 ("317"?)
$r10   : 0x0               
$r11   : 0x246             
$r12   : 0x00007fffffffdd28  →  0x00007fffffffdfc8  →  "/home/liub5/CSSE332-lab-liub5/debug/selection.bin"
$r13   : 0x0000555555555300  →  <++++info symbol 0x555555555300
main+0000> endbr64 
$r14   : 0x0000555555557db0  →  0x0000555555555140  →  <++++info symbol 0x555555555140
__do_global_dtors_aux+0000> endbr64 
$r15   : 0x00007ffff7ffd040  →  0x00007ffff7ffe2e0  →  0x0000555555554000  →  0x00010102464c457f
$eflags: [zero carry PARITY ADJUST sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────
0x00007fffffffdbd0│+0x0000: 0x00007fffffffdc10  →  0x0000000000000001	 ← $rsp, $rbp
0x00007fffffffdbd8│+0x0008: 0x0000555555555443  →  <++++info symbol 0x555555555443
main+0143> test eax, eax
0x00007fffffffdbe0│+0x0010: 0x0000000000000002
0x00007fffffffdbe8│+0x0018: 0x0000000600000006
0x00007fffffffdbf0│+0x0020: 0x0000001b00000011	 ← $rsi
0x00007fffffffdbf8│+0x0028: 0x000000590000002d ("-"?)
0x00007fffffffdc00│+0x0030: 0x0000013d00000064 ("d"?)
0x00007fffffffdc08│+0x0038: 0x15a87116c6da9a00
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────
   0x5555555552a4 <+++info symbol 0x5555555552a4
binary_search+003b> add    eax, edx
   0x5555555552a6 <+++info symbol 0x5555555552a6
binary_search+003d> sar    eax, 1
   0x5555555552a8 <+++info symbol 0x5555555552a8
binary_search+003f> mov    DWORD PTR [rbp-0x4], eax
 → 0x5555555552ab <++++info symbol 0x5555555552ab
binary_search+0042> mov    eax, DWORD PTR [rbp-0x4]
   0x5555555552ae <+++info symbol 0x5555555552ae
binary_search+0045> cdqe   
   0x5555555552b0 <+++info symbol 0x5555555552b0
binary_search+0047> lea    rdx, [rax*4+0x0]
   0x5555555552b8 <+++info symbol 0x5555555552b8
binary_search+004f> mov    rax, QWORD PTR [rbp-0x20]
   0x5555555552bc <+++info symbol 0x5555555552bc
binary_search+0053> add    rax, rdx
   0x5555555552bf <+++info symbol 0x5555555552bf
binary_search+0056> mov    eax, DWORD PTR [rax]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:selection.c+32 ────
     27	   int hi = size;  // right end of possible range for item
     28	   while (1) {
     29	     if(hi <= lo)
     30	       return 0;  // not found
     31	     int mid = (hi + lo) / 2;
             // mid=0x3, item=0x2a, A=0x00007fffffffdbb0  →  [...]  →  0x0000001b00000011
 →   32	     if(A[mid] == item)
     33	       return 1;  // found
     34	     if(item < A[mid])
     35	       hi = mid-1;  // move hi to eliminate 2nd half of A
     36	     else
     37	       lo = mid+1;  // move lo to eliminate 1st half of A
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: "selection.bin", stopped 0x5555555552ab in binary_search (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
[#0] 0x5555555552ab → binary_search(item=42, A=0x7fffffffdbf0, size=6)
[#1] 0x555555555443 → main()
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
+info local
mid = 3
lo = 0
hi = 6
+info args
item = 42
A = 0x7fffffffdbf0
size = 6
+p *A@10
$1 = {17, 27, 45, 89, 100, 317, -958752256, 363360534, 1, 0}
+quit

liub5@DESKTOP-34SBL6U:~/CSSE332-lab-liub5/debug$ valgrind ./selection.bin
==23217== Memcheck, a memory error detector
==23217== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==23217== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==23217== Command: ./selection.bin
==23217==
unsorted list:
         [  100   45   89   27  317   17 ]
list in order:
         [   17   27   45   89  100  317 ]
test if 42 is in the array...
        NO
==23217==
==23217== HEAP SUMMARY:
==23217==     in use at exit: 0 bytes in 0 blocks
==23217==   total heap usage: 1 allocs, 1 frees, 1,024 bytes allocated
==23217==
==23217== All heap blocks were freed -- no leaks are possible
==23217==
==23217== For lists of detected and suppressed errors, rerun with: -s
==23217== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
